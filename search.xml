<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Triage - Installing Free Code Camp Locally</title>
      <link href="/freeCodeCamp/triage-fcc-local-dev-setup/"/>
      <url>/freeCodeCamp/triage-fcc-local-dev-setup/</url>
      
        <content type="html"><![CDATA[<h1 id="Why-Build-Local"><a href="#Why-Build-Local" class="headerlink" title="Why Build Local?"></a>Why Build Local?</h1><p>Although it would be nice to advocate and support local businesses, this is decidedly not about that kind of local infrastructure. Instead, I’ll walk you through my experience building Free Code Camp for my local, Windows 10 Home environment - because when you don’t have Windows 10 Professional, you don’t have Hyper V and Windows wants you to suffer.</p><p>I could have taken the easy route and spun up a virtual machine that supported their Docker installation. But that’s the <em>easy</em> route. I wanted to know the nitty gritty and wanted a taste at the underbelly that made this project work.</p><p>Recently, I worked on two bugfixes for the open-source project. You can read about them <a href="/freeCodeCamp/bugfix-fcc-35751/" title="here">here</a> and <a href="/freeCodeCamp/bugfix-fcc-35791/" title="here">here</a>.</p><!-- Read more --><h2 id="Setting-Up-the-Local-Environment"><a href="#Setting-Up-the-Local-Environment" class="headerlink" title="Setting Up the Local Environment"></a>Setting Up the Local Environment</h2><p>This wasn’t my first rodeo with GitHub projects and I consider myself no stranger to commandline interface git, so I wasn’t expecting there to be any difficulty at this stage. While contributors can easily do work without setting up a local environment, it’s highly recommended for those who are interested in contributing regularly.</p><p>When I opened up the guide to setting freeCodeCamp up locally, I was greeted with this:</p><!-- markdownlint-disable MD034 --><blockquote><!-- markdownlint-enable MD034 --><p>As of 8 March 2019, please consider helping us test our new guide on how to <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/docs/how-to-setup-freecodecamp-locally-using-docker.md" target="_blank" rel="noopener">setup freeCodeCamp locally using Docker</a> instead of using this guide. It should result in fewer, if not zero, errors but we won’t know until enough devs try it.</p><footer><strong>Todd Chaffee (@tchaffee) & Mrugesh Mohapatra (@raisedadead), freeCodeCamp</strong><cite><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/docs/how-to-setup-freecodecamp-locally.md" target="_blank" rel="noopener">Set up freeCodeCamp locally</a></cite></footer></blockquote><p>This is my way of clarifying that <em>I did not use Docker</em> to setup the local environment - <a href="/freeCodeCamp/triage-docker-on-wsl/" title="my attempts resulted in a fruitless four-hour triage attempt that could have been solved by using a virtual machine">my attempts resulted in a fruitless four-hour triage attempt that could have been solved by using a virtual machine</a> to begin with.</p><p>Instead, I went with the legacy approach: build freeCodeCamp locally using MongoDB, Node.js, and npm. This method I knew would work - I’ve had prior experience using my computer for this type of development.</p><h3 id="Forking-the-Repository"><a href="#Forking-the-Repository" class="headerlink" title="Forking the Repository"></a>Forking the Repository</h3><p><img src="/images/posts/bugfix/fcc_fork.png" alt="Screenshot of the forked repository under my account."></p><p>This part was easy; you can find my fork <a href="https://github.com/rimij405/freeCodeCamp" target="_blank" rel="noopener">here</a>.</p><h3 id="Preparing-the-Development-Environment"><a href="#Preparing-the-Development-Environment" class="headerlink" title="Preparing the Development Environment"></a>Preparing the Development Environment</h3><p><img src="/images/posts/bugfix/fcc_cmder.png" alt="Screenshot of the Cmder application."></p><p>I use command line git through git bash; on top of that, I’m using <a href="https://cmder.net/" target="_blank" rel="noopener">Cmder</a> - a neat little console emulator available on Windows - to keep my terminals together. An SSH key has already been set up for my own development environment as well.</p><p><img src="/images/posts/bugfix/fcc_vscode.gif" alt="Screen capture of me typing the following paragraph into Visual Studio."></p><p>I write my code in the same IDE I write my blog posts: <a href="https://code.visualstudio.com" target="_blank" rel="noopener">Visual Studio Code</a>. Microsoft might not be known for it’s open source technology (yet), but, VS Code is licensed under the <a href="https://github.com/Microsoft/vscode/blob/master/LICENSE.txt" target="_blank" rel="noopener">MIT Expat</a> agreement and can be found on their <a href="https://github.com/Microsoft/vscode" target="_blank" rel="noopener">GitHub</a> repository.</p><h3 id="Cloning-a-copy-of-freeCodeCamp"><a href="#Cloning-a-copy-of-freeCodeCamp" class="headerlink" title="Cloning a copy of freeCodeCamp"></a>Cloning a copy of freeCodeCamp</h3><p><img src="/images/posts/bugfix/fcc_git_clone.png" alt="Screenshot of git clone operation information."></p><p>I forgot to clone from my fork the first time I did this and ended up running:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:freeCodeCamp/freeCodeCamp.git fcc</span><br></pre></td></tr></table></figure><p>To fix it, I changed into the directory and switched around the remotes:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> fcc</span><br><span class="line">git remote add upstream git@github.com:freeCodeCamp/freeCodeCamp.git</span><br><span class="line">git remote remove origin</span><br><span class="line">git remote add origin git@github.com:rimij405/freeCodeCamp.git</span><br></pre></td></tr></table></figure><p>You can check your remotes with the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p><img src="/images/posts/bugfix/fcc_git_remote.png" alt="Screenshot of git remotes."></p><p>Seems like all is good. The next step in the guide was to set up an upstream anyway, so, this ended up getting that done for me.</p><h3 id="Building-the-local-copy"><a href="#Building-the-local-copy" class="headerlink" title="Building the local copy"></a>Building the local copy</h3><p>This can be useful for previewing edits to the pages as they would appear on the learning platform.</p><h4 id="Installing-dependencies"><a href="#Installing-dependencies" class="headerlink" title="Installing dependencies"></a>Installing dependencies</h4><p>From the <code>Docker</code> guide, we are required to install the stable version of the <a href="https://docs.docker.com/install/" target="_blank" rel="noopener">community edition</a>, and the latest LTS version of <a href="http://nodejs.org/" target="_blank" rel="noopener"><code>Node.js</code></a>. (We also need <code>npm</code>, but that comes bundled with Node). Docker didn’t end up working out for me. My copy of Windows (Windows 10 Home) doesn’t include Hyper-V; if it did, this would have been much, much easier. Because of this, I had to follow the old-school installation instructions: MongoDB would have to do.</p><h5 id="Node-js-amp-npm"><a href="#Node-js-amp-npm" class="headerlink" title="Node.js &amp; npm"></a>Node.js &amp; npm</h5><p><img src="/images/posts/bugfix/fcc_node_install.png" alt="Screenshot of Node.js installation helper."></p><p>I installed Node.js first because I knew it would be easy. I’ve got Node.js experience - no shenanigans there.</p><h5 id="MongoDB-Community-Edition"><a href="#MongoDB-Community-Edition" class="headerlink" title="MongoDB Community Edition"></a>MongoDB Community Edition</h5><p>Since I’m working from Windows, I followed MongoDB Community Edition’s installation <a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/#install-mdb-edition" target="_blank" rel="noopener">guidelines</a>. I installed MongoDB as a service, but, you may need to install it in a different way for your system. Mongo’s database instance starts as a part of the service installation process, but, since I often work in Git Bash for Windows, I wanted to make sure the <code>mongo</code> and <code>mongod</code> commands were accessible from the <code>PATH</code> environment variable.</p><p>I opened up my <code>.bashrc</code> file and added something along the lines of this to my script:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inside ~/.bashrc, ~/.bash_profile, or ~/.profile</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">"/&lt;...&gt;/MongoDB/Server/&lt;version&gt;/bin"</span> ] ; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">export</span> PATH=<span class="string">"/&lt;...&gt;/MongoDB/Server/&lt;version&gt;/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>What the above script does is check to see if the MongoDB directory exists and the adds it to the <code>PATH</code> variable. Be sure to replace <code>&lt;...&gt;</code> and <code>&lt;version&gt;</code> appropriately when setting this up for yourself.</p><p>After editing the configuration file, either logout and log back into bash or source the file you’ve edited appropriately:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>With that, you can <code>echo &quot;$PATH&quot;</code> to confirm it’s been added correctly. Be sure to wrap the <code>PATH</code> variable in quotes when evaluating to ensure whitespace doesn’t mess with your terminal.</p><p>If you want to see the first element in your PATH variable, you can use the following script - and don’t forget to check your version of Mongo to ensure the installation was correct!</p><p><img src="/images/posts/bugfix/fcc_path_example.gif" alt="Animation of the following bash script being executed in the terminal Git Bash for Windows."></p><!--- Source: https://unix.stackexchange.com/questions/65932/how-to-get-the-first-word-of-a-string --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Get first element in the PATH.</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$PATH</span>"</span> | head -n1 | sed -e <span class="string">'s/:.*$//'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check mongo and mongodb versions, respectively.</span></span><br><span class="line">mongo --version</span><br><span class="line">mongodb --version</span><br></pre></td></tr></table></figure><h4 id="Configure-Dependencies"><a href="#Configure-Dependencies" class="headerlink" title="Configure Dependencies"></a>Configure Dependencies</h4><p>Next up: setting up the environment variables specific to Free Code Camp’s build process.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a copy of the "sample.env" and name it ".env".</span></span><br><span class="line"><span class="comment"># Populate it with the necessary API keys and secrets:</span></span><br><span class="line">copy sample.env .env</span><br></pre></td></tr></table></figure><p>Since the keys in the <code>.env</code> file are not required to be changed in order to run the app locally, I left the default values from sample.env as-is.</p><p><em>(NB: Before editing any of the code, I made sure to checkout a local branch called <code>master-local</code>. I always like to be on the safe side!)</em></p><p>Following that a call to <code>npm ci</code> will install the project’s dependencies. In my scenario, I also had to install <a href="https://github.com/lerna/lerna#readme" target="_blank" rel="noopener"><code>lerna</code></a> globally. Lerna is a package manager’s package manager so-to-speak. It’s really for projects with a large amount of packages to maintain.</p><h5 id="Troubleshooting-Installation"><a href="#Troubleshooting-Installation" class="headerlink" title="Troubleshooting Installation"></a>Troubleshooting Installation</h5><p><strong>Be warned!</strong> If you don’t install lerna prior to executing <code>npm ci</code> it will just hang at the <code>lerna bootstrap</code> command that is called during the installation process. For me, I had to execute <code>lerna exec npm install</code> instead just to get the project’s dependencies to install in the first place.</p><p>In addition, on Windows, there was an issue running the commands from the base system - instead, I needed to start an elevated PowerShell instance with administrator privileges:</p><!--- Reference: https://serverfault.com/questions/464018/run-elevated-powershell-prompt-from-command-line --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Start a new powershell instance in-line, in the current working directory, using Git Bash.</span></span><br><span class="line">powershell <span class="variable">$pwd</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Start an elevated instance in a new window.</span></span><br><span class="line"><span class="built_in">Start-Process</span> PowerShell -Verb RunAs</span><br></pre></td></tr></table></figure><p>From there, I was able to complete the development process!</p><h3 id="Running-Local"><a href="#Running-Local" class="headerlink" title="Running Local"></a>Running Local</h3><p>With a quick call to <code>npm install</code> to ensure everything was properly installed, followed by an <code>npm run bootstrap</code>, the dependencies were ready. My instance of MongoDB was primed and ready - so with <code>npm seed</code>, the database was filled with test data provided by the repository.</p><p>Underneath everything, the curriculum is just a Node.js application. I felt like I recognized what it was that I was looking at when I built a development environment with <code>npm develop</code>. With a welcoming, <code>DONE Compiled successfully in 52127ms</code> - we did it.</p><p>I could now see my copy on the localhost.</p><p><img src="/images/posts/bugfix/fcc_triage_success.png" alt="Screenshot of successful compilation process."></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
          <category> freeCodeCamp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> bugfix </tag>
            
            <tag> education </tag>
            
            <tag> docker </tag>
            
            <tag> triage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Triage - Troubleshooting Docker on WSL</title>
      <link href="/freeCodeCamp/triage-docker-on-wsl/"/>
      <url>/freeCodeCamp/triage-docker-on-wsl/</url>
      
        <content type="html"><![CDATA[<h1 id="I-Can’t-Dock-Here"><a href="#I-Can’t-Dock-Here" class="headerlink" title="I Can’t Dock Here."></a>I Can’t Dock Here.</h1><p>During my journey to the center of the (core) bugfix, I came across some disheartening issues regarding Docker and Windows 10 Home. For the most part, Windows 10 Professional, Windows 10 Enterprise, and Windows 10 Education are all unaffected by this problem. <a href="/freeCodeCamp/bugfix-fcc-35751/" title="I discovered this while trying to build freeCodeCamp locally for a bugfix.">I discovered this while trying to build freeCodeCamp locally for a bugfix.</a></p><p>As full disclosure, this post does <strong>not contain a solution</strong> for the issue that caused the Docker installation process to fail. This post has been made to highlight my process and share the steps I have taken, to help others who come across it.</p><!-- Read more --><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>The most recent and recommended version of Docker is <a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener">Docker Desktop for Windows</a>. For native Windows (and for this operating system alone) it requires Hyper-V virtualization. I am running on a copy of Windows 10 Home - the one distribution that Microsoft provides that doesn’t include this feature.</p><p>While I could get a copy of Windows 10 <em>Education</em> from my <a href="https://www.rit.edu" target="_blank" rel="noopener">university</a>, this wouldn’t be time- or cost-effective. If I could solve the problem on my own desktop, it would be a benefit to myself and others. Besides, freeCodeCamp’s contributors wanted feedback on their <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/docs/how-to-setup-freecodecamp-locally-using-docker.md" target="_blank" rel="noopener">guide to using Docker in order to build the codebase</a>.</p><p>When I opened up the guide to setting freeCodeCamp up locally, I was greeted with this:</p><!-- markdownlint-disable MD034 --><blockquote><!-- markdownlint-enable MD034 --><p>As of 8 March 2019, please consider helping us test our new guide on how to <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/docs/how-to-setup-freecodecamp-locally-using-docker.md" target="_blank" rel="noopener">setup freeCodeCamp locally using Docker</a> instead of using this guide. It should result in fewer, if not zero, errors but we won’t know until enough devs try it.</p><footer><strong>Todd Chaffee (@tchaffee) & Mrugesh Mohapatra (@raisedadead), freeCodeCamp</strong><cite><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/docs/how-to-setup-freecodecamp-locally.md" target="_blank" rel="noopener">Set up freeCodeCamp locally</a></cite></footer></blockquote><p>I had never used Docker before, so this seemed as good a time as any.</p><h2 id="The-Workaround-Attempts"><a href="#The-Workaround-Attempts" class="headerlink" title="The Workaround Attempts"></a>The Workaround Attempts</h2><p>From the <code>Docker</code> guide, we are required to install the stable version of the <a href="https://docs.docker.com/install/" target="_blank" rel="noopener">community edition</a>, and the latest LTS version of <a href="http://nodejs.org/" target="_blank" rel="noopener"><code>Node.js</code></a>. (We also need <code>npm</code>, but that comes bundled with Node). I was able to install Node.js (bringing npm alongside it) with no issue. Since I’m a no-good, very bad Windows user, I needed to install the <a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener">Docker Desktop for Windows</a>, but, when it came to Docker, I quickly found out about the Hyper-V dependency - one that I couldn’t address given my operating system.</p><p>In order to install the correct version of Docker, I would need to install and enable <a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v" target="_blank" rel="noopener">Hyper-V</a> on my system. However, VirtualBox will not work as long as Hyper-V virtualization is enabled. It seemed that <a href="https://superuser.com/questions/1208850/why-virtualbox-or-vmware-can-not-run-with-hyper-v-enabled-windows-10" target="_blank" rel="noopener">I would no longer be able to use my distributions through VirtualBox or VMWare</a>. This, however, was out of date: as of VirtualBox 6.0.0, the releases for VirtualBox (see: <a href="https://www.virtualbox.org/wiki/Changelog" target="_blank" rel="noopener">VirtualBox 6.0 changelog</a>) would include support for the Windows Hypervisor Platform accelerator (WHPX) - the same one that QEMU (see: <a href="https://wiki.qemu.org/ChangeLog/2.12" target="_blank" rel="noopener">QEMU 2.12 changelog</a>) uses. This is, however, experimental. There is some limited support for VirtualBox’s ability to run on systems parallel to Hyper-V, but, you’re <a href="https://forums.virtualbox.org/viewtopic.php?f=6&amp;t=90853" target="_blank" rel="noopener">mileage may vary</a></p><p>I wasn’t the only one interested in running Hyper-V and VirtualBox on the same system. <a href="https://derekgusoff.wordpress.com/2012/09/05/run-hyper-v-and-virtualbox-on-the-same-machine/" target="_blank" rel="noopener">Derek Gusoff</a> found that one could use the <code>bcdedit</code> command in windows in order to edit the <code>hypervisorlaunchtype</code> property to toggle Hyper-V.</p><p>If you set it to <code>off</code> and reboot, you’ll be able to use VirtualBox:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype off</span><br></pre></td></tr></table></figure><p>If you set it to <code>auto</code> and reboot, you’ll be able to use Hyper-V once again:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype auto</span><br></pre></td></tr></table></figure><p>This is remarkably close to Microsoft’s official solution as well: when you want to use VirtualBox, turn Hyper-V off and reboot.</p><p>You can do it through the control panel:</p><p><img src="/images/posts/bugfix/fcc_hyper-v.png" alt="Screenshot of deactivating Hyper-V."></p><p>Or through a neat little command, if executed with elevated user permissions:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Hypervisor</span><br></pre></td></tr></table></figure><p>I could toggle back and forth, but, rebooting takes time and I’d like to avoid having a schedule where I must restart my machine just in order to get work done - I don’t dual-boot operating systems for a reason; it’s inconvienient.</p><p>The problem: I use <a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a> for development of <a href="https://wiki.sugarlabs.org/go/Welcome_to_the_Sugar_Labs_wiki" target="_blank" rel="noopener">Sugar</a> activities on a <a href="https://wiki.sugarlabs.org/go/Sugar_on_a_Stick" target="_blank" rel="noopener">Fedora Spin of Sugar-on-a-Stick</a>. If I can’t run VirtualBox, I’m going to have a bad time.</p><p>It was time to find a workaround.</p><h3 id="The-Brute-Force-Approach"><a href="#The-Brute-Force-Approach" class="headerlink" title="The Brute Force Approach"></a>The Brute Force Approach</h3><p>I figured there was no harm in trying to install the latest software even though I had none of the proper dependencies installed. The good thing is that Docker claimed that Hyper-V would be installed alongside Docker, if we ran the installation manager. The bad thing? I don’t like the fact that you have to log in to get the installer - this takes valuable time!</p><p><img src="/images/posts/bugfix/fcc_docker-install.png" alt="Screenshot of downloading Docker installer."></p><p>After the registration, password generation, captcha, refreshing, clicking on confirmation codes, email verification, and signing in multiple times just to get back to the download page, it felt bad to see this all fall apart. The problem with this approach started as soon as I got to the download page. Installing Docker Desktop for Windows would automatically install Hyper-V - but only if I had a qualifying version of Windows 10 that could support it. This means that <em>Home</em> users have no modern support for using Docker on their systems.</p><p>The fact that VirtualBox couldn’t run parallel to Hyper-V suddenly <em>didn’t</em> matter. The problem, specific to my version of the Windows 10 operating system, means that Hyper-V couldn’t be installed on my machine, even if I wanted to be able to use it. The Docker installer’s first check is to see if your machine has Hyper-V enabled.</p><p><img src="/images/posts/bugfix/fcc_docker-noinstall.png" alt="Screenshot of a failed Docker installer."></p><p><em>Bummer</em>. Even if I didn’t have the need to use VirtualBox, I still wouldn’t have been able to get around Docker Desktop’s need for Hyper-V.</p><h3 id="Docker-Toolbox"><a href="#Docker-Toolbox" class="headerlink" title="Docker Toolbox"></a>Docker Toolbox</h3><p>I didn’t give up hope just yet. At this point, I could have turned back and tried with freeCodeCamp’s other installation strategy (as I would later do), but, I figured it didn’t hurt to try Docker’s <a href="https://docs.docker.com/toolbox/overview/" target="_blank" rel="noopener">legacy installer</a>.<br><img src="/images/posts/bugfix/fcc_docker-toolbox-notes.png" alt="Screenshot of documentation that says: &quot;Legacy desktop solution. Docker Toolbox is for older Mac and Windows systems that do not meet the requirements of Docker Desktop for Mac and Docker Desktop for Windows. We recommend updating to the newer applications, if possible.&quot;"></p><p>“I don’t know if this will work, but it doesn’t hurt to try.” - Me, trying out Docker Toolbox. Basically, Toolbox uses VirtualBox instead of Microsoft’s native Hyper-V. There’s nothing guaranteeing it will run the server in the way we want it to, but, it’s worth a shot.</p><p><img src="/images/posts/bugfix/fcc_docker-toolbox-install.png" alt="Screenshot of shortcuts for Docker Toolbox, after installation."></p><p>I followed the <a href="https://docs.docker.com/toolbox/toolbox_install_windows/" target="_blank" rel="noopener">installation</a> instructions for Docker Toolbox (unchecking the already installed VirtualBox and Git from Windows programs when prompted by the installer).</p><p><img src="/images/posts/bugfix/fcc_docker-toolbox-success.png" alt="Screenshot of Docker Toolbox terminal after verifying installation."></p><p>Then I tested out the <code>docker run hello-world</code> command…</p><p><img src="/images/posts/bugfix/fcc_docker-toolbox-success-2.png" alt="Screenshot of Docker Toolbox terminal after running docker run hello world."></p><p>…and the <code>docker run -it ubuntu bash</code> command.</p><p><img src="/images/posts/bugfix/fcc_docker_ubuntu.png" alt="Screenshot of Docker Toolbox terminal after running docker run -it ubuntu bash."></p><p>For the Docker Toolbox installation, we would also need to change the <code>DOCKER_HOST_LOCATION</code> property in the <code>.env</code> file to the output from the <code>docker-machine ip</code> command. Unfortunately, getting up to this point doesn’t guarantee success.</p><p>When I tried running docker from PowerShell, it was clear that I wasn’t getting the support I needed. Attempting to build the project with the installed docker tools sent back error after error. It was easy enough to get hello-world running, but, I don’t want to have to modify the installation script used in freeCodeCamp’s project.json just to get off the ground.</p><p><em>Sigh</em>. On to the next one.</p><h3 id="Windows-Subsystem-for-Linux"><a href="#Windows-Subsystem-for-Linux" class="headerlink" title="Windows Subsystem for Linux"></a>Windows Subsystem for Linux</h3><p>I decided to take a shot at installing <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener">Windows Subsystem for Linux</a> on my system. (Finally, a feature that all Windows 10 users can try). It seemed pretty straightforward. I tried installing Docker by following this <a href="https://medium.com/devopslinks/docker-running-seamlessly-in-windows-subsystem-linux-6ef8412377aa" target="_blank" rel="noopener">guide</a> from <a href="https://medium.com/@riomartinez" target="_blank" rel="noopener">Rio Martinez</a>.</p><p>I uninstalled Docker Toolbox using Docker’s complete uninstallation steps and gave my system a fresh reboot. From there, I installed the optional WSL feature through PowerShell in order to acitvate the subsystem:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure><p>After searching for a Linux Distro that was compatible with Docker, I settled on Canonical Group Ltd.’s <a href="https://www.microsoft.com/store/p/ubuntu/9nblggh4msv6" target="_blank" rel="noopener">Ubuntu version 18.04 LTS</a>. Ubuntu on Windows seemed promising. I launched the new bash terminal after installing, created my user account, and updated my distro’s packages with:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br></pre></td></tr></table></figure><p>All seemed to be going well, but, by the time I get to the end of it I had errors appearing due to the way Windows mounted WSL to the system. Officially, Docker states that they don’t support the Windows Subsystem for Linux. Ugh - so close yet so far away.</p><h3 id="Host-via-VirtualBox"><a href="#Host-via-VirtualBox" class="headerlink" title="Host via VirtualBox"></a>Host via VirtualBox</h3><p>The largest problem is that Docker doesn’t yet support the Windows for Subsystem Linux - I made a judgement call to stop trying to figure it out at this point, but, I have my hunches as to what would work should you find yourself in this situation.</p><p>I recommend you look at what (FLOSS) operation systems (besides Windows) officially support Docker and create a guest in VirtualBox based on that distro. If the distro has the official support, if you can get it to run on your system, then you should finally be able to get Docker up and running. There may be some caveats, however.</p><p>Technically, my instance of OpenSUSE should have been able to run Docker, but, much of my troubleshooting moved away from being about Docker and more towards fixing my setup for VirtualBox’s network adapter. It’s a time-consuming process and one that I believe represents an edge case. Surely, most others with Hyper-V on their systems would never have to go down this route, assuming Docker works as it says it does.</p><p>For now, I suggest using Ubuntu 16.04 LTS - the latest ‘approved’ distro that Docker claims to support in an official capacity. For now, I’ll be building my code the old fashioned way - setting up a backend with an instance of MongoDB giving persistence to a Node.js server.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
          <category> freeCodeCamp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> bugfix </tag>
            
            <tag> education </tag>
            
            <tag> docker </tag>
            
            <tag> triage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Squashing Bugs - freeCodeCamp Issue #35751 (PR #35809, #35810)</title>
      <link href="/freeCodeCamp/bugfix-fcc-35751/"/>
      <url>/freeCodeCamp/bugfix-fcc-35751/</url>
      
        <content type="html"><![CDATA[<h1 id="Squashing-Bugs-freeCodeCamp-Issue-35751"><a href="#Squashing-Bugs-freeCodeCamp-Issue-35751" class="headerlink" title="Squashing Bugs - freeCodeCamp Issue #35751"></a>Squashing Bugs - freeCodeCamp Issue #35751</h1><p>For my first magic trick:</p><p><img src="/images/posts/bugfix/fcc_logo.svg" alt="Logo for Free Code Camp."></p><p>I’m contributing to <a href="https://www.freecodecamp.org/" target="_blank" rel="noopener">freeCodeCamp</a> and helped make two pull requests (<a href="https://github.com/freeCodeCamp/freeCodeCamp/pull/35809" target="_blank" rel="noopener">#35809</a>, <a href="https://github.com/freeCodeCamp/freeCodeCamp/pull/35810" target="_blank" rel="noopener">#35810</a>) referencing this issue (<a href="https://github.com/freeCodeCamp/freeCodeCamp/issues/35751" target="_blank" rel="noopener">#35751</a>). The nonprofit’s mission is simple: help <em>campers</em> learn to code. For free. (<em>And this time, it’s free as in pizza <strong>and</strong> free as in libre</em>). I hope by documenting my own process, members of the community might get to see an example of what it is that goes on behind the scenes. Before jumping in, I did a little bit of research on freeCodeCamp. <a href="/freeCodeCamp/commarch-fcc/" title="You can read my FLOSS review post here.">You can read my FLOSS review post here.</a></p><!-- Read more --><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>I’m started writing this post as soon as I <a href="https://github.com/freeCodeCamp/freeCodeCamp/issues/35751#issuecomment-480128455" target="_blank" rel="noopener">commented</a>, volunteering to fix the outstanding issue and was quickly welcomed into the community!</p><p>My first step after volunteering was to read the <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/CONTRIBUTING.md" target="_blank" rel="noopener">contributor’s guide</a>. After reviewing their <a href="https://www.freecodecamp.org/code-of-conduct" target="_blank" rel="noopener">Code of Conduct</a> and deciding that I’d want to work locally before submitting my changes, I hopped into their guides on <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/docs/how-to-work-on-coding-challenges.md" target="_blank" rel="noopener">coding challenge</a> and <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/docs/how-to-setup-freecodecamp-locally.md" target="_blank" rel="noopener">local development</a>.</p><p>I was ready to roll. Now would be a good time to review what the issue actually was!</p><h2 id="The-Issue"><a href="#The-Issue" class="headerlink" title="The Issue"></a>The Issue</h2><p>Issue <a href="https://github.com/freeCodeCamp/freeCodeCamp/issues/35751" target="_blank" rel="noopener">#35751</a> was posted about a day ago by Randell Dawson (<a href="https://github.com/RandellDawson" target="_blank" rel="noopener">@RandellDawson</a>) with the title: “Need to add full working solutions for over 100 challenges in the Responsive Web Design section.”</p><p>I’ve copied the pertinent part of the initial post below for your convienience:</p><!-- markdownlint-disable MD034 --><blockquote><!-- markdownlint-enable MD034 --><p>With a quick search, I found there are currently 104 challenges in the Responsive Web Design section that are missing a full working solution. I wan[t] to use this issue to help track who wants to work on adding these and when the PRs get merged.</p><footer><strong>Randell Dawson, freeCodeCamp</strong><cite><a href="https://github.com/freeCodeCamp/freeCodeCamp/issues/35751" target="_blank" rel="noopener">Issue #35751</a></cite></footer></blockquote><p>Don’t worry, I didn’t have to make the solution for all <strong>104</strong> at once. I signed up to tackle the 16 challenges underneath <code>Applied Accessibility</code>. Seems simple enough, right?</p><p>This meant I needed to fix the following files:</p><ul><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/give-links-meaning-by-using-descriptive-link-text.english.md" target="_blank" rel="noopener">give-links-meaning-by-using-descriptive-link-text.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/improve-accessibility-of-audio-content-with-the-audio-element.english.md" target="_blank" rel="noopener">improve-accessibility-of-audio-content-with-the-audio-element.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/improve-chart-accessibility-with-the-figure-element.english.md" target="_blank" rel="noopener">improve-chart-accessibility-with-the-figure-element.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/improve-form-field-accessibility-with-the-label-element.english.md" target="_blank" rel="noopener">improve-form-field-accessibility-with-the-label-element.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/improve-readability-with-high-contrast-text.english.md" target="_blank" rel="noopener">improve-readability-with-high-contrast-text.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/jump-straight-to-the-content-using-the-main-element.english.md" target="_blank" rel="noopener">jump-straight-to-the-content-using-the-main-element.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/know-when-alt-text-should-be-left-blank.english.md" target="_blank" rel="noopener">know-when-alt-text-should-be-left-blank.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/make-elements-only-visible-to-a-screen-reader-by-using-custom-css.english.md" target="_blank" rel="noopener">make-elements-only-visible-to-a-screen-reader-by-using-custom-css.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/make-links-navigable-with-html-access-keys.english.md" target="_blank" rel="noopener">make-links-navigable-with-html-access-keys.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/make-screen-reader-navigation-easier-with-the-footer-landmark.english.md" target="_blank" rel="noopener">make-screen-reader-navigation-easier-with-the-footer-landmark.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/make-screen-reader-navigation-easier-with-the-header-landmark.english.md" target="_blank" rel="noopener">make-screen-reader-navigation-easier-with-the-header-landmark.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/make-screen-reader-navigation-easier-with-the-nav-landmark.english.md" target="_blank" rel="noopener">make-screen-reader-navigation-easier-with-the-nav-landmark.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/use-tabindex-to-add-keyboard-focus-to-an-element.english.md" target="_blank" rel="noopener">use-tabindex-to-add-keyboard-focus-to-an-element.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements.english.md" target="_blank" rel="noopener">use-tabindex-to-specify-the-order-of-keyboard-focus-for-several-elements.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/wrap-content-in-the-article-element.english.md" target="_blank" rel="noopener">wrap-content-in-the-article-element.english.md</a></li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.english.md" target="_blank" rel="noopener">wrap-radio-buttons-in-a-fieldset-element-for-better-accessibility.english.md</a></li></ul><h2 id="Building-the-Local-Environment"><a href="#Building-the-Local-Environment" class="headerlink" title="Building the Local Environment"></a>Building the Local Environment</h2><p>So far, one of the more frustrating development environments that I’ve had to set up. I really wish there was an easier way for the project to run on Windows 10 Home. That being said, you can read about my exploits here.</p><p>That long story is best told separately; but you should know that it compiled successfully and I was greeted with a working site:</p><p><img src="/images/posts/bugfix/fcc_triage_success.png" alt="Screenshot of successful compilation process."></p><p>You can read the steps I took to get the environment ready for development <a href="/freeCodeCamp/triage-fcc-local-dev-setup/" title="here">here</a>.</p><p>Once the local development environment is ready, developers are encouraged to:</p><ol><li>Seed the MongoDB instance with <code>npm run seed</code>.</li><li>Host the platform on a local server with <code>npm run develop</code>.</li><li>Perform all of the JS tests in the system <code>npm test</code>.</li></ol><p>Once changes are made, there is even an interactive tool that can help with creating a proper commit message, with <code>npm run commit</code>.</p><h2 id="Reviewing-the-Challenges"><a href="#Reviewing-the-Challenges" class="headerlink" title="Reviewing the Challenges"></a>Reviewing the Challenges</h2><p>As part of the broader 104 challenges missing full working solutions, the main issue itself has had the work divvied up between different contributors. The platform’s curriculum is broken up into nine sections: six core courses, one section for interview prep, and one additional section for handling certificates. I’ve agreed to work on a sub-section of the first course, Responsive Web Design. My 16 challenges deal with the subject of ‘Applied Accessibility’.</p><p>Of note, my work will only be addressing the issue in the core English translation of the challenges. As per the instructions of the current developers, they always track changes to the solutions through the English version of the challenges so that the translations can be updated without worrying about the core logic behind the code itself.</p><h3 id="Applied-Accessibility"><a href="#Applied-Accessibility" class="headerlink" title="Applied Accessibility"></a>Applied Accessibility</h3><p>According to the curriculum’s introduction on the topic, <em>accessibility</em>, “generally means having web content and a user interface that can be understood, navigated, and interacted with a broad audience.” People of various ability use the internet - if your website contains layer upon layer of beautiful images, video, and audio, without containing the foundational elements that make it accessible, the potential audience that can utilize such a website shrinks.</p><p>There is something to be said about a developer’s responsibility to keeping accessibility a priority - ensuring that a website is inclusive of users that require assitive technology is a crucial part in making sure the internet remains free and open. One could argue that inaccessible software, that cannot be run, read, repaired, or redistributed by everyone is not 100% open.</p><p>On January 18th, 2017, <a href="https://opensource.com/article/17/3/applications-should-be-accessible-all" target="_blank" rel="noopener">the U.S. Federal Registry published the Revised Section 508 amendment to the Rehabilitation Act of 1973</a>. The new standards renewed encouragement for developers to create accessible web and mobile applications. <a href="https://www.w3.org/WAI/standards-guidelines/wcag/" target="_blank" rel="noopener">W3 Consortium’s Web Content Accessibility Guidelines</a> (WCAG) set the international standard for accessibility and provides a number of criteria for developers to use to check their work against.</p><p>The lessons under Applied Accessibility explore these general concepts:</p><ol><li>Writing well-organized code that uses the appropriate markup.</li><li>Ensuring text alternatives exist for non-text and visual content.</li><li>Creating an easily-navigated page that’s keyboard-friendly.</li></ol><h3 id="Completing-a-Challenge"><a href="#Completing-a-Challenge" class="headerlink" title="Completing a Challenge"></a>Completing a Challenge</h3><p>Taking a look at the first challenge in the provided list gives us <a href="https://learn.freecodecamp.org/responsive-web-design/applied-accessibility/give-links-meaning-by-using-descriptive-link-text" target="_blank" rel="noopener">‘Give Links Meaning by Using Descriptive Link Text’</a>.</p><p><img src="/images/posts/bugfix/fcc_challenge1_problem.png" alt="Screenshot of the first challenge being troubleshot."></p><p>The website itself has three sections:</p><ol><li>The description of the prompt and interaction buttons. (On the left in the picture).</li><li>The starter code that the user needs to edit to submit and the output console. (In the middle).</li><li>The preview of the starter code.</li></ol><p>In this particular challenge, the camper is expected to make the page more accessible. Free Code Camp accomplishes this by placing a specific, guided prompt for the user to accomplish. In this instance, the prompt asks users to move, “the anchor (<code>a</code>) tags so they wrap around the text “information about batteries” instead of “Click here”. This improvement will allow users of screen readers to gleam more context from a page’s link when the utilize functionality to read out a list of all the links on the page.</p><p>For each challenge, to familiarize myself with the issue at hand, I try solving the exercise myself. I change the anchor tag in the demo area so it reads as <code>&lt;a href=&quot;&quot;&gt;Click here for more information about batteries&lt;/a&gt;</code>. This should fulfill the prompt, right?</p><p><a href="/images/posts/bugfix/fcc_challenge1_attempt1.png">Screenshot of my first attempt to solve the exercise.</a></p><p>Wrong!</p><p><a href="/images/posts/bugfix/fcc_challenge1_fail1.png">Screenshot of my first failure in solving the exercise.</a></p><p>Instead of passing, the test has failed because ‘Click here’ is still contained by the anchor tag. The platform gives back some helpful feedback for users who might be stuck solving a problem. If the test information doesn’t make it clear enough, users can watch a video, ask for help, or get a hint in order to make progress. Campers can even start the process over by reseting all of the code back to the original state.</p><p>Now, I don’t want to be wrong, so, I move the tag to the right place and submit once more.</p><p><a href="/images/posts/bugfix/fcc_challenge1_success1.png">Screenshot of my first success in solving the exercise.</a></p><p>Seeing as all of the tests have passed, I’m greeted by a big, green checkmark. How fulfilling! If I can complete the challenge, what is it that I’ll need to bugfix next!</p><h3 id="Forming-a-Challenge"><a href="#Forming-a-Challenge" class="headerlink" title="Forming a Challenge"></a>Forming a Challenge</h3><p>It would help to know what makes a challenge and now is a good time to look under the hood to find out more about the problem we’re trying to fix. Challenges aren’t too complicated or difficult to understand: they’re just markdown files (with some YAML syntax here and there). In fact, they’re written in the same way <em>that my own blog posts are written</em>.</p><p>These six sections make up a challenge’s markdown file:</p><ol><li>The YAML header containing challenge metadata.</li><li><code>Description</code> - The challenge’s description.</li><li><code>Instructions</code> - The prompt that explains the challenge users need to solve.</li><li><code>Tests</code> - A fenced code block with a YAML list of assertions.</li><li><code>Challenge Seed</code> - The starting code given that needs to be modified in order to solve.</li><li><code>Solution</code> - The full solution required to solve the problem.</li></ol><p>A challenge is identified by a unique ID, title, and challenge type - all of which are stored in the metadata section. As all challenges will ideally contain a link to a <a href="https://scrimba.com/" title="Platform for streamcasting code." target="_blank" rel="noopener">Scrimba</a> video, the metadata will often include a relevant link in this section as well.</p><p><img src="/images/posts/bugfix/fcc_challenge1_metadata.png" alt="Example of challenge metadata."></p><h3 id="Identifying-the-Bug"><a href="#Identifying-the-Bug" class="headerlink" title="Identifying the Bug"></a>Identifying the Bug</h3><p>The section that we’re most concerned with, however, is the solution section.</p><p><img src="/images/posts/bugfix/fcc_challenge1_solution.png" alt="Example of incorrect solution section."></p><p>A lot of these challenges have <code>//solution required</code> in place of an actual solution! </p><p>These solutions can often be as short as one line of code:</p><p><img src="/images/posts/bugfix/fcc_example1_solution.png" alt="Example of a short solution."></p><p>And in other cases, they can be several lines long:</p><p><img src="/images/posts/bugfix/fcc_example2_solution.png" alt="Example of a long solution."></p><p>The important part is that they remain correct.</p><h2 id="Squashing-the-Bug"><a href="#Squashing-the-Bug" class="headerlink" title="Squashing the Bug"></a>Squashing the Bug</h2><p>The process for fixing these remains simple:</p><ol><li>Solve the exercise.</li><li>Replace the <code>//solution required</code> comment with the full solution.</li><li>Test the curriculum using the <code>npm run test:curriculum</code> command.</li></ol><p>All tests should either return as <code>passing</code> or <code>pending</code>. The results of the <code>test:curriculum</code> script returns the following:</p><p><img src="/images/posts/bugfix/fcc_test1_default.png" alt="Result of tests on local repository with no changes."></p><p>7773 passing tests against 810 pending. We are complete once those 16 solutions move from <code>pending</code> to <code>passing</code>! The curriculum tests takes about 4 minutes to resolve, meaning, it’s more effective to test the changes in bulk, as opposed to testing after each individual modification.</p><p>I knew I was on the right track after fixing the first test to increment those passing tests by 1 to 7774.</p><p><img src="/images/posts/bugfix/fcc_test2_success.png" alt="Result of tests on local repository with one correct change."></p><p>Now only 15 more to go.</p><p>If you were curious to know what a failed test result would look like, you’d get a third notice stating that a test has failed and the script would crash out with an <code>npm ERR! Test failed.</code> message. Luckily, as it is incredibly helpful, it tells you exactly which test failed!</p><p><img src="/images/posts/bugfix/fcc_test3_fail.png" alt="Result of tests on local repository with an incorrect change."></p><p>The good thing is that my own tests will fail and crash out after around 7~10 seconds of terminal silence if I’ve made a mistake since the accessibility exercises are toward the start of the curriculum’s challenges. In this one instance, inactivity in the terminal for more than 4 minutes likely means my work was successful!</p><p>You’re more than welcome to see the exact edits made to the files on the pull request. All challenge fixes were included in one pull request.</p><p><img src="/images/posts/bugfix/fcc_challenges_fixes.png" alt="Screenshot of edits made to all the files requiring solutions."></p><h2 id="Creating-the-Pull-Request"><a href="#Creating-the-Pull-Request" class="headerlink" title="Creating the Pull Request"></a>Creating the Pull Request</h2><p>After completing all of my necessary edits, I just needed to make an appropriate pull request.</p><p>First, created a new branch that followed contributor naming guidelines for this sort of situation and then checked it out:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b fix/add-accessibility-solutions</span><br></pre></td></tr></table></figure><p>Now, I could add my files to the commit.</p><p><img src="/images/posts/bugfix/fcc_commit_files.png" alt="Screenshot of modified files since last commit."></p><p>Wait a second, what are all these <code>*.json</code> files? It turns out, the project doesn’t have a gitignore for stopping the <code>package.json</code> and <code>package-lock.json</code> files that are created whenever we call <code>lerna bootstrap</code> or <code>lerna exec npm install</code>. Lerna will actually execute the <code>npm install</code> command for every subdirectory that has node-modules within it. This strategy allows freeCodeCamp to exist on one large monorepository. The alternative would be splitting each major subdirectory into their own individual repositories and treating them as their own.</p><p>For the most part, I’m seeing these files because I decided to build the project locally. I can <em>safely</em> ignore these files and refrain from adding them to my commit because they are generated as part of the build process. Instead, I want to specifically add the files that I know that I edited. While I could add each individually by name, I can also use a wildcard operator to add all of the markdown files to my commit. Only the challenges are markdown files and the markdown files are the ones I want to commit!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># While in the freeCodeCamp/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/ directory:</span></span><br><span class="line">git add *.md</span><br></pre></td></tr></table></figure><p><img src="/images/posts/bugfix/fcc_commit_files2.png" alt="Screenshot of modified files added to the current commit."></p><p>Now, I can create a commit that is specifically for these edited files. Luckily, the project comes with an <code>npm run commit</code> command to help out.</p><p><img src="/images/posts/bugfix/fcc_missing_script1.png" alt="Missing commit script."></p><p>Turns out that the documentation isn’t quite up to date!</p><p><img src="/images/posts/bugfix/fcc_missing_script2.png" alt="Missing commit script reference."></p><p>I’ll have to make a separate pull request to fix that issue separately. In the meantime, we’ll commit our files in the staging area by hand and then discard all the changes made in the working directory by other files.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Commit the files added to the staging area.</span></span><br><span class="line">git commit -m <span class="string">"fix(curriculum): update accessibility challenges related to issue #35751"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Discard all the other changes made in the working directory by other files.</span></span><br><span class="line">git checkout -- .</span><br></pre></td></tr></table></figure><p>After confirming that all of the files pass the appropriate tests…</p><p><img src="/images/posts/bugfix/fcc_test4_complete.png" alt="Screenshot of all successful tests."></p><p>…I can create the pull request.</p><p><img src="/images/posts/bugfix/fcc_pull1.png" alt="Screenshot of creating a pull request."></p><p>After submission, the pull request will automatically trigger a new Travis CI build using the established continuous integration pipeline.</p><p><img src="/images/posts/bugfix/fcc_pull2.png" alt="Screenshot of submitted pull request and pending Travis CI build results."></p><p>Given enough time, the build validated my pull request’s changes: it was successful!</p><p><img src="/images/posts/bugfix/fcc_pull3.png" alt="Screenshot of a successful Travis CI build."></p><h2 id="Other-Changes"><a href="#Other-Changes" class="headerlink" title="Other Changes"></a>Other Changes</h2><p>Following all this, I notified the maintainers in the original issue (<a href="https://github.com/freeCodeCamp/freeCodeCamp/issues/35751" target="_blank" rel="noopener">#35751</a>) that my pull request (<a href="https://github.com/freeCodeCamp/freeCodeCamp/pull/35809" target="_blank" rel="noopener">#35809</a>) was been submitted. While reading through the thread, I noticed there were some other issues with the accessibility challenges that needed to be reviewed: specifically for <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/avoid-colorblindness-issues-by-using-sufficient-contrast.english.md" target="_blank" rel="noopener">/curriculum/challenges/english/01-responsive-web-design/applied-accessibility/avoid-colorblindness-issues-by-using-sufficient-contrast.english.md@master</a>.</p><p>As pointed out by <a href="https://github.com/huyenltnguyen" target="_blank" rel="noopener">@huyenltnguyen</a> in <a href="https://github.com/freeCodeCamp/freeCodeCamp/issues/35751#issuecomment-481079680" target="_blank" rel="noopener">this comment</a>, JS solutions are not full solutions!</p><p>So I made a quick edit, solved another challenge, staged and commit my changes, and created another pull request (<a href="https://github.com/freeCodeCamp/freeCodeCamp/pull/35810" target="_blank" rel="noopener">#35810</a>) to close out my contributions to this issue.</p><p><img src="/images/posts/bugfix/fcc_pull4.png" alt="Image of pull request pending build process approval."></p><p>With that, this bug is officially squashed. (Pending their acceptance of my pull requests, of course).</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
          <category> freeCodeCamp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> bugfix </tag>
            
            <tag> education </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FLOSS in Review: freeCodeCamp</title>
      <link href="/freeCodeCamp/commarch-fcc/"/>
      <url>/freeCodeCamp/commarch-fcc/</url>
      
        <content type="html"><![CDATA[<h1 id="FLOSS-in-Review-freeCodeCamp"><a href="#FLOSS-in-Review-freeCodeCamp" class="headerlink" title="FLOSS in Review - freeCodeCamp"></a>FLOSS in Review - freeCodeCamp</h1><p>Before I contribute to any organization, I like to do my research to ensure my time is well invested in something that isn’t going to shut down in the next few years. I have a feeling freeCodeCamp will be around for quite a while and I’m excited to see it grow. <a href="/freeCodeCamp/bugfix-fcc-35751/" title="You can read my bugfix post here.">You can read my bugfix post here.</a></p><!-- Read more --><h2 id="About-the-Organization"><a href="#About-the-Organization" class="headerlink" title="About the Organization"></a>About the Organization</h2><p><img src="/images/posts/bugfix/fcc_homepage.png" alt="Banner for Free Code Camp."></p><p>freeCodeCamp is an educational, nonprofit organization founded in October 2014 by teacher, software engineer, and freelance developer <a href="https://www.linkedin.com/in/quincylarson/" target="_blank" rel="noopener">Quincy Larson</a> (<a href="https://twitter.com/ossia" target="_blank" rel="noopener">@ossia</a>). After <a href="https://medium.freecodecamp.com/a-cautionary-tale-of-learning-to-code-my-own-eddb24d9d5a7" target="_blank" rel="noopener">learning how to code</a> in a world without a resource like freeCodeCamp, he ended up creating a globally utilized education platform.</p><h3 id="Community"><a href="#Community" class="headerlink" title="Community"></a>Community</h3><p>If <em>learners</em> are users to <a href="http://one.laptop.org/" target="_blank" rel="noopener">One Laptop per Child</a> (OLPC) and the <a href="https://sugarlabs.org/" target="_blank" rel="noopener">SugarLabs</a> teams, freeCodeCamp has its <em>campers</em>. freeCodeCamp is a community of millions of people who learn to code with an emphasis placed on collaboration and communication. Alongside their online learning platform are in-person study groups in more than 2,000 cities around the world.</p><p>The organization publishes an aggregate column of news from plenty of programmers who write for their publication on <a href="https://medium.freecodecamp.org/" target="_blank" rel="noopener">Medium</a> - at the time of writing this, they are Medium’s largest technical publication. In addition, they host a community <a href="https://forum.freecodecamp.org/" target="_blank" rel="noopener">forum</a> for campers to discuss, learn, and grow together.</p><p>Here are some other resources that they provide:</p><ul><li>A <a href="https://youtube.com/freecodecamp" target="_blank" rel="noopener">YouTube channel</a> with free courses on Python, SQL, Android, and a wide variety of other languages.</li><li>A <a href="https://podcast.freecodecamp.org/" target="_blank" rel="noopener">podcast</a> with technology insights and inspiring stories from developers.</li><li><a href="https://study-group-directory.freecodecamp.org/" target="_blank" rel="noopener">Local study groups</a> around the world, where you can code together in person.</li><li>A comprehensive <a href="https://guide.freecodecamp.org/" target="_blank" rel="noopener">guide to thousands of programming topics</a></li><li>A <a href="https://www.facebook.com/groups/freeCodeCampEarth/permalink/428140994253892/" target="_blank" rel="noopener">Facebook group</a> with over 100,000 members worldwide</li></ul><h3 id="Curriculum"><a href="#Curriculum" class="headerlink" title="Curriculum"></a>Curriculum</h3><p>The online site offers several areas of study, offering certification for several specific fields of computer science study should a camper complete a course’s final five projects. (Most of their courses are estimated to take about 300 hours for the average camper).</p><p>Campers can receive certification for these <a href="https://learn.freecodecamp.org/" target="_blank" rel="noopener">courses</a>:</p><ul><li>Responsive Web Design</li><li>JavaScript Algorithms &amp; Data Structures</li><li>Front-end Libraries</li><li>Data Visualization</li><li>APIs &amp; Microservices</li><li>Information Security &amp; Quality Assurance</li></ul><p>Each of these core certifications are further broken up into a series of subtopics that are easier for campers to manage. Completion of all six of these certifications will net a camper a, “Full Stack Development Certification.” You can get that after you’ve completed around 1,800 hours of coding - and that’s if you didn’t make any mistakes and get stuck debugging.</p><h3 id="License-s"><a href="#License-s" class="headerlink" title="License(s)"></a>License(s)</h3><p>freeCodeCamp is a donor-supported 501(c)(3) nonprofit organization that maintains an accessible, free full-stack web development curriculum while also maintaining the robust software that keeps their learning platform operational. There are separate licenses for the curriculum itself and for the computer software. On both accounts, however, the Free Software Foundation would approve of freeCodeCamp as being both free as in <em>pizza</em> and free as in <em>liberty</em>. (<em>viva la libre</em>).</p><p><strong>Disclaimer: I am not a lawyer.</strong></p><h4 id="The-Software-Modified-BSD-License"><a href="#The-Software-Modified-BSD-License" class="headerlink" title="The Software - Modified BSD License"></a>The Software - Modified BSD License</h4><p>The computer software is licensed under the <a href="https://opensource.org/licenses/BSD-3-Clause" target="_blank" rel="noopener">BSD 3-Clause “New”, “Modified”, or “Revised” License</a> license. The <a href="https://github.com/freeCodeCamp/freeCodeCamp" target="_blank" rel="noopener">source</a> is accessible from their GitHub repository.</p><p>A permissive agreement similar to the 2-clause BSD license, it states that source and binary code is redistributable, with or without modification, so long as the copyright notice is retained and the name of the copyright holders are not used to endorse or promote products derived from the software itself.</p><p>The <a href="https://www.fsf.org/" target="_blank" rel="noopener">Free Software Foundation</a>‘s (FSF) Licensing and Compliance Lab states that the Modified BSD license is <a href="https://www.gnu.org/licenses/license-list.en.html" target="_blank" rel="noopener">compatible with the GNU GPL</a>. (FSF makes mention that the Modified BSD license can be easily confused for the <a href="https://www.gnu.org/licenses/license-list.en.html#OriginalBSD" target="_blank" rel="noopener"><em>original</em> BSD license</a>; the fundamentally equivalent <a href="https://directory.fsf.org/wiki/License:X11" target="_blank" rel="noopener">X11 license</a> or <a href="https://directory.fsf.org/wiki/License:Apache-2.0" target="_blank" rel="noopener">Apache 2.0</a> are preferable).</p><h4 id="The-Curriculum-Attribution-ShareAlike-4-0-International-License"><a href="#The-Curriculum-Attribution-ShareAlike-4-0-International-License" class="headerlink" title="The Curriculum - Attribution-ShareAlike 4.0 International License"></a>The Curriculum - Attribution-ShareAlike 4.0 International License</h4><p>The learning resources are also kept with the source in their own <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/curriculum" target="_blank" rel="noopener"><code>/curriculum</code></a> and <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/guide" target="_blank" rel="noopener"><code>/guide</code></a> subdirectories. The materials found within these folders are under the <a href="https://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener">Creative Commons Attribution-ShareAlike 4.0 International license</a> (CC BY-SA 4.0). Users are free to share and adapt any of the curriculum and guide material under the terms of the agreement.</p><p>The Free Software Foundation lists both the Creative Commons Attribution 4.0 (CC BY 4.0) and the CC BY-SA 4.0 as free licenses, however, neither should be used on software. While the CC BY 4.0 is fully compatible with all versions of the GNU GPL, CC BY-SA 4.0 is one-way compatible with the GNU GPL version 3. This means while you may license modified versions of CC BY-SA 4.0 material as GNU GPL version 3, you cannot relicense GPL 3 licensed works under CC BY-SA 4.0.</p><hr><h2 id="Project-Health"><a href="#Project-Health" class="headerlink" title="Project Health"></a>Project Health</h2><h3 id="Structure"><a href="#Structure" class="headerlink" title="Structure"></a>Structure</h3><p><img src="/images/posts/bugfix/fcc_git_clone.png" alt="Screenshot of git clone operation information."></p><p>Overall, the project is doing very well. The repository size is currently settling at a nice 110.5 MB. It doesn’t take too long to clone if you have a good internet connection, but, given the focus on providing a quality educational experience for a global population, some might be looking at a longer wait. Luckily, this size is only a barrier for those who want to contribute code. Campers around the world with access to an internet connection will find that the platform itself is pared down to the minimal content per page.</p><p>There are <a href="https://github.com/freeCodeCamp/freeCodeCamp/branches" target="_blank" rel="noopener">three branches</a> for the project’s <a href="https://github.com/freeCodeCamp/freeCodeCamp" target="_blank" rel="noopener">monorepository</a>: <a href="https://github.com/freeCodeCamp/freeCodeCamp" target="_blank" rel="noopener"><code>master</code></a>, <a href="https://github.com/freeCodeCamp/freeCodeCamp/tree/production-current" target="_blank" rel="noopener"><code>production-current</code></a>, and <a href="https://github.com/freeCodeCamp/freeCodeCamp/tree/production-legacy-2018" target="_blank" rel="noopener"><code>production-legacy-2018</code></a>. Aside from this main project, there are over 100 repositories underneath the umbrella organization (<a href="https://github.com/freeCodeCamp" target="_blank" rel="noopener">take a look at them here</a>).</p><p>There are over 250 active and over 13,000 closed <a href="https://github.com/freeCodeCamp/freeCodeCamp/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc" target="_blank" rel="noopener">issues</a> alongside over 2,500 open and over 19,300 <a href="https://github.com/freeCodeCamp/freeCodeCamp/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-desc" target="_blank" rel="noopener">pull requests</a>, all at the time of writing. The most recent pull request was made <a href="https://github.com/freeCodeCamp/freeCodeCamp/pull/35759" target="_blank" rel="noopener">7 minutes ago</a>! With over 22,567 commits made to master, it’s a decently large project for only having been started in <a href="https://github.com/freeCodeCamp/freeCodeCamp/tree/7a80dfe1684664cefd2923bdbb329dcb9a48dc4f" target="_blank" rel="noopener">2013, from a <code>.gitignore</code>, <code>LICENSE</code>, and a <code>README</code> markdown file.</a>.</p><p><img src="/images/posts/bugfix/fcc_language_distribution.png" alt="Screenshot of contribution programming language distribution statistics."></p><p>The project is a web application backed by JavaScript, HTML, and CSS. The small percentage of Shell scripts written are used to set up a Docker container for a server hosting the learning platform. According to Stack Overflow’s <a href="https://insights.stackoverflow.com/survey/2018#technology" target="_blank" rel="noopener">Developer Survey Results (2018)</a>, 69.8% of the 100,000 developers surveyed reported <a href="https://insights.stackoverflow.com/survey/2018#most-popular-technologies" target="_blank" rel="noopener">JavaScript as the most popular programming, scripting, and/or markup language</a>. (<a href="https://insights.stackoverflow.com/survey/2018#most-loved-dreaded-and-wanted" target="_blank" rel="noopener">Rust, Kotlin, Python, TypeScript, Go, and Swift were all more loved, however</a>). These signs suggest that the languages supporting freeCodeCamp’s infrastructure are going to be around for years to come.</p><p>A quick look at the project’s <a href="https://github.com/freeCodeCamp/freeCodeCamp/network/dependencies" target="_blank" rel="noopener">dependency graph</a> reveals over 800 dependencies - but this number doesn’t account for redundancies. The tool scans the project’s package.json files in order to find dependencies and links them to github repositories when possible. It’s a Node.js project at heart, so, expect it to have the same kind of <a href="https://docs.npmjs.com/auditing-package-dependencies-for-security-vulnerabilities" target="_blank" rel="noopener">vulnerabilities</a>.</p><p>Overall the platform is built upon a Node.js based API server, a set of React based client applications, and a set of scripts that are used to evaluate the front-end projects.</p><h3 id="Leadership"><a href="#Leadership" class="headerlink" title="Leadership"></a>Leadership</h3><p>If anyone were to be the <a href="https://en.wikipedia.org/wiki/Benevolent_dictator_for_life" target="_blank" rel="noopener">benelevolent dictator for life</a>, it’d be Quincy. As both the founder and original core contributor, he has the most commits across the total life of the project and is still active (although, not nearly as active as he was when he started out). Anyone who completes at least 10 commits would be within the top 100 contributors. 70 or more gets you to the top twenty. 187 or more will get you to the top ten. And roughly 500 commits will get you top five.</p><p>It’s not necessarily about the lines of code you write either. The third contributor on the list, (<a href="https://github.com/Bouncey" target="_blank" rel="noopener">@Bouncey</a>) has removed 1,159,292 lines of code and contributed 1,404,038 lines in return - much more than Quincy has. He’s not the only mulit-million line contributor on the project <em>who is still active</em>. While they have certainly done <em>a lot</em> of work, freeCodeCamp welcomes contributors.</p><p>Alongside that, like any good educational institution, freeCodeCamp takes measures to help fight against cyberbullying and toxicity over the internet. Their <a href="https://www.freecodecamp.org/code-of-conduct" target="_blank" rel="noopener">Code of Conduct</a> is, “strictly enforced,” according to their contribution guide.</p><p>But how exactly does the curriculum see change? Is there one person in charge of everything, meticulously planning? No! The curriculum is always being improved in response to user feedback - the community is just as important as the engineers behind it. Many go on to contribute back to the code that helped support their earliest learning attempts. <a href="https://twitter.com/ossia/status/1112737225496629249" target="_blank" rel="noopener">Instead of preparing for an April Fool’s joke</a>, Quincy and the others worked towards building out a <a href="https://www.freecodecamp.org/forum/t/help-us-build-version-7-0-of-the-freecodecamp-curriculum/263546" target="_blank" rel="noopener">roadmap for version 7.0 of the curriculum</a>.</p><p>If you’re interested in contributing to the new project, you can see <a href="https://www.freecodecamp.org/forum/t/freecodecamp-curriculum-7-0-faqs/269346" target="_blank" rel="noopener">this list of frequently asked questions</a> for more information on how to get started.</p><h3 id="Contribute"><a href="#Contribute" class="headerlink" title="Contribute"></a>Contribute</h3><p>If you’re interested in contributing to this project, it can be daunting to see all of the work put in by the over 3,446 contributors on the main repository alone. There are tons of ways that you can contribute!</p><p>As with any open source project, get started by <a href="https://www.freecodecamp.org/signin" target="_blank" rel="noopener">joining the community</a> and <a href="https://learn.freecodecamp.org/" target="_blank" rel="noopener">using their platform</a>. Contribution doesn’t have to mean programming and extending the open source codebase - it can mean answering questions for other campers, providing feedback, captioning YouTube channel videos, editing articles, fixing typos, and more.</p><p>If you find any bugs, be sure to follow their instructions on <a href="https://www.freecodecamp.org/forum/t/how-to-report-a-bug/19543" target="_blank" rel="noopener">their forum post about the subject</a>.</p><p>If you find any security issues - <em>don’t post it on social media or the GitHub issue tracker</em>. Email <a href="mailto:security@freecodecamp.org" target="_blank" rel="noopener">security@freecodecamp.org</a> and get them to look at it through there, away from prying eyes that can exploit those vulnerabilities.</p><p>If you’re looking for something more focused on the codebase, there are plenty of <a href="https://github.com/freeCodeCamp/freeCodeCamp/labels" target="_blank" rel="noopener">labels</a> available to tag issues and pull requests as well. In particular, <a href="https://github.com/freeCodeCamp/freeCodeCamp/labels/first%20timers%20welcome" target="_blank" rel="noopener"><code>firsttimerswelcome</code></a> and <a href="https://github.com/freeCodeCamp/freeCodeCamp/labels/help%20wanted" target="_blank" rel="noopener"><code>helpwanted</code></a> are open to everyone and permission is not required to work on them.</p><p>Start by reading through their <a href="https://github.com/freeCodeCamp/freeCodeCamp/blob/master/CONTRIBUTING.md" target="_blank" rel="noopener">contribution guidelines</a>.</p><p><img src="/images/posts/bugfix/fcc_acknowledgements.png" alt="Picture of other contributors welcoming me to the fold!"></p><p><em>Respond to an issue and take a crack at it!</em></p><a href="/freeCodeCamp/bugfix-fcc-35751/" title="Trust me if I could do it, you can too.">Trust me if I could do it, you can too.</a><hr>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
          <category> freeCodeCamp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> bugfix </tag>
            
            <tag> education </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quicklook: FLOSS Alternatives to OpenAL</title>
      <link href="/blog/hfoss/quicklook-openal/"/>
      <url>/blog/hfoss/quicklook-openal/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenAL"><a href="#OpenAL" class="headerlink" title="OpenAL"></a>OpenAL</h1><p><a href="https://www.openal.org/" target="_blank" rel="noopener">OpenAL</a> is a cross-platform 3D audio API for software applications that require audio. There’s just one thing: it’s open as in <em>open-API</em> not <em>open-source</em>. OpenAL, like OpenGL, attempts to avoid being vendor-specific. That’s great for interoperability, but, not so great for the tenets of free software.</p><hr><h2 id="OpenAL-Soft"><a href="#OpenAL-Soft" class="headerlink" title="OpenAL Soft"></a>OpenAL Soft</h2><p><a href="http://openal-soft.org/" target="_blank" rel="noopener">OpenAL Soft</a> is a fork of the OpenAL project, way back from when it was open-source on an SVN repository. OpenAL Soft’s [source] is hosted on GitHub and is provided under the <a href="https://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License" target="_blank" rel="noopener">GNU Lesser General Public License</a> (LGPL).</p><h3 id="Functionality"><a href="#Functionality" class="headerlink" title="Functionality"></a>Functionality</h3><p>For the most part, it’s like OpenAL, except for some important differences in terms of support for certain extensions (like it’s lack of support for Vorbis and MP3).</p><h3 id="Contributions"><a href="#Contributions" class="headerlink" title="Contributions?"></a>Contributions?</h3><p>You can get in touch with the developers of OpenAL Soft with the same <a href="https://openal-soft.org/" target="_blank" rel="noopener">mailing list</a> that you would use for OpenAL. Although the OpenAL project itself <em>is</em> free-of-cost, it isn’t open-source. Despite this, the community hasn’t split over a hostile fork - they embrace one another. There are about 35 contributors in total, but, no explicit contribution guides exist. Suggestions are to get in touch with the developers through the mailing list.</p><hr><h2 id="Port-Audio"><a href="#Port-Audio" class="headerlink" title="Port Audio"></a>Port Audio</h2><p><a href="http://www.portaudio.com/" target="_blank" rel="noopener">PortAudio</a>, on the other hand, is a cross-platform, open-source audio I/O library. Originally released under a custom, permissive license, the most recent version was released under the <a href="http://opensource.org/licenses/mit-license.php" target="_blank" rel="noopener">MIT License</a>.</p><h3 id="Functionality-1"><a href="#Functionality-1" class="headerlink" title="Functionality"></a>Functionality</h3><p>The library itself, “provides a very simple API for recording and/or playing sound using a simple callback function or blocking read/write interface.” Notably, it’s not suggested to use this library for file I/O - it has no support for reading or writing formatted audio files like .wav and .aiff. Instead, </p><h3 id="Contributions-1"><a href="#Contributions-1" class="headerlink" title="Contributions?"></a>Contributions?</h3><p>The project uses <a href="http://www.assembla.com/" target="_blank" rel="noopener">Assembla</a> for hosting its <a href="https://www.assembla.com/spaces/portaudio/git/source" target="_blank" rel="noopener">source</a> via a git repository. If you’re interested in <a href="http://www.portaudio.com/volunteer.html" target="_blank" rel="noopener">contributing</a> to Port Audio, they are seeking experienced ‘C’ audio developers, writers and documentation experts, and engineers with unit testing and continuous integration experience.</p><p>PortAudio maintains a <a href="http://www.portaudio.com/people.html" target="_blank" rel="noopener">partial list of contributors</a> on its website. A <a href="http://www.portaudio.com/contacts.html" target="_blank" rel="noopener">mailing list</a> and its archive is also facilitated through the website. Bug reports can be submitted through their <a href="https://app.assembla.com/spaces/portaudio/tickets/realtime_list" target="_blank" rel="noopener">ticket tracker</a>. </p><hr><h2 id="RtAudio"><a href="#RtAudio" class="headerlink" title="RtAudio"></a>RtAudio</h2><p>[RtAudio] is a set of C++ classes that provide a common, cross-platform API for realtime audio input/output. The RtAudio license is similar (but not the same) as the MIT License. It is, however, undeniably open-source.</p><h3 id="Functionality-2"><a href="#Functionality-2" class="headerlink" title="Functionality"></a>Functionality</h3><p>The library was designed with the following objectives:</p><ul><li>object-oriented C++ design.</li><li>simple, common API across all supported platforms.</li><li>only one source and one header file for easy inclusion in programming projects.</li><li>allow simultaneous multi-api support.</li><li>support dynamic connection of devices.</li><li>provide extensive audio device parameter control.</li><li>allow audio device capability probing.</li><li>automatic internal conversion for data format, channel number representation, (de)interleaving, and byte-swapping.</li></ul><h3 id="Contributions-2"><a href="#Contributions-2" class="headerlink" title="Contributions?"></a>Contributions?</h3><p>You can view the <a href="https://github.com/thestk/rtaudio" target="_blank" rel="noopener">source</a> on RtAudio’s GitHub repository. There are about <a href="https://github.com/thestk/rtaudio/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc" target="_blank" rel="noopener">19 open issues</a> on the project’s issue tracker, with the <a href="https://github.com/thestk/rtaudio/issues/196" target="_blank" rel="noopener">most recent one</a> being written one day prior (at the time of writing this blog post).</p><h2 id="libsndfile"><a href="#libsndfile" class="headerlink" title="libsndfile"></a>libsndfile</h2><p><a href="http://www.mega-nerd.com/libsndfile/" target="_blank" rel="noopener">libsndfile</a>. It’s released under the terms of the GNU Lesser General Public License (LGPL) - you can use libsndfile with any software as long as it’s used as a dynamically loaded library and it abides by a small number of other conditions. </p><h3 id="Functionality-3"><a href="#Functionality-3" class="headerlink" title="Functionality"></a>Functionality</h3><p>libsndfile is a C library for reading and writing files containing sampled audio data. It is designed to allow the reading and writing of many different sampled sound file formats (such as MS Windows WAV and the Apple/SGI AIFF format) through one standard library interface. During read and write operations, formats are seamlessly converted between the format the application program has requested or supplied and the file’s data format.</p><p>This doesn’t playback audio, but, it does the crucial work involved in file I/O and format conversion.</p><h3 id="Contributions-3"><a href="#Contributions-3" class="headerlink" title="Contributions?"></a>Contributions?</h3><p>libsndfile was created by <a href="mailto:erikd@mega-nerd.com" target="_blank" rel="noopener">Erik de Castro Lopo</a>. You can submit bugs by submitting a ticket through the project’s <a href="https://github.com/erikd/libsndfile/issues" target="_blank" rel="noopener">issue tracker</a>. You can find the source <a href="https://github.com/erikd/libsndfile" target="_blank" rel="noopener">here</a>. You can read more about contributing <a href="https://github.com/erikd/libsndfile/blob/master/CONTRIBUTING.md" target="_blank" rel="noopener">here</a>.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> game development </tag>
            
            <tag> quicklook </tag>
            
            <tag> audio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Closing Heart of the Open Source</title>
      <link href="/blog/hfoss/discourse-osculture/"/>
      <url>/blog/hfoss/discourse-osculture/</url>
      
        <content type="html"><![CDATA[<h1 id="The-Closing-Heart-of-the-Open-Source"><a href="#The-Closing-Heart-of-the-Open-Source" class="headerlink" title="The Closing Heart of the Open Source"></a>The Closing Heart of the Open Source</h1><p>There was a time when ‘open’ software wasn’t synonymous with open source and far removed from the discussions of free (as in <em>libre</em>) software. <a href="https://en.wikipedia.org/wiki/Open_system_(computing" target="_blank" rel="noopener">Open systems</a>) were popularized in the 1980s, when interoperability and portability between proprietary and third-party software was a rarity. <a href="https://en.wikipedia.org/wiki/Open_data" target="_blank" rel="noopener">Open data</a> pushes for the freedom to republish and use data, similar to the open source movement. </p><p>Recently, I’ve come across some articles that have flouted another type of ‘open’ - the <a href="https://en.wikipedia.org/wiki/Open-core_model" target="_blank" rel="noopener">open core</a> model.</p><h2 id="Open-Core-Model"><a href="#Open-Core-Model" class="headerlink" title="Open Core Model"></a>Open Core Model</h2><p>The open-core model is a business model. Commercially-produced open source software is released with a ‘core’, feature-limited version parallel to a proprietary, feature complete version.</p><p>(Examples: <a href="https://www.mongodb.com/" target="_blank" rel="noopener">MongoDB</a>, <a href="https://about.gitlab.com/" target="_blank" rel="noopener">GitLab</a>, <a href="https://www.mysql.com/" target="_blank" rel="noopener">MySQL</a>)</p><p>There’s a lot of controversy surrounding the open core model. MongoDB, in its interest in protecting its bottom line, changed the software’s license from the open source Affero General Public License (AGPL) to the ‘not-so-open-source’ Server Side Public License (SSPL). While it had tried to court the Open Source Initiative’s blessing for the SSPL, MongoDB recently just gave up. They’re <a href="https://www.infoworld.com/article/3366297/open-source-licenses-may-not-matter-so-much-any-more.html" target="_blank" rel="noopener">sticking with the SSPL</a>, with their open core model, and to the <em>man</em>.</p><h2 id="Shifting-Landscapes"><a href="#Shifting-Landscapes" class="headerlink" title="Shifting Landscapes"></a>Shifting Landscapes</h2><p>The larger discussion is that open source is changing. MongoDB is one popular community that has placed a large financial investment in its open source project. Whether or not the actual license it is released under is considered ‘open-source’ by the Open Software Initiative, it isn’t going away.</p><p>When an organization behind MongoDB spends millions of dollars on investment on an open-source project <em>while also</em> seeking investment, it makes <em>sense</em> that there would be some anxiety when proprietary services like AWS (Amazon) and Azure (Microsoft) utilize the software without also contributing back to the codebase.</p><p>(One could be snarky and mention that this problem wouldn’t exist for developers of free <em>libre</em> software…but that isn’t changing the current market).</p><h2 id="The-Culture-War"><a href="#The-Culture-War" class="headerlink" title="The Culture War"></a>The Culture War</h2><p>Steve Klabnik (<a href="https://github.com/steveklabnik" target="_blank" rel="noopener">@steveklabnik</a>), a core developer to the Rust language, recently took stock on the <a href="https://words.steveklabnik.com/the-culture-war-at-the-heart-of-open-source" target="_blank" rel="noopener"><em>culture war</em></a> in the open source community. </p><pre><code>&quot;Somewhere along the way, Open Source ran into a problem that many movements face: the members of the movement no longer understood the ideology that created the movement in the first place.&quot;</code></pre><p>While Klabnik has identified the, “rot,” affecting the culture as being endemic to and intertwined with its roots in the earliest days of advocacy for Free software, it’s important to consider the impact that the next generation has on the day-to-day.</p><h3 id="The-iGeneration"><a href="#The-iGeneration" class="headerlink" title="The iGeneration?"></a>The iGeneration?</h3><p>Are we just a byproduct of the times? I often wonder if we embrace practicality as a means of rationalizing how broken the world can be. Is my generation focused on solving problems and finding fulfillment with the software we build? Or are we interested in padding our bottom line and egos by contributing to open source software with the expectations of compensation?</p><p>The truth is likely not to be found in swath generalizations. It’s true that some junior developers might not be knowledgeable about the philosophical background behind <em>libre</em> software culture and <em>open-source</em> culture, however, it doesn’t mean that developers aren’t thinking of the same problems. </p><p>The perspective has simply changed because the global, interconnected community of developers has expanded. Accessible educational materials on programming has contributed to the growth of developers from low-income and minority populations. I know, because, that’s how I became a developer.</p><h3 id="Practical-Programming"><a href="#Practical-Programming" class="headerlink" title="Practical Programming"></a>Practical Programming</h3><p>I suspect that programming for people like me is no more than a means to an end. For those who make a certain amount of money to feel income, housing, and job security, daily concerns might consist of wish fulfillment. Try convincing a programmer who’s struggling to make ends meet to care about why the software they use is free. They won’t care about language like <em>libre</em> and <em>open-source</em> - they care about the practical usage. </p><p>“Can I use this piece of software for free?” If the answer’s anything short of a solid, “Yes,” there’s a good chance they’ll just keep looking or roll their own solution. Many don’t have the experience in understanding license and copyright law. Many more are working for companies that hire them to accomplish a particular task.</p><p>It’s not that these people haven’t existed - the (welcomed) accessibility to educational material has simply expanded their representation within the broader context. More and more, people visualize the technology industry as a pathway to social mobility.</p><h2 id="Is-it-Just-Business"><a href="#Is-it-Just-Business" class="headerlink" title="Is it Just Business"></a>Is it Just Business</h2><p>According to Tony Baer, <a href="https://www.zdnet.com/article/open-source-growing-pains-is-open-core-the-answer/" target="_blank" rel="noopener">Wall Street firms are turning to open source</a> to avoid reinventing the wheel. The reason is simple: it’s cheaper. We live in an increasingly accessible world where the <a href="https://www.forbes.com/sites/margueritacheng/2019/02/19/the-future-of-wealthtech/#6b8d8d5f35e6" target="_blank" rel="noopener"><em>wealthtech</em></a> industry is rapidly growing. </p><p>Why build a proprietary framework when you can find a robust piece of software on GitHub, with a commercial compatible license, clear documentation, and a strong developer community? The answer: open-source software is built harder, better, faster, stronger - at least in comparison to proprietary software that can require a large amount of capital and maintainence. When your software is closed, developers can’t learn how to maintain it until after they are hired.</p><p>Open-core is asymptomatic of the larger problem behind both incentivizing contributions and keeping full-time support as a practical way to make a livelihood. The more we see businesses embrace open-source for the practicality of a better bottom line, the further we move away from the heart of the culture. That <em>heart</em>, in essence, is closing.</p><h2 id="What-Next"><a href="#What-Next" class="headerlink" title="What Next?"></a>What Next?</h2><p>This is an ongoing discussion; it’s clear that open-source is going to remain in one form or another. Developers who are interested in furthering the conversation and have the bandwidth to do so will continue to question the balance between compensation and contribution.</p><p>Software is political in nature. The <a href="https://opensourceinfra.org/" target="_blank" rel="noopener">infrastructure</a> of the internet is <a href="https://www.fordfoundation.org/media/2976/roads-and-bridges-the-unseen-labor-behind-our-digital-infrastructure.pdf" target="_blank" rel="noopener">paved</a> with open-source technology. Developers are embracing the <a href="http://opensourcebridge.org/" target="_blank" rel="noopener">community</a> that open-source culture built and challenging the assumptions that have informed the conversation surrounding free software. If developers have a blurry understanding of what differentiates <em>free</em> from <em>open-source</em>, it doesn’t mean that either will disappear. It’s far more likely, that we’ll see new, creative approaches that attempt to balance the pragmatic needs and desires of developers with the desire to have free software. The developers that want to be compensated for their work might not have an easy time creating a system that is non-controversial and perfect, but, the conversation is happening.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> culture </tag>
            
            <tag> discourse </tag>
            
            <tag> community </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quicklook: What&#39;s The Scoop?</title>
      <link href="/blog/hfoss/quicklook-scoop/"/>
      <url>/blog/hfoss/quicklook-scoop/</url>
      
        <content type="html"><![CDATA[<h1 id="What’s-the-Scoop"><a href="#What’s-the-Scoop" class="headerlink" title="What’s the Scoop?"></a>What’s the Scoop?</h1><p><a href="https://opensource.microsoft.com/" target="_blank" rel="noopener">Microsoft’s releasing more open-source software</a>, but, everyone knows it doesn’t matter if your distro doesn’t have a good shell.</p><p>This isn’t about how <a href="https://outsourcedguru.wordpress.com/2016/02/22/why-powershell-sucks-so-badly/comment-page-1/" target="_blank" rel="noopener">PowerShell sucks</a> or how its source has been released under the <a href="https://github.com/PowerShell/PowerShell/blob/master/LICENSE.txt" target="_blank" rel="noopener">MIT</a> license so that naysayers can <a href="https://github.com/PowerShell/PowerShell/blob/master/.github/CONTRIBUTING.md" target="_blank" rel="noopener">contribute</a> the very features they believe are missing (or help address the over <a href="https://github.com/PowerShell/PowerShell/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc" target="_blank" rel="noopener">1,800 issues</a> open at the time of writing this blog post). No; this is about making PowerShell better with a Scoop.</p><h2 id="What-is-this-software"><a href="#What-is-this-software" class="headerlink" title="What is this software?"></a>What is this software?</h2><p><a href="https://scoop.sh/" target="_blank" rel="noopener">Scoop</a> is a command-line installer for Windows that was made to help make PowerShell a bit more <em>digestible</em>. Appreciating scoop requires a decent understanding of the context behind PowerShell and the Windows security system in general.</p><h3 id="PowerShell-Problems"><a href="#PowerShell-Problems" class="headerlink" title="PowerShell Problems"></a>PowerShell Problems</h3><p>Microsoft, created PowerShell with cmdlets (<code>command-lets</code>) - lightweight scripts that perform a single function - and created a Verb-Noun naming convention to help reduce <a href="https://docs.microsoft.com/en-us/powershell/scripting/learn/learning-powershell-names?view=powershell-6" target="_blank" rel="noopener">command memorization</a>. This is quite neat if you’re just getting started with terminals, shells, and Windows’ awkward brand of system administration - genuinely, I am a big fan of making things more accessible for new users.</p><p>Nothing’s clearer than a command that says, <code>Stop-Service</code>, and it doesn’t take a senior SysAdmin to understand what a <code>Get</code> Verb command might do to a Noun - good things I’m sure! However, the trade off tends to work against developers who <strong>do</strong> begin to memorize the more frequently used commands. </p><p>PowerShell’s are quite literally <em>verbose</em>. While some commands have aliases they aren’t necessarily the most familiar. <code>Get-ChildItem</code> is <a href="https://www.pdq.com/powershell/" target="_blank" rel="noopener">listed as the command that</a>, “gets the items and child items in one or more specified locations.” It’s aliases? <code>dir</code>, <code>gci</code>, and <code>ls</code>.</p><p>Most other commands, however, might be clear and transparent in meaning - but they lack any reasonable alias. No Unix developer is going to spend time configuring their aliases in Windows PowerShell when they can simply boot up <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener">Linux Bash on Windows</a>.</p><p>Scoop helps by providing familiar tools from the bash environment and making them available to PowerShell. For example, <code>scoop install curl</code> will allow you to use the <code>curl</code> tool on PowerShell under your user account. </p><p>What does vanilla PowerShell do? <a href="https://superuser.com/questions/344927/powershell-equivalent-of-curl#comment995042_591311" target="_blank" rel="noopener">It has aliased</a> the <code>Invoke-RestMethod</code> cmdlet as <code>curl</code> and <code>wget</code> while utilizing an entirely different syntax.</p><p>Don’t want to use the cmdlet? The related PowerShell commands aren’t much better:<br><code>(New-Object System.Net.WebClient).DownloadString(&quot;http://www.example.com/hello-world.html&quot;,&quot;C:\hello-world.html&quot;)</code>.</p><p>Speaking of which…</p><h3 id="Windows-Security"><a href="#Windows-Security" class="headerlink" title="Windows Security"></a>Windows Security</h3><p>Want to install something in Windows? I hope your pointer finger is ready.</p><p><img src="/images/posts/scoop/uac.jpg" alt="Image of a User Access Control dialogue box on a Windows system."><br><em>When I’m not on the internet, I don’t expect pop-ups.</em></p><p>Introduced with Windows Vista, the User Account Control (UAC) is a part of Windows’ authentication and security suite. In the great scheme of things, this is the force behind the dialogue boxes that will interrupt your mojo whenever you try to make sure your installer isn’t employing any <a href="https://en.wikipedia.org/wiki/Dark_pattern" target="_blank" rel="noopener">dark patterns</a>.</p><p>There is no way to turn off UAC’s pop-up functionality on Windows. Scoop, however, is not like PowerShell and it certainly is not like Windows. It doesn’t concern itself with things that it doesn’t need to care about.</p><p>See, scoop understands something that all good Unix developers understand: you don’t need to sudo to install every little thing on your system.</p><p>The <a href="https://github.com/lukesampson/scoop/tree/master/bucket" target="_blank" rel="noopener">collections</a> of <a href="https://github.com/lukesampson/scoop-extras" target="_blank" rel="noopener">programs</a> that scoop provides an easy installation for are filled with examples where this is true. </p><p>I do not and I <strong>should not</strong> be giving administrative access and permissions to installers for most programs. Most applications don’t need to be installed to the <code>C:Program Files</code> directories - there are many that can operate in a standalone (even portable) capacity.</p><h2 id="Why-get-this"><a href="#Why-get-this" class="headerlink" title="Why get this?"></a>Why get this?</h2><p>Besides bettering your life, scoop is also a scriptable framework. It’s encouraged if you’re looking for a way to consistently setup environments on Windows systems that have access to PowerShell.</p><h2 id="Who-created-this"><a href="#Who-created-this" class="headerlink" title="Who created this?"></a>Who created this?</h2><p>The original creator <a href="https://github.com/lukesampson" target="_blank" rel="noopener">@lukesampson</a> hasn’t submitted a new commit since mid-2017. At 787 commits, he still stands as the second biggest contributor.</p><p>The core developer, <a href="https://github.com/lukesampson/scoop/commits?author=r15ch13" target="_blank" rel="noopener">@r15ch13</a>, on the other hand <strong>started</strong> in mid-2017 and now has over 5,610 commits.</p><p>It doesn’t take a <a href="https://github.com/tomheon/git_by_a_bus" target="_blank" rel="noopener">git by a bus</a> to see that the wealth of knowledge about this project is not distributed enough to keep it from perishing should @r15ch13 decide not to continue development.</p><p>Get it while you can.</p><h2 id="Where-can-you-find-it"><a href="#Where-can-you-find-it" class="headerlink" title="Where can you find it?"></a>Where can you find it?</h2><p>You can find scoop’s source on its <a href="https://github.com/lukesampson/scoop" target="_blank" rel="noopener">github repository</a>.</p><h2 id="What’s-the-license"><a href="#What’s-the-license" class="headerlink" title="What’s the license?"></a>What’s the license?</h2><p>Scoop is actually ‘licensed’ under the “<a href="https://unlicense.org/" target="_blank" rel="noopener">Unlicense</a>“. This is a specific way for developers to dedicate work to the public domain. The license itself combines a copyright waiver similar to that from the public domain SQLite project with the no-warranty statement from the MIT/X11 license.</p><p>It’s the antithesis to ‘all rights reserved’ - this license is a bit of a ‘<a href="https://creativecommons.org/publicdomain/zero/1.0/" target="_blank" rel="noopener">no rights reserved</a>‘ situation.</p><h2 id="Can-I-contribute"><a href="#Can-I-contribute" class="headerlink" title="Can I contribute?"></a>Can I contribute?</h2><p>Since the time of writing, the last pull request was created 8 hours ago; it’s very active. In fact, the one disadvantage is that it’s become a burden on the current community.</p><p>GitHub contributor <a href="https://github.com/h404bi" target="_blank" rel="noopener">@h404bi</a> submitted an <a href="https://github.com/lukesampson/scoop/issues/2939" target="_blank" rel="noopener">issue</a> last New Year’s Eve asking for the community to consider the fact that Scoop never releases a version that is ‘explicitly’ stable. The other developers agreed.</p><p>As it stands, they have yet to finalize a new workflow but their main challenge is separating the buckets - the name given to collections holding program installation settings and metadata - from the core of the program. </p><p>It’s a relatively small codebase and the documentation is more than enough for someone interested in getting started with how it works.</p><h2 id="Caveats-about-PowerShell"><a href="#Caveats-about-PowerShell" class="headerlink" title="Caveats about PowerShell"></a>Caveats about PowerShell</h2><p>It is silly to realistically expect PowerShell to work like Bash. Even if the Verb-Noun dynamic gets tiresome, PowerShell is far from the only option available to users on Windows systems and people are always encouraged to use what they know best.</p><p>PowerShell is open-source; and so is scoop. These are both examples of what community development can support. The best part is the freedom to modify your environment however you see fit…</p><hr><p>…That is, until you remember that Windows 10 is still a proprietary operating system and that nice OpenSUSE distro I have running a KDE Plasma desktop environment is sweet, sweet FLOSS.</p><p>After all things considered, perhaps it is with a bit of irony that in order to get scoop on Windows, you’ll need to be prepared to install it using plain old PowerShell.</p><p><code>iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;)</code></p><p>(And you might come across a UAC error when you try this too).</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> quicklook </tag>
            
            <tag> shell </tag>
            
            <tag> powershell </tag>
            
            <tag> scoop </tag>
            
            <tag> unlicense </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sugarlabs Activity: Team Proposal</title>
      <link href="/blog/hfoss/finalteam/"/>
      <url>/blog/hfoss/finalteam/</url>
      
        <content type="html"><![CDATA[<h1 id="Sugarlabs-Activity-Team-Proposal"><a href="#Sugarlabs-Activity-Team-Proposal" class="headerlink" title="Sugarlabs Activity - Team Proposal"></a>Sugarlabs Activity - Team Proposal</h1><p>This blog post serves as a proposal for the creation of an educational <em>activity</em> on the Sugar Desktop Environment. Sugar is a collaborative, open-source learning platform for children maintained by <a href="https://sugarlabs.org/" target="_blank" rel="noopener">Sugar Labs</a>, the team behind the award-winning learning platform.</p><h2 id="Team-Members"><a href="#Team-Members" class="headerlink" title="Team Members"></a>Team Members</h2><p>The core developers behind this proposal are members of the <a href="http://hfoss.rocfoss.org" target="_blank" rel="noopener">Humanitarian Free and Open Source Software</a> course and community at the <a href="https://www.rit.edu/" target="_blank" rel="noopener">Rochester Institute of Technology</a>.</p><ul><li>Nic Hartley</li><li><p><a href="mailto:nxh9052@rit.edu" target="_blank" rel="noopener">nxh9052@rit.edu</a></p></li><li><p>Joshua Schenk</p></li><li><p><a href="mailto:jks7743@rit.edu" target="_blank" rel="noopener">jks7743@rit.edu</a></p></li><li><p>Ian Effendi</p></li><li><a href="mailto:iae2784@rit.edu" target="_blank" rel="noopener">iae2784@rit.edu</a> </li></ul><h2 id="Project-Overview"><a href="#Project-Overview" class="headerlink" title="Project Overview"></a>Project Overview</h2><p>Our team seeks to create a cohesive, unified platform experience for our activity’s <em>learners</em>. Learners are tasked with practicing their mathematical foundations for fractional arithmetic operations, like whole number division and multiplication. We plan on using PyGame to power our activity. <a href="https://www.pygame.org/" target="_blank" rel="noopener">PyGame</a> is a game engine written in <a href="https://www.python.org/" target="_blank" rel="noopener">Python</a> and <a href="https://en.wikipedia.org/wiki/C_(programming_language" target="_blank" rel="noopener">C</a>), released under the <a href="https://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License" target="_blank" rel="noopener">LGPL</a> license.</p><h3 id="Scenario-1"><a href="#Scenario-1" class="headerlink" title="Scenario 1"></a>Scenario 1</h3><p>In the first section, learners must weigh suitcases at baggage claim to make sure that they aren’t over the safety limit. Suitcases are given a ‘fraction’ as a weight and they must decide whether it is equal, over, or under the safety limit - which will also be given a ‘fraction’ as a value.</p><h3 id="Scenario-2"><a href="#Scenario-2" class="headerlink" title="Scenario 2"></a>Scenario 2</h3><p>In the second section, learners are encouraged to slice pizza using the exact angles customers order. Learners can use their pointer device to select the exact lines and angles that they need, mimicing the experience of using a protractor digitally.</p><h3 id="Stretch-Goal"><a href="#Stretch-Goal" class="headerlink" title="Stretch Goal"></a>Stretch Goal</h3><p>Tying these elements together is a score system that learners can cash in at an in-activity, fictional storefront, where they can redeem points for unlockables. This third portion of the idea needs to be fleshed out - however, it serves as a thematic force that pulls it all together. Learnes who do best with extrinsic forms of motivation may find themselves revisiting the scenarios in order to do better. By keeping each slice of gameplay short, episodic, and replayable, we invite learners to revisit the work that they’ve done.</p><h2 id="Educational-Goals"><a href="#Educational-Goals" class="headerlink" title="Educational Goals"></a>Educational Goals</h2><p>Our team will create a Sugar activity that targets users who are learning or reviewing 4th-grade level appropriate mathematics. The Sugar platform was born out of the international <a href="http://one.laptop.org/" target="_blank" rel="noopener">One-Laptop-Per-Child</a> project and every country’s pedagogy and curriculum is different. For the sake of this project, we’ve examined some of the standards used in the United States’ K-12 grade school system.</p><h3 id="4th-Grade-Level-Mathematics"><a href="#4th-Grade-Level-Mathematics" class="headerlink" title="4th Grade Level Mathematics"></a>4th Grade Level Mathematics</h3><p>According to the <a href="http://www.corestandards.org/Math/Content/4/introduction/" target="_blank" rel="noopener">Common Core State Standards Initiative</a>, instructional time on mathematics for 4th grade students focuses on <em>three</em> <strong><em>critical areas</em></strong>:</p><ol><li>Developing understanding and fluency with <strong>multi-digit multiplication</strong>, and developing understanding of dividing to find quotients involving <strong>multi-digit dividends</strong>;</li><li>Developing an understanding of <strong>fractional equivalence</strong>, <strong>addition</strong>, and <strong>subtraction</strong> of fractions with like denominators, and <strong>multiplication of fractions</strong> by whole numbers;</li><li>Understanding that geometric figures can be <strong>analyzed</strong> and <strong>classified</strong> based on their properties, such as having <strong>parallel sides</strong>, <strong>perpendicular sides</strong>, <strong>particular angle measures</strong>, and <strong>symmetry</strong>.</li></ol><p>For a time, the Math4Team maintained a <a href="https://wiki.sugarlabs.org/go/Math4Team/Resources/Curriculum_Chart" target="_blank" rel="noopener">curriculum chart</a> for 4th Grade mathematics on the Sugar Labs wiki. Based off of the <a href="http://www.doe.mass.edu/frameworks/current.html" target="_blank" rel="noopener">Massachusetts Curriculum Framework for Mathematics</a>, there came to be a working list of standards and an accounting of Sugar activities that satisfied the implied learning goals. In review of both Massachusetts’ and New York State’s <a href="http://www.nysed.gov/common/nysed/files/programs/curriculum-instruction/nys-next-generation-mathematics-p-12-standards.pdf" target="_blank" rel="noopener">Next Generation Mathematics Learning Standards</a>, one can find - at least for mathematics - that they all agree with the Common Core’s emphasized <em>critical areas</em>.</p><h3 id="Enriching-Learners-with-Technology"><a href="#Enriching-Learners-with-Technology" class="headerlink" title="Enriching Learners with Technology"></a>Enriching Learners with Technology</h3><p>Today, digital media and entertainment that targets children are facing more scrutiny than ever before. Outlets have written about malicious content creators on social media platforms whose <a href="https://www.bbc.com/news/blogs-trending-39381889" target="_blank" rel="noopener">disturbing videos</a> - featuring animated violence and graphic content inappropriate for children - are hidden behind fake, but official-looking, artwork of characters children have become familiar with.</p><p>Sugar Labs has the <a href="http://wiki.sugarlabs.org/go/Human_Interface_Guidelines#Security" target="_blank" rel="noopener">security goals</a> to protect children against five categories of <em>bad things</em> software can do:</p><ol><li>Damaging the laptop;</li><li>Compromising privacy;</li><li>Damaging the children’s data;</li><li>Doing bad things to other people; and</li><li>Impersonating the child.</li></ol><p>This is only one of Sugar’s <a href="http://wiki.sugarlabs.org/go/Human_Interface_Guidelines/Design_Fundamentals/Key_Design_Principles" target="_blank" rel="noopener">key design principles</a>. By reflecting on all eleven of them, can we move closer toward our goal of <strong>enriching learners with technology</strong>:</p><ol><li>Performance</li><li>Usability</li><li>Simplicity</li><li>Reliability</li><li>Security</li><li>Adaptability</li><li>Recoverability</li><li>Interoperability</li><li>Mobility</li><li>Transparency</li><li>Accessibility</li></ol><p>All of these principles, amongst other project topics for Sugar developers , were written into the <a href="http://wiki.sugarlabs.org/go/Human_Interface_Guidelines" target="_blank" rel="noopener">Human Interface Guidelines</a>, published in 2006.</p><p>In the long run, our framework of ‘episodic’ mini-games could be focused around a returning core character that learners may find appealing - organizations such as <a href="https://www.sesamestreet.org/" target="_blank" rel="noopener">Sesame Workshop</a> leverage their IP to maintain a familiar atmosphere for learners amidst changing content. In a case with an unlimited amount of resources, I could envision creating a public domain character that other educational organizations and non-profits could use in order to create a hub of games that children easily recognize by titular characters. In some ways, a community sourced commons for edu-tainment.</p><h2 id="Assets"><a href="#Assets" class="headerlink" title="Assets"></a>Assets</h2><p>There are plenty of resources available online that host graphic art and sound assets in the public domain or licensed under compatible Creative Commons licenses. </p><h2 id="Other-Ideas"><a href="#Other-Ideas" class="headerlink" title="Other Ideas"></a>Other Ideas</h2><p>While deliberating on this, we thought of other game ideas for the proposed Sugar activity:</p><ul><li>Solving grade-appropriate math questions in a short amount of time for the following subjects:<ul><li>Simplifying simple fractions</li><li>Add/subtract/multiply/divide small numbers</li><li>Maybe word problems?</li><li>Factorization</li></ul></li><li>Solving math puzzles to shoot missiles out of the sky before they hit the Earth.</li><li>A clone of the <a href="https://en.wikipedia.org/wiki/2048_(video_game" target="_blank" rel="noopener">2048</a>) video game that focused on fractional math.</li><li>A pizza cutting game that focused on complex fractions (instead of angles) that could be played like Fruit Ninja.<ul><li>Learners are encouraged to cut the pizza quickly with no or little guidelines to help build their sense of ‘fraction’ size.</li></ul></li><li>Smoothie making game where you need the right portions. Those portions can be requested by randomly ordered/generated customers with a fraction and an ingredient.</li></ul><hr><h2 id="Deadlines"><a href="#Deadlines" class="headerlink" title="Deadlines"></a>Deadlines</h2><p>These are the following deadlines we are planning to operate with:</p><table><thead><tr><th>Date</th><th>Time</th><th>Assignment</th></tr></thead><tbody><tr><td>Thu, Apr 4</td><td>11:59 PM (EST)</td><td>Final Project: Proposal</td></tr><tr><td>Wed, Apr 17</td><td>11:59 PM (EST)</td><td>Final Project: Proof of Concept</td></tr><tr><td>Wed, Apr 24</td><td>11:59 PM (EST)</td><td>Final Project: Prototype</td></tr><tr><td>Fri, Apr 26</td><td>11:59 PM (EST)</td><td>Final Project: Playtest</td></tr><tr><td>Mon, Apr 29</td><td>11:59 PM (EST)</td><td>Final Project: Presentations &amp; Peer Evaluations</td></tr><tr><td>Wed, May 1*</td><td>11:59 PM (EST)</td><td>Exam - Final Project: Presentations</td></tr></tbody></table><p>*Final exam time is from 8:00 AM to 10:30 AM in room MSS-2175.</p><p>A more detailed timeline can be found below.</p><h2 id="Division-of-Labor"><a href="#Division-of-Labor" class="headerlink" title="Division of Labor"></a>Division of Labor</h2><p>Nic and Ian have already worked together to get the <a href="https://github.com/rimij405/hfoss-final-2019" target="_blank" rel="noopener">repository up and running</a>. Ian has started to look at PyGame. The original plan to have three individual mini-games was revisited after this length process. Instead, the team has decided to go with two scenarios. Whomever is unassigned to either of those two main scenarios is responsible for building the thematic connection between the two of mini-games and working on getting our game to play nice with the Sugar environment.</p><p>Ian created the timeline below in order to provide more context to what we expect to accomplish. After proposals are submitted and approved, we’ll be able to tackle these in a consistent fashion. Prior to the next immediate milestone, our group seeks to be more specific and intentional behind the design of our mini-games.</p><h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><p>On a quick note about workflow, we’re interested in following a modified version of the <a href="https://leanpub.com/git-flow/read" target="_blank" rel="noopener">GitFlow</a> workflow, particularly using ‘master’, ‘develop’, and ‘release’ branches. We likely will not incorporate feature branches, putting our approach somewhere between GitFlow and <a href="https://trunkbaseddevelopment.com/" target="_blank" rel="noopener">Trunk Based Development</a>. Any feature branches we do have will be short-lived (akin to Trunk Based) and any release branches will likely be merged back into the master (like GitFlow).</p><h2 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h2><p>The following timeline shares an overview of the milestones we wish to complete, when we wish to complete them by, and the tasks we believe ought to be associated with them.</p><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><table><thead><tr><th>Date</th><th>Milestone</th><th>Key Deliverable</th></tr></thead><tbody><tr><td>Thu, Apr 4</td><td>M1</td><td>+Completed Proposal</td></tr><tr><td>Tue, Apr 9</td><td>M2A, M2B</td><td>+Technology, +Assets</td></tr><tr><td>Tue, Apr 16</td><td>M3</td><td>+Proof-of-Concept</td></tr><tr><td>Sun, Apr 21</td><td>M4</td><td>+Prototype</td></tr><tr><td>Thu, Apr 25</td><td>M5A</td><td>+Playtest Preparation</td></tr><tr><td>Sat, Apr 27</td><td>M5B, M5C</td><td>+Playtest Revisions, +Presentation</td></tr><tr><td>Mon, Apr 29</td><td>M6A, M6B</td><td>+Wiki Entry, +Release Build, +Peer Evaluations</td></tr></tbody></table><h3 id="Milestone-1-Complete-project-proposal"><a href="#Milestone-1-Complete-project-proposal" class="headerlink" title="Milestone 1: Complete project proposal"></a>Milestone 1: Complete project proposal</h3><p>We aim to complete the final project’s proposal as soon as possible. We will choose one main idea and then rank one or two backup ideas that we wouldn’t mind doing in the event our proposal isn’t accepted. They wouldn’t be bad to have if our proof-of-concept and prototype also don’t work out for the initial idea.</p><p>We will also make sure that we discuss everyone’s skillset, programming language proficiency, past development experience, and external obligations or commitments that might impact our ability to do work.</p><p><strong>Deliverables:</strong><br><em>Due: Thursday, April 4th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox" checked> <a href="https://wiki.sugarlabs.org/index.php?title=Special:UserLogin" target="_blank" rel="noopener">Request an account</a> for the SugarLabs Wiki.</li><li style="list-style: none"><input type="checkbox" checked> Review the <a href="https://wiki.sugarlabs.org/go/Activities" target="_blank" rel="noopener">Activities</a> that already exist on the platform.</li><li style="list-style: none"><input type="checkbox" checked> Review the <a href="https://wiki.sugarlabs.org/go/Math4Team/Resources/Curriculum_Chart" target="_blank" rel="noopener">curriculum chart</a> from the SugarLabs Wiki*.</li><li style="list-style: none"><input type="checkbox" checked> Review the <a href="http://www.nysed.gov/curriculum-instruction/new-york-state-next-generation-mathematics-learning-standards" target="_blank" rel="noopener">NY State Math Standards</a> prior to coming up with an idea.</li><li style="list-style: none"><input type="checkbox" checked> Discuss development experience, skillset, etc.</li><li style="list-style: none"><input type="checkbox" checked> Determine one or two ideas for the final project.</li><li style="list-style: none"><input type="checkbox" checked> Discuss the project proposal.</li><li style="list-style: none"><input type="checkbox" checked> Individually submit blog post for final project proposal.</li></ul><p>*<em>We’re not limited to the options on the curriculum chart, however.</em></p><h3 id="Milestone-2-Pre-Production"><a href="#Milestone-2-Pre-Production" class="headerlink" title="Milestone 2: Pre-Production"></a>Milestone 2: Pre-Production</h3><p>For this milestone, we aim to set up our development environments and prepare a list of the assets that we need for the final project.</p><h4 id="2a-Technology"><a href="#2a-Technology" class="headerlink" title="2a: Technology"></a>2a: Technology</h4><p>Our development environment and remote repository will be prepared by the end of this milestone.</p><p><strong>Deliverables</strong><br><em>Due: Tuesday, April 9th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Review <a href="https://www.ibm.com/developerworks/linux/tutorials/l-sugarpy/" target="_blank" rel="noopener">application development guide for the OLPC X0-1 laptop using Python</a> from IBM.</li><li style="list-style: none"><input type="checkbox"> Review <a href="https://github.com/sugarlabs/sugar-docs" target="_blank" rel="noopener">contributor and developer documentation</a> from SugarLabs.</li><li style="list-style: none"><input type="checkbox"> Decide license* for the final project.</li><li style="list-style: none"><input type="checkbox"> Initialize repository on GitHub or GitLab with README, LICENSE, and .gitignore markup.</li><li style="list-style: none"><input type="checkbox"> Add ‘<a href="https://github.com/sugarlabs/hello-world" target="_blank" rel="noopener">Hello World</a>‘ starter project code (or <a href="https://github.com/FOSSRIT/sugar-quickstart" target="_blank" rel="noopener">equivalent</a>) to the project repository.</li><li style="list-style: none"><input type="checkbox"> Ensure project builds from local development environments without error.</li><li style="list-style: none"><input type="checkbox"> Backup stable build in a safe location.</li><li style="list-style: none"><input type="checkbox"> Decide on how documentation will be done for the final project.</li><li style="list-style: none"><input type="checkbox"> Rank project features in terms of completion priority; keep dependencies in mind.</li></ul><p>*<em>Suggestion: MIT License due to it’s permissiveness?</em></p><h4 id="2b-Assets"><a href="#2b-Assets" class="headerlink" title="2b: Assets"></a>2b: Assets</h4><p>A fleshed-out list of the assets that we believe we’ll need should be created at this time. This doesn’t mean we’ll collect our final assets - it only means we’ll have temporary, placeholder assets ready and can prepare for the art that we need down the line, as we get closer to a minimal viable product.</p><p><strong>Deliverables</strong><br><em>Due: Tuesday, April 9th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Determine content necessary for the game.</li><li style="list-style: none"><input type="checkbox"> Create a wireframe of the graphical user interface.</li><li style="list-style: none"><input type="checkbox"> Create storyboard of the menus and game screens necessary for the game/state machine.</li><li style="list-style: none"><input type="checkbox"> Create list of art assets that we must produce (UI?, Sprites?, Fonts?, Animations?).</li><li style="list-style: none"><input type="checkbox"> Create list of audio assets (SFX?, BGM?).</li><li style="list-style: none"><input type="checkbox"> Find art assets with a compatible license.</li><li style="list-style: none"><input type="checkbox"> Find audio assets with a compatible license.</li><li style="list-style: none"><input type="checkbox"> Create preliminary attribution or credits text file that list assets we intend to use.</li></ul><h3 id="Milestone-3-Proof-of-Concept-POC"><a href="#Milestone-3-Proof-of-Concept-POC" class="headerlink" title="Milestone 3: Proof-of-Concept (POC)"></a>Milestone 3: Proof-of-Concept (POC)</h3><p>The proof-of-concept demonstrates the feasibility of the activity’s single core feature. This will depend on what we decide the game should be. This differs from a minimal viable product and a prototype in scope.</p><p><strong>Deliverables</strong><br><em>Due: Tuesday, April 16th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Choose single core feature that we wish to demonstrate.</li><li style="list-style: none"><input type="checkbox"> Complete the proof-of-concept.</li><li style="list-style: none"><input type="checkbox"> Add additional features, if time permits.</li><li style="list-style: none"><input type="checkbox"> Patch and revise proof-of-concept, if necessary.</li><li style="list-style: none"><input type="checkbox"> Test proof-of-concept build made in a fresh local environment.</li><li style="list-style: none"><input type="checkbox"> Test proof-of-concept build made on lab machines.</li><li style="list-style: none"><input type="checkbox"> Backup stable build in a safe location.</li><li style="list-style: none"><input type="checkbox"> Submit proof-of-concept to ‘poc’ branch on remote repository.</li><li style="list-style: none"><input type="checkbox"> Merge changes into master branch once stable, if necessary.</li><li style="list-style: none"><input type="checkbox"> Update documentation with installation instructions.</li><li style="list-style: none"><input type="checkbox"> Update developer documentation to be more informative.</li></ul><h3 id="Milestone-4-Prototype"><a href="#Milestone-4-Prototype" class="headerlink" title="Milestone 4: Prototype"></a>Milestone 4: Prototype</h3><p>The prototype is larger in scope than a proof-of-concept, but, it is not necessarily to the scope of a minimal viable product. The expected features for this milestone change depending on the game being developed.</p><p><strong>Deliverables</strong><br><em>Due: Sunday, April 21st, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Fix bugs from previous milestone.</li><li style="list-style: none"><input type="checkbox"> Patch and revise prototype based off of peer feedback.</li><li style="list-style: none"><input type="checkbox"> Add remaining features to prototype.</li><li style="list-style: none"><input type="checkbox"> Test prototype build made in a fresh local environment.</li><li style="list-style: none"><input type="checkbox"> Test prototype build made on lab machines.</li><li style="list-style: none"><input type="checkbox"> Backup stable build in a safe location.</li><li style="list-style: none"><input type="checkbox"> Submit prototype to ‘prototype’ branch on remote repository.</li><li style="list-style: none"><input type="checkbox"> Merge changes into master branch once stable, if necessary.</li><li style="list-style: none"><input type="checkbox"> Update documentation with installation instructions.</li><li style="list-style: none"><input type="checkbox"> Update developer documentation to be more informative.</li></ul><h3 id="Milestone-5-Polish-Patch-amp-Present"><a href="#Milestone-5-Polish-Patch-amp-Present" class="headerlink" title="Milestone 5: Polish, Patch, &amp; Present"></a>Milestone 5: Polish, Patch, &amp; Present</h3><p>This milestone is about wrapping up loose ends, polishing rough features, and patching out any remaining bugs with the program. This is split between the playtest and the presentation.</p><h4 id="5a-Playtest-Preparation"><a href="#5a-Playtest-Preparation" class="headerlink" title="5a: Playtest Preparation"></a>5a: Playtest Preparation</h4><p>The playtests will take place on <em>Wednesday, April 26th, 2019</em>. There are several steps that we can take in order to prepare for the playtests.</p><p><strong>Deliverables</strong><br><em>Due: Thursday, April 25th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Fix bugs that prevent the prototype from building.</li><li style="list-style: none"><input type="checkbox"> Prepare user documentation for a student. (Language must be simple).</li><li style="list-style: none"><input type="checkbox"> Prepare user documentation that might accompany a parent/teacher/caregiver.</li><li style="list-style: none"><input type="checkbox"> Ensure instructions in-app are clear and proofread.</li><li style="list-style: none"><input type="checkbox"> Ensure a stable build can be run from the lab machines.</li><li style="list-style: none"><input type="checkbox"> Ensure a stable build is on someone’s flash-drive for the playtest.</li></ul><h4 id="5b-Polish"><a href="#5b-Polish" class="headerlink" title="5b: Polish"></a>5b: Polish</h4><p>After the playtests, our focus should be on polishing work using the feedback we collect. This means resolving any outstanding bugs or feature requests in order to have our minimal viable product.</p><p><strong>Deliverables</strong><br><em>Due: Saturday, April 27th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Fix bugs from previous milestone.</li><li style="list-style: none"><input type="checkbox"> Patch and revise MVP based off of peer feedback.</li><li style="list-style: none"><input type="checkbox"> Add remaining features to MVP.</li><li style="list-style: none"><input type="checkbox"> Test MVP build made in a fresh local environment.</li><li style="list-style: none"><input type="checkbox"> Test MVP build made on lab machines.</li><li style="list-style: none"><input type="checkbox"> Submit MVP to ‘MVP’ branch on remote repository.</li><li style="list-style: none"><input type="checkbox"> Merge changes into master branch once stable, if necessary.</li><li style="list-style: none"><input type="checkbox"> Update documentation with installation instructions.</li><li style="list-style: none"><input type="checkbox"> Update developer documentation to be more informative.</li></ul><h4 id="5c-Present"><a href="#5c-Present" class="headerlink" title="5c: Present"></a>5c: Present</h4><p>There are a specific set of questions that need to be answered in a post-mortem presentation. To ensure we cover all the parts on the rubric, the generative questions have been listed as some of the tasks below. The presentation will be given on one of two days: either <em>Monday, April 29th, 2019</em> or <em>Friday, May 1st, 2019</em></p><p><strong>Deliverables</strong><br><em>Due: Saturday, April 27th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Record screenshot/capture video recording of application usage.</li><li style="list-style: none"><input type="checkbox"> Slide: About the project. What is it? What are its main mechanics?</li><li style="list-style: none"><input type="checkbox"> Slide: Is the code clearly licensed under an OSI-compatible license?</li><li style="list-style: none"><input type="checkbox"> Slide: How does the code work?</li><li style="list-style: none"><input type="checkbox"> Slide: What are some of the best pieces of software you wrote? Why?</li><li style="list-style: none"><input type="checkbox"> Slide: What are some of the worst pieces? Why?</li><li style="list-style: none"><input type="checkbox"> Slide: Does your source repository contain clear written instructions for future developers? (eg. How to setup their environment to work on your project?)</li><li style="list-style: none"><input type="checkbox"> Slide: What <todo> items did your team leave remaining?</todo></li><li style="list-style: none"><input type="checkbox"> Slide: Does it work on python on a normal machine?</li><li style="list-style: none"><input type="checkbox"> Slide: Does it work on Sugar?</li><li style="list-style: none"><input type="checkbox"> Slide: What do you think of your code quality and git commit history?</li><li style="list-style: none"><input type="checkbox"> Slide: Did you make a wiki entry at sugarlabs.org?</li><li style="list-style: none"><input type="checkbox"> Slide: What stumbling blocks were there?</li><li style="list-style: none"><input type="checkbox"> Slide: What successes?</li><li style="list-style: none"><input type="checkbox"> Slide: What would you have done differently?</li><li style="list-style: none"><input type="checkbox"> Slide: What would you have worked on if you had more time?</li><li style="list-style: none"><input type="checkbox"> Proofread the slides before the presentation.</li><li style="list-style: none"><input type="checkbox"> Ensure presentation is formatted correctly when in performance mode.</li></ul><h3 id="Milestone-6-Publish"><a href="#Milestone-6-Publish" class="headerlink" title="Milestone 6: Publish"></a>Milestone 6: Publish</h3><p>The final milestone is mostly about submitting outstanding work.</p><h4 id="6a-Publish-Project-Files"><a href="#6a-Publish-Project-Files" class="headerlink" title="6a: Publish Project Files"></a>6a: Publish Project Files</h4><p>This requires us to publish our files and write information on the Sugarlabs wiki.</p><p><strong>Deliverables</strong><br><em>Due: Monday, April 29th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Create entry and link to the project information to the <a href="http://wiki.sugarlabs.org/go/Math4Team/RIT/Projects" target="_blank" rel="noopener">RIT Math4Team projects wiki page</a>.</li><li style="list-style: none"><input type="checkbox"> Add appropriate user documentation to the wiki.</li><li style="list-style: none"><input type="checkbox"> Add appropriate developer and contributor documentation to the wiki.</li><li style="list-style: none"><input type="checkbox"> Merge outstanding (stable) changes to the master branch.</li><li style="list-style: none"><input type="checkbox"> Test <code>master</code> branch build in a fresh local environment.</li><li style="list-style: none"><input type="checkbox"> Test <code>master</code> branch build on lab machines.</li><li style="list-style: none"><input type="checkbox"> Release binaries for production usage.</li></ul><h4 id="6b-Submit-Peer-Evaluation"><a href="#6b-Submit-Peer-Evaluation" class="headerlink" title="6b: Submit Peer Evaluation"></a>6b: Submit Peer Evaluation</h4><p>This follows the rubric’s expectations for peer evaluation.</p><p><strong>Deliverables</strong><br><em>Due: Monday, April 29th, 2019</em></p><ul><li style="list-style: none"><input type="checkbox"> Write 200-1000 words, per teammate in your individual evaluation.</li><li style="list-style: none"><input type="checkbox"> Indicate what your teammates contributed to the project.</li><li style="list-style: none"><input type="checkbox"> What skills did they pick up this semester?</li><li style="list-style: none"><input type="checkbox"> What skills should they develop further?</li><li style="list-style: none"><input type="checkbox"> Give a numeric score (1-10) for them and justify it.</li><li style="list-style: none"><input type="checkbox"> Email your evaluation to your <a href="mailto:deejoe@mail.rit.edu" target="_blank" rel="noopener">instructor</a>.</li></ul>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> architecture </tag>
            
            <tag> documentation </tag>
            
            <tag> analysis </tag>
            
            <tag> Sugarlabs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quicklook: RIT Student Government Goes Open-Source</title>
      <link href="/blog/hfoss/quicklook-sgos/"/>
      <url>/blog/hfoss/quicklook-sgos/</url>
      
        <content type="html"><![CDATA[<h1 id="Quicklook-RIT-Student-Government-Goes-Open-Source"><a href="#Quicklook-RIT-Student-Government-Goes-Open-Source" class="headerlink" title="Quicklook: RIT Student Government Goes Open-Source"></a>Quicklook: RIT Student Government Goes Open-Source</h1><p><strong>The Rochester Institute of Technology’s Student Government (SG) is another member of the FLOSS community!</strong></p><h2 id="About-Student-Government"><a href="#About-Student-Government" class="headerlink" title="About Student Government"></a>About Student Government</h2><p><a href="https://sg.rit.edu/" target="_blank" rel="noopener">RIT Student Government</a> (SG), one of the university’s shared governance groups, advocates on behalf of the undergraduates and graduates, serving as a liaison between the students, faculty, staff, and administration. </p><p>Student Government’s mission often births technology services that members of its Technology Committee develop in attempts to solve problems that students on campus may have. </p><h2 id="Student-Government-lt-3’s-Open-Source"><a href="#Student-Government-lt-3’s-Open-Source" class="headerlink" title="Student Government &lt;3’s Open Source"></a>Student Government &lt;3’s Open Source</h2><p>Student Government embraces open source development and is self-described as, “[a] new entrant into the Free and Open Source Software community.” Student organizations that embrace and support FLOSS can help maintain platforms that continue to be robust over a long period of time - the services that Student Government provides are, by proxy, funded by the university, increasing the likelihood that they will continue to exist for years to come.</p><h2 id="Projects-and-Services"><a href="#Projects-and-Services" class="headerlink" title="Projects and Services"></a>Projects and Services</h2><p>Student Government has an <a href="https://github.com/ritstudentgovernment" target="_blank" rel="noopener">official GitHub organization</a> comprised of their project’s repositories. You can check out the full list of SG services <a href="https://sg.rit.edu/services/" target="_blank" rel="noopener">here</a>.</p><h3 id="PawPrints"><a href="#PawPrints" class="headerlink" title="PawPrints"></a><a href="https://github.com/ritstudentgovernment/PawPrints" target="_blank" rel="noopener">PawPrints</a></h3><p>Built in Python, <a href="https://github.com/ritstudentgovernment/PawPrints" target="_blank" rel="noopener">PawPrints</a> is Student Government’s petition application for the RIT community. The petition suite itself is spun up in a Docker container and can be hosted on a machine that has <a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a> and <a href="https://github.com/docker/compose" target="_blank" rel="noopener">Docker Compose</a> set up properly.</p><p>PawPrints is licensed under the <a href="https://www.apache.org/licenses/LICENSE-2.0" target="_blank" rel="noopener">Apache License 2.0</a>.</p><h3 id="Naps"><a href="#Naps" class="headerlink" title="Naps"></a><a href="https://github.com/ritstudentgovernment/Naps" target="_blank" rel="noopener">Naps</a></h3><p>Built atop <a href="https://www.meteor.com/" target="_blank" rel="noopener">Meteor</a>, an open source platform for building JavaScripts applications, is the <a href="https://github.com/ritstudentgovernment/Naps" target="_blank" rel="noopener">Naps</a> system - a map of all the napping spots on campus!</p><p>Naps is licensed under the <a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener">MIT License</a>.</p><h3 id="BikeShare"><a href="#BikeShare" class="headerlink" title="BikeShare"></a><a href="https://github.com/ritstudentgovernment/BikeShare" target="_blank" rel="noopener">BikeShare</a></h3><p>Student Government has open sourced the software backing the <a href="https://github.com/ritstudentgovernment/BikeShare" target="_blank" rel="noopener">BikeShare</a> program. The software is intended to aid in the maintenance of bikes, legal compliance, user management, and the checkout of bikes. The platform was developed using ASP.NET MVC, with a MSSQL database under the hood for data persistence and usage of Twitter Bootstrap for styling.</p><p>BikeShare’s website is licensed under the <a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener">MIT License</a>.</p><h2 id="Fork-SG-Today"><a href="#Fork-SG-Today" class="headerlink" title="Fork SG Today!"></a>Fork SG Today!</h2><p>If you’re interested in developing your own applications based off of these projects, feel free to visit their <a href="https://github.com/ritstudentgovernment" target="_blank" rel="noopener">GitHub organization</a>!</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> quicklook </tag>
            
            <tag> github </tag>
            
            <tag> RIT </tag>
            
            <tag> Student Government </tag>
            
            <tag> university </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Community Architecture Analysis: KDevelop</title>
      <link href="/blog/hfoss/commarchreport/"/>
      <url>/blog/hfoss/commarchreport/</url>
      
        <content type="html"><![CDATA[<h1 id="Community-Architecture-Analysis"><a href="#Community-Architecture-Analysis" class="headerlink" title="Community Architecture Analysis"></a>Community Architecture Analysis</h1><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p><img src="/images/posts/commarchreport/kdevelop_logo.png" alt="KDevelop Logo"></p><p>As part of the Humanitarian Free and Open Source Software (HFOSS) course offered at RIT under the IGM program, students were split into separate groups in order to perform a community architecture analysis on a software project of their choice. This exercise serves to engage students with the practice of evaluating the health of open source community projects from various perspectives.</p><p>This report showcases the findings of such an analysis on the KDevelop project. KDevelop is a free and open-source feature-full, plugin extensible, cross-platform IDE for C, C++, Python, QML/JavaScript, and PHP. KDevelop’s <a href="https://marc.info/?l=kde-announce&amp;m=90648146015087&amp;w=2" target="_blank" rel="noopener">earliest version</a> (0.1 Alpha) was released in September of 1998 by developers Sandy Meier, Stefan Heidrich, and Stefan Bartel. Since that time, KDevelop was <a href="https://marc.info/?l=kde-core-devel&amp;m=98598814600661&amp;w=2" target="_blank" rel="noopener">rewritten</a> by Bernd Gehrmann for it’s 3.x release sometime in March of 2001, rewritten again with a plugin-based architecture for its 4.x release, and was ported to Qt5 and KDE Frameworks 5 for the 5.x release. </p><p>As part of the KDE® family of applications, KDevelop is just another member of a well-established and robust free software community. The KDE® Community’s earliest form took shape as part of an <a href="https://groups.google.com/forum/#!msg/de.comp.os.linux.misc/SDbiV3Iat_s/zv_D_2ctS8sJ" target="_blank" rel="noopener">announcement</a> from Matthias Ettrich in October of 1996 — Ettrich was searching for developers interested in creating a, “consistant, nice looking free desktop-environment,” [<em>sic</em>] under the project titled: <strong>Kool Desktop Environment</strong>.</p><p><img src="/images/posts/commarchreport/konqi_friends.png" alt="Konqi and friends; mascots of the KDE® family"></p><h2 id="Team-Members"><a href="#Team-Members" class="headerlink" title="Team Members"></a>Team Members</h2><p>Nic Hartley | <a href="nxh9052@rit.edu">nxh9052@rit.edu</a><br>Joshua Schenk | <a href="jks7743@rit.edu">jks7743@rit.edu</a><br>Ian Effendi | <a href="iae2784@rit.edu">iae2784@rit.edu</a></p><h2 id="Git-By-a-Bus-Results"><a href="#Git-By-a-Bus-Results" class="headerlink" title="Git By a Bus Results"></a>Git By a Bus Results</h2><h3 id="Total-Risk-By-Person-top-10"><a href="#Total-Risk-By-Person-top-10" class="headerlink" title="Total Risk By Person (top 10)"></a>Total Risk By Person (top 10)</h3><p><img src="/images/posts/commarchreport/gbal_top10.png" alt="Top 3 Contributor Risk: Aleix Pol, Kevil Funk, Peifeng Yu"></p><hr><h2 id="Alternative-Analysis-Results"><a href="#Alternative-Analysis-Results" class="headerlink" title="Alternative Analysis Results"></a>Alternative Analysis Results</h2><p><img src="/images/posts/commarchreport/abstract-order-complete.png" alt="Abstract image representing successful thoughts."></p><h3 id="About-The-‘Openness-Rating’-Tool"><a href="#About-The-‘Openness-Rating’-Tool" class="headerlink" title="About The ‘Openness Rating’ Tool"></a>About The ‘Openness Rating’ Tool</h3><p>Our alternative tool for the community architecture analysis is the Openness Rating review, created by OSS Watch, an independent, non-advocacy service provided by free and open source software consultants. As said on their homepage, “OSS Watch provides unbiased advice and guidance on the use, development, and licensing of <strong>free software</strong>, <strong>open source software</strong>, and <strong>open source hardware</strong>.” [<em>emphasis theirs</em>] In partnership with <a href="http://pipka.org/standard-bio/" target="_blank" rel="noopener">Pia Andrews</a> <a href="https://twitter.com/piawaugh" target="_blank" rel="noopener">@piawaugh</a>, the Openness Rating tool is a diagnostic model that evaluates how ‘free and open’ a particular piece of software is.</p><p>To perform an assessment, the tool asks questions as it pertains to the software’s legal issues, data formats and standards, available knowledge, project governance, and the market climate. These questions are based off of the paper <em><a href="http://pipka.org/wp-content/uploads/2008/07/Foundations-of-openness-V2-release.pdf" target="_blank" rel="noopener">Foundations of Openness</a></em>, written by Pia Andrews (publishing as Pia Waugh) and Randy Metcalfe, and are used by OSS Watch as part of their own consultancy work. Each question asked has a predefined set of answers - once all of the questions are selected, the tool is able to provide the ‘openness rating’ that serves as a benchmark for how free and open the software is.</p><p><img src="/images/posts/commarchreport/osswatch_logo.png" alt="OSS Watch Logo"></p><h4 id="Strengths"><a href="#Strengths" class="headerlink" title="Strengths"></a>Strengths</h4><p>The ‘openness rating’ tool is great for establishing a quantitative measure of how ‘FLOSS’ a software really is. This can be useful for those interested in starting a new open-source project — if they have an existing community project in mind, performing an analysis on that project can allow the new team to make educated choices regarding their work. The tool’s breakdown into separate categories also makes it relatively easy to look at the ‘openness’ of a particular area of the project — I might not particularly care about the governance for an open-source library if I’m not a contributor, so, I can focus my analysis on the legal ‘openness’ instead, as an example.</p><h4 id="Criticisms"><a href="#Criticisms" class="headerlink" title="Criticisms"></a>Criticisms</h4><p>This tool is not well-suited for people who have never engaged with open source software before; while attempting to answer each question, it required a noticeable amount of overhead time spent researching things like ‘patent laws’. In other words, this isn’t a tool for beginners and, in most cases, might be overkill for someone looking for a simple answer in terms of how ‘open’ a software is. Although it is based off the model defined in <em>Foundations of Openness</em>, if you’re looking for a neat, clean little score, you won’t necessarily find it here. For projects with poor documentation, many of the answers can become subjective - ‘don’t know’ isn’t as much of a marker of a project’s openness than the analyst’s ignorance of the entire project’s scope. This makes it difficult when you’re trying to corroborate data format and standards across the relevant governing bodies without knowing where to begin.</p><p><img src="/images/posts/commarchreport/abstract-no-connection.png" alt="Abstract image representing missed connections."></p><h3 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h3><p>The following sections list the question posed by the tool alongside the answer that best fits what we know about the KDevelop project.</p><p><img src="/images/posts/commarchreport/icons8-law-64.png" alt="Icon of a gavel. From icons8"></p><h4 id="Legal-Issues"><a href="#Legal-Issues" class="headerlink" title="Legal Issues"></a>Legal Issues</h4><p><strong>Is the license recognized as a common Free and Open Source license?</strong><br><code>Both OSI and FSF approved.</code> <em>(KDevelop is licensed under GNU GPL version 2).</em></p><p><strong>Who has permission to run this software?</strong><br><code>Anyone.</code></p><p><strong>Are all project dependencies clearly documented and license compatibilities audited?</strong><br><code>Yes, but the audit process is undocumented.</code></p><p><strong>Who is permitted to examine the human-readable source code of the software?</strong><br><code>Anyone.</code></p><p><strong>Who is permitted to adapt or modify the source code of the software?</strong><br><code>All licencees.</code></p><p><strong>Who is permitted to redistribute the modified or unmodified source code of the software?</strong><br><code>All licencees.</code></p><p><strong>Does the license permit sub-licensing of rights?</strong><br><code>No.</code></p><p><strong>Does the license also grant a patent license to the licensee?</strong><br><code>No.</code></p><p><strong>Is the licensee required to make modified or unmodified source code available if they redistribute the code?</strong><br><code>Yes.</code></p><p><img src="/images/posts/commarchreport/icons8-design-64.png" alt="Icon of a ruler and pencil. From icons8"></p><h4 id="Data-Formats-and-Standards"><a href="#Data-Formats-and-Standards" class="headerlink" title="Data Formats and Standards"></a>Data Formats and Standards</h4><p><strong>Is there full public disclosure of the majority of data and communication formats used in the project?</strong><br><code>Yes.</code></p><p><strong>Does the project rely on any closed proprietary standards?</strong><br><code>No.</code></p><p><strong>Are there any direct costs associated with any standards used?</strong><br><code>No costs.</code></p><p><strong>Are the majority of standards used approved and published by any of the following standards bodies: W3C, IEEE, IETF, OASIS, or ISO?</strong><br><code>No.</code></p><p><strong>Does the project use documented project management processes such as XP, SCRUMM, or PRINCE 2?</strong><br><code>No.</code></p><p><strong>Does the project support unicode through the use of encoding like UTF8?</strong><br><code>Yes.</code></p><p><img src="/images/posts/commarchreport/icons8-books-64.png" alt="Icon of a stack of books. From icons8"></p><h4 id="Knowledge"><a href="#Knowledge" class="headerlink" title="Knowledge"></a>Knowledge</h4><p><strong>Which publicly available communication or dissemination mechanisms does the project use?</strong><br><code>Documentation section of website.</code><br><code>Publicly writeable wiki.</code><br><code>Version control system.</code><br><code>Email lists or online forums.</code><br><code>Instant messaging/IRC.</code><br><code>Issue Tracker.</code></p><p><strong>Does the project discourage major project communications outside the approved channels selected above?</strong><br><code>Yes.</code></p><p><strong>Are project decisions ever made in a non-public environment?</strong><br><code>No.</code></p><p><strong>Is any project knowledge purposely kept private?</strong><br><code>No.</code></p><p><strong>Who is able to access all the (non-private) project knowledge?</strong><br><code>Anyone.</code></p><p><strong>Is there any financial or legal barrier to accessing or acquiring some or all knowledge in the project?</strong><br><code>No.</code></p><p><strong>Is there any technological barrier to accessing or acquiring the knowledge of the project?</strong><br><code>No.</code></p><p><strong>Is the knowledge stored in publicly published data formats (with appropriate metadata) that will make it accessible over time?</strong><br><code>Yes.</code></p><p><strong>Is any of the project knowledge available in more than one language?</strong><br><code>Yes. Over 10 languages.</code></p><p><strong>Who is able to contribute to the project knowledge?</strong><br><code>Anyone.</code></p><p><strong>Are there public archives of the knowledge?</strong><br><code>Some publicly available archives.</code></p><p><strong>Are there documented data recovery processes in place?</strong><br><code>Don’t know.</code></p><p><strong>How good is the user-specific public documentation?</strong><br><code>Documentation is easy to access, easy to read, complete and highly appropriate for the user.</code></p><p><strong>How good is the developer-specific public documentation?</strong><br><code>Minimal developer documentation.</code></p><p><strong>Are there documentation sources external to the project?</strong><br><code>2-4 good sources.</code></p><p><img src="/images/posts/commarchreport/icons8-parliament-64.png" alt="Icon of a parliament building. From icons8"></p><h4 id="Project-Governance"><a href="#Project-Governance" class="headerlink" title="Project Governance"></a>Project Governance</h4><p><strong>Is there clear leadership in the project?</strong><br><code>Yes.</code></p><p><strong>Are the structure and policies of the project clearly and publicly documented?</strong><br><code>Partial (includes one or more of the above items).</code></p><p><strong>Are there publicly accessible behavioural guidelines for the project?</strong><br><code>Yes.</code></p><p><strong>Is there publicly accessible and easy to find documentation about how to participate in the project?</strong><br><code>Yes, for both users and developers.</code></p><p><strong>Is the project leadership elected by the project community?</strong><br><code>No.</code></p><p><strong>Who is able to contribute to the project development?</strong><br><code>Participants willing to register in some way.</code></p><p><strong>Are contributors required to sign a document stating they have the necessary permissions to make their contributions?</strong><br><code>No.</code></p><p><strong>Who is able to obtain commit rights to the project development?</strong><br><code>Partially self appointed, partially meritocratic group.</code></p><p><strong>Is there a single point of failure or control for committing changes to the primary project source?</strong><br><code>No.</code></p><p><strong>Who is able to obtain easy access to and use the software?</strong><br><code>Anyone.</code></p><p><strong>Is the software easy for users to access, install, and run so it can be trialled (for those who have access)?</strong><br><code>Yes, there is a fully automated installer.</code></p><p><strong>The software release cycle (including snapshots and major releases) is…</strong><br><code>Consistent and predictable.</code></p><p><strong>Is it easy to acquire, build, configure, and install the source code from scratch?</strong><br><code>Yes.</code></p><p><strong>Is there an avenue and structure for recourse beyond the project maintainers?</strong><br><code>Yes.</code></p><p><img src="/images/posts/commarchreport/icons8-small-business-64.png" alt="Icon of a small business. From icons8"></p><h4 id="Market-Climate"><a href="#Market-Climate" class="headerlink" title="Market Climate"></a>Market Climate</h4><p><strong>Are there any costs or barriers to setting up a business around the project?</strong><br><code>No.</code></p><p><strong>Are there any technical barriers of entry to setting up a business around the project?</strong><br><code>No.</code></p><p><strong>What proportion of the core developers are from the one company, institution, or department?</strong><br><code>Don’t know.</code></p><p><strong>How many contributors have some or all of the time they spend on the software paid for?</strong><br><code>Don’t know.</code></p><p><strong>Is the project applicable to more than one industry?</strong><br><code>No.</code></p><p><strong>Which revenue models are available to a new business looking to build a revenue stream around the project?</strong><br><code>Customization.</code><br><code>Support and maintenance.</code><br><code>Proprietary extensions.</code></p><p><strong>How many organizations offer commercial software development and code customization services on the project?</strong><br><code>1.</code></p><p><img src="/images/posts/commarchreport/icons8-brief-64.png" alt="Icon of a brief overview. From icons8"></p><h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p>The results are broken down for each category and are listed below:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Legal Issues: <span class="number">79</span>%</span><br><span class="line">Data Formats &amp; Standards: <span class="number">69</span>%</span><br><span class="line">Knowledge: <span class="number">81</span>%</span><br><span class="line">Project Governance: <span class="number">76</span>%</span><br><span class="line">Market Climate: <span class="number">42</span>%</span><br></pre></td></tr></table></figure><p>These results can also be found <a href="http://oss-watch.ac.uk/apps/openness/shared.html?d=P3A9S0RldmVsb3AmbD0wLjc5MzEwMzQ0ODI3NTg2MjEmcz0wLjg3NSZrPTAuODE0ODE0ODE0ODE0ODE0OCZnPTAuNzYmbT0wLjQxOTM1NDgzODcwOTY3NzQ0" target="_blank" rel="noopener">here</a>.</p><p>The ‘Openness Rating’ tool suggests that the KDevelop project is sustainable over the long run. The biggest challenge facing KDevelop’s longevity is in dealing with the market climate. Although a powerful and popular program, there isn’t much in the way of commercial support. KDevelop does have the influence of the KDE Community on its side: KDE developers are likely to support KDevelop as with any of the applications that remain a part of the KDE family.</p><p><img src="/images/posts/commarchreport/konqi_default.png" alt="Konqi - the Dragon mascot for the KDE® family"></p><h2 id="Questions-of-Analysis"><a href="#Questions-of-Analysis" class="headerlink" title="Questions of Analysis"></a>Questions of Analysis</h2><p><strong>A.  Describe software project, its purpose and goals.</strong></p><p>KDevelop is a cross-platform, multi-language integrated development environment (IDE) under the KDE Community banner. KDevelop is free and open-source software, providing support for a variety of markup and programming languages through its extensible plugin-based architecture with additional localization support in several languages. </p><p>Most KDevelop contributors are volunteers who work on the project in their spare time, but, there are currently <strong>four Core Developers</strong>:</p><ul><li><a href="mailto:kfunk@kde.org" target="_blank" rel="noopener">Kevin Funk</a> (Co-maintainer)</li><li><a href="mailto:svenbrauch@gmail.com" target="_blank" rel="noopener">Sven Brauch</a> (Co-maintainer)</li><li><a href="mail@milianw.de">Milian Wolff</a> (Generic Manager)</li><li><a href="aleixpol@gmail.com">Aleix Pol Gonzalez</a> (CMake/Run/Kross/Git Support)</li></ul><p>KDevelop is a reliable and powerful environment for developers and is FLOSS software. As part of the KDE Community, this application also joins the goal of making a consistent Kool Desktop Environment.</p><hr><p><strong>B.  Give brief history of the project. When was the Initial Commit? The latest commit?</strong></p><p>The earliest days of KDevelop found its first 0.1 Alpha version announced on the <a href="https://marc.info/?l=kde-announce&amp;m=90648146015087&amp;w=2" target="_blank" rel="noopener">kde-announce</a> mailing list - on September 22nd, 1998, developers Sandy Meier, Stefan Heidrich, and Stefan Bartel hosted the unstable tarball package on KDE’s FTP server. KDevelop has changed significantly since those early days, and its most recent long term support (LTS) incarnation - <a href="https://github.com/KDE/kdevelop/releases/tag/v4.0.1" target="_blank" rel="noopener">KDevelop4</a> - was released nine years ago on July 16th, 2010 (<a href="https://github.com/KDE/kdevelop/commit/79ca7610af2e303d7ed8940d4fd3798b9786d96e" target="_blank" rel="noopener">Commit 79ca761…</a>).</p><p>It wasn’t until the next year, on January 9th, 1999, that the initial work started on KDevelop was moved into a version control system (<a href="https://github.com/KDE/kdevelop/commit/f12757c0f4c72b06e9dd77b096250c6f04d7cae1" target="_blank" rel="noopener">Commit f12757c…</a>). Described as version 0.2, developers Meier, Heidrich, and Bartel were joined by Ralf Nolden, Jost Schenk, and David Barth. It was during this import into a git repository that the origins of the source code were documented. KDevelop’s original source code drew from KWrite - a text editor in the KDE family maintained by Jochen Wilhemy - and that connection between the applications remains present today. At the time, KDevelop also included test code from ‘kswallowwidget’ that was later removed in the <a href="https://marc.info/?l=kde-commits&amp;m=94979406811303&amp;w=2" target="_blank" rel="noopener">next year</a>.</p><p>At the time of writing this entry, the most recent commit (<a href="https://github.com/KDE/kdevelop/commit/d5e3e27bb2720d84adda95de07a728a9e61c866f" target="_blank" rel="noopener">Commit d5e3e27…</a>) to KDevelop’s <a href="https://github.com/KDE/kdevelop" target="_blank" rel="noopener">master</a> branch was authored yesterday by Thibault North (<a href="https://github.com/tnorth" target="_blank" rel="noopener">@tnorth</a>) - a member of the Fedora project based in Switzerland - and committed by Milian Wolff (<a href="https://github.com/milianw" target="_blank" rel="noopener">@milianw</a>) - a core developer of KDevelop based in Berlin, Germany. The most recent release, <a href="https://github.com/KDE/kdevelop/releases/tag/v5.3.2" target="_blank" rel="noopener">v5.3.2</a> (<a href="https://github.com/KDE/kdevelop/commit/48bdc10109ca5c0db6938b9eb89ea6890212cbf8" target="_blank" rel="noopener">Commit 48bdc10…</a>) was published by Kevin Funk (<a href="https://github.com/krf" target="_blank" rel="noopener">@krf</a>), a co-maintainer of the KDevelop project, based in Cologne, Germany.</p><hr><p><strong>C.  Who approves patches? How many people?</strong></p><p>According to the commit review reports on the project’s <a href="https://phabricator.kde.org/dashboard/view/8/" target="_blank" rel="noopener">Phabricator</a> dashboard, there are a couple of consistent names that appear to be in charge of reviewing commits that are authored. While each of the core developers - Kevin Funk, Sven Brauch, Milian Wolff, and Aleix Pol Gonzalez - are listed as recurring reviewers, it seems that the option to review and approve patches are open to anyone willing to do the work.</p><p>The KDE Community even provides <a href="https://community.kde.org/Infrastructure/Phabricator#How_to_review_someone_else.27s_patch" target="_blank" rel="noopener">documentation</a> for new contributors who are interested in reviewing patches and performing quality assurance on new commits and pull requests. In practice, there were <em>five</em> unique reviewers that would approve commits.</p><hr><p><strong>D.  Who has commit access, or has had patches accepted?  How many total?</strong></p><p>The GitHub <a href="https://github.com/KDE/kdevelop" target="_blank" rel="noopener">repository</a> (and by extension, its mirrors) list 282 unique contributors to the master branch (excluding merge commits). Of those contributors, only four contributors that have been active in the last three years have 1,000 or more commits. This being said, the numbers may be skewed as some core developers, like Milian Wolff, both author and approve patches. Of the contributors who are not presently reviewing patches through Phabricator, there are three with 1,000 or more commits. There are at least 25 other contributors with 100 or more commits over the lifetime of the project.</p><p>KDevelop’s <a href="https://www.kdevelop.org/kdevelop-team" target="_blank" rel="noopener">homepage</a> lists 14 inactive core developers, 2 active contributors, and 4 remaining core developers. If including patches for localization efforts, there are roughly 9 different languages that have supporters.</p><p>In theory, anyone can contribute. Contributors who wish to join the project need only <a href="https://www.kdevelop.org/contribute-kdevelop" target="_blank" rel="noopener">contact</a> the core and active developers via the IRC channel or developer mailing list. Those who have created a new patch without going through that process can also post a request directly to the project’s Phabricator instance. It seems that anyone who follows the developer documentation and reaches out can gain access.</p><hr><p><strong>E.  Who has the highest amounts of “Unique Knowledge?” <em>(As per your “Git-by-a-bus” report. If there is a tie, list each contributor, with links if possible)</em></strong></p><ul><li>Aleix Pol (GitHub: <a href="https://github.com/aleixpol" target="_blank" rel="noopener">@aleixpol</a>)</li><li>Kevin Funk (GitHub: <a href="https://github.com/krf" target="_blank" rel="noopener">@krf</a>)</li></ul><hr><p><strong>F.  What is your project’s <em>Callaway Coefficient of Fail</em>?</strong></p><ul><li>The source code is more than 100MB (18.8 MB uncompressed) [+0]</li><li>KDevelop uses git and cgit [+0]</li><li>KDevelop builds using kdesrc-build, which uses cmake [+0]</li><li>kdesrc-build takes care of dependencies for you, which you can choose to install manually if you want to, does not require users to build them either way [+0]</li><li>KDevelop installs on systems properly [+0]</li><li>There are no weird compilation exploits and all files were made to work with KDE so they had linux in mind [+0]</li><li>KDevelop has their own website, IRC, mailing list, and bug tracker that all seem to be working well [+0]</li><li>Releases, while infrequent, are well numbered and formatted. [+0]</li><li>KDevelop 5 is the 5th release of KDevelop, and Milian worked on that version quite a bit [+0]</li><li>Uses the GNU license [+0]</li><li>There’s a lot of documentation for KDevelop, some of it isn’t that well maintained (and they know it), but it’s there [+0]<br>Total: 0</li></ul><hr><p><strong>G.  Has there been any turnover in the Core Team? Has the same top 20% of contributors stayed the same over time? If not, how has it changed?</strong></p><p>Yes, the core team has changed quite a bit over the years, the contributions shifted from 2008-2012 the old KDevelop team stopped working on the project and another team picked it up. This was around the time when Kdevelop 4.x stopped development and KDevelop 5 development began in 2014. There’s a list of 12 inactive core developers and only 4 active ones. Kevin Funk, Sven Brauch, Milian Wolff, and Aleix Pol Gonzales are the current members of the core development team. The <a href="https://www.kdevelop.org/kdevelop-team" target="_blank" rel="noopener">about</a> page has information on all of the major contributors. </p><hr><p><strong>H.  Does the project have a BDFL, or Lead Developer? (BDFL == Benevolent Dictator for Life) If not, what is the structure of its leadership, and how is it chosen?</strong></p><p>Kind of, Milian Wolff is the generic manager, while Kevin Funk and Sven Brauch have taken on the role of “Co-maintainers”. There’s no indication of why they were given these roles other than them being pretty active in the git repositories. Funk and Milian seem to be the ones that write the release notes and Wolff takes care of the releases, so he’s the closest to the BDFL.</p><hr><p><strong>I.  Are the front and back end developers the same people? What is the proportion of each?</strong></p><p>Sven Brauch, one of the Co-Maintainers works on User Interface improvements and python support. Hes ¼ of the team and does backend and frontend work. Two of the other members in the team, Woolff and Funk, also work on website development. Since Kdevelop has such a small core team, it’s inevitable that the backend developers work on ui and web development. Since Sven is only responsible for “improvements”, it might not be a very time consuming role, allowing him to also work on Python support.</p><hr><p><strong>J.  What have been some of the major bugs/problems/issues that have arisen during development? Who is responsible for quality control and bug repair?</strong></p><p>KDevelop has had 40 reported bugs labeled as critical. Some of them come from dependency-related issues – having the wrong version of Qt installed has caused a few critical bugs, and bugs in Qt have caused a few more. The work seems to be self-distributed among the contributors, or distributed through a channel other than the bug tracker – very few bugs are officially assigned, and most are just eventually marked fixed with an explanation of the fix.</p><hr><p><strong>K.  How is the project’s participation trending and why?</strong></p><p>KDevelop’s participation has been trending downwards over the past few years. Only two of the four core developers commit regularly now, and one much more than the other. However, it still regularly sees bugs fixed and new features added. It’s unclear why this is happening, but it seems likely that it’s just because KDevelop isn’t a massively popular IDE and the project has been around for a very long time.</p><hr><p><strong>L.  In your opinion, does the project pass “The Raptor Test?” (i.e. Would the project survive if the BDFL, or most active contributor were eaten by a Velociraptor?) Why or why not?</strong></p><p>Not easily. After processing their conflicted feelings – raptors have been revived and someone just <em>died</em> to them – they’d need to learn CMake to account for Aleix Pol’s contributions. However, it would be possible to adapt and move on.</p><hr><p><strong>M.  In your opinion, would the project survive if the core team, or most active 20% of contributors, were hit by a bus? Why or why not?</strong></p><p>Almost definitely not. There’s fairly little contribution from people outside of the core team, and those on the core team account for nearly half of the knowledge.</p><hr><p><strong>N.  Does the project have an official “on-boarding” process in place? (New contributor guides, quickstarts, communication leads who focus specifically on newbies, etc…).</strong></p><p>There is a general <a href="https://www.kdevelop.org/contribute-kdevelop" target="_blank" rel="noopener">invitation</a> for contributors to contact developers on the IRC or through the mailing list if they want to get started. Unfortunately, there doesn’t seem to be one, singular ‘on-boarding’ process that new contributors can utilize to get used to the process. A trip to the <a href="https://userbase.kde.org/KDevelop4" target="_blank" rel="noopener">linked documentation page</a> opens with another invitation for people to help extend the documentation itself; it can be overwhelming to join the project if you’re not sure how to get started. The documentation that does point to something useful for new contributors was found on a <a href="https://github.com/krf/kdevelop" target="_blank" rel="noopener">mirror repository</a>, as opposed to the main one.</p><hr><p><strong>O.  Does the project have Documentation available? How extensive is it? Does it include code examples?</strong></p><p>There is several avenues for documentation - including for users, developers, and translators that are a part of the localization effort. Unfortunately, since the release of KDevelop5, the most recent documentation for developers and users has been lacking. With that said, KDevelop4 has been documented extensively. Discussion about using KDevelop also takes place across the many blogs by developers; KDevelop’s homepage provides access to an <a href="https://www.kdevelop.org/developer-blogs" target="_blank" rel="noopener">aggregate list</a> that pulls from some of them.</p><hr><p><strong>P.  If you were going to contribute to this project, but ran into trouble or hit blockers, who would you contact, and how?</strong></p><p>The core developers via IRC or the mailing list. Technically, you could contact the developers directly via their email, however, there’s a better chance of getting a timely response when sending this feedback through the mailing list. In addition, conversations about challenges in the public space are healthier for the growth of any FLOSS community - archived discussions in the public space allow future developers the opportunity to learn from the past.</p><hr><p><strong>Q.  Based on these answers, how would you describe the decision making structure/process of this group?  Is it hierarchical, consensus building, ruled by a small group, barely contained chaos, or ruled by a single or pair of individuals?</strong></p><p>The structure of this project seems to be both ruled and maintained by a small group of people. It seems that aside from the 4 team members, there are only two other active contributors. Everyone else is either inactive or not acknowledged by the core team. While it seems like the team would like to have more contributors to help with the project, it seems like it would be difficult to start working on.</p><hr><p><strong>R.  Is this the kind of structure you would enjoy working in? Why, or why not?</strong></p><p>I dislike the lack of clarity surrounding the steps new contributors would need to take in order to get involved. Documentation is important for large projects, but, it often seems that development is currently outpacing the speed of the developer documentation itself. The current codebase is so far removed from the initial 1.0 release, that, you’d need to engage with the core developers (who are all in a different timezone) in order to be introduced to how everything works. This could be solved with an on-boarding process for new contributors. From there, it seems they are pretty open to developers patching as they want to, but, it’s hard to gauge the social dynamics of the most recent active contributors - unfortunately, the mailing list rarely is geared towards new participants.</p><hr><h3 id="Presentation"><a href="#Presentation" class="headerlink" title="Presentation"></a>Presentation</h3><p>The deck accompanying this report can be found <a href="https://slides.com/iae2784/deck" target="_blank" rel="noopener">here</a>.</p><p><img src="/images/posts/commarchreport/abstract-success.png" alt="Abstract image reflecting joy and success."></p><p><em>This presentation was made with the Slides platform. Slides is built with the help of many great open source frameworks and projects including <a href="http://somerandomdude.com/work/iconic/" target="_blank" rel="noopener">Iconic</a>, <a href="http://fortawesome.github.com/Font-Awesome/" target="_blank" rel="noopener">Font Awesome</a>, <a href="http://www.entypo.com/" target="_blank" rel="noopener">Entypo</a>, <a href="http://icomoon.io/" target="_blank" rel="noopener">IcoMoon</a>, <a href="http://icomoon.io/" target="_blank" rel="noopener">Broccolidry</a>, <a href="http://www.webhostinghub.com/glyphs/" target="_blank" rel="noopener">WebHostingHub Glyphs</a>, <a href="https://github.com/google/material-design-icons/blob/master/LICENSE" target="_blank" rel="noopener">Material Design Icons</a>, <a href="http://jquery.com/" target="_blank" rel="noopener">jQuery</a>, <a href="http://ace.c9.io/" target="_blank" rel="noopener">Ace</a>, <a href="http://modernizr.com/" target="_blank" rel="noopener">Modernizr</a>, <a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js</a>, <a href="https://github.com/bgrins/spectrum" target="_blank" rel="noopener">Spectrum</a> and <a href="https://github.com/Khan/KaTeX" target="_blank" rel="noopener">KaTeX</a>. The developers contribute back to the community by maintaining <a href="https://github.com/hakimel/reveal.js" target="_blank" rel="noopener">reveal.js</a>, an open source HTML presentation framework.</em></p><hr><h2 id="Important-Links"><a href="#Important-Links" class="headerlink" title="Important Links"></a>Important Links</h2><p>IRC: <a href="https://webchat.freenode.net/?channels=kdevelop" target="_blank" rel="noopener">#kdevelop</a> on freenode</p><p>Source:</p><p><a href="https://github.com/KDE/kdevelop" target="_blank" rel="noopener">https://github.com/KDE/kdevelop</a><br><a href="https://cgit.kde.org/kdevelop.git" target="_blank" rel="noopener">https://cgit.kde.org/kdevelop.git</a> <em>(Mirror repository)</em><br><a href="https://github.com/krf/kdevelop" target="_blank" rel="noopener">https://github.com/krf/kdevelop</a> <em>(Mirror repository)</em></p><p>Mailing List Archive(s): </p><p><a href="https://mail.kde.org/pipermail/kdevelop/" target="_blank" rel="noopener">https://mail.kde.org/pipermail/kdevelop/</a> ,<br><a href="https://mail.kde.org/pipermail/kdevelop-devel/" target="_blank" rel="noopener">https://mail.kde.org/pipermail/kdevelop-devel/</a></p><p>Documentation:</p><p><a href="http://www.kdevelop.org/index.html?filename=HEAD/features.html" target="_blank" rel="noopener">http://www.kdevelop.org/index.html?filename=HEAD/features.html</a> <em>(Feature list)</em><br><a href="http://www.kdevelop.org/index.html?filename=HEAD/requirements.html" target="_blank" rel="noopener">http://www.kdevelop.org/index.html?filename=HEAD/requirements.html</a> <em>(Requirements)</em><br><a href="http://www.kdevelop.org/index.html?filename=HEAD/branches_compiling.html" target="_blank" rel="noopener">http://www.kdevelop.org/index.html?filename=HEAD/branches_compiling.html</a> <em>(Compilation instructions)</em><br><a href="http://api.kde.org/extragear-api/sdk-apidocs/kdevelop/doc/api/html" target="_blank" rel="noopener">http://api.kde.org/extragear-api/sdk-apidocs/kdevelop/doc/api/html</a> <em>(KDevelop IDE API documentation)</em><br><a href="http://api.kde.org/extragear-api/sdk-apidocs/kdevplatform/html" target="_blank" rel="noopener">http://api.kde.org/extragear-api/sdk-apidocs/kdevplatform/html</a> <em>(KDevelop Platform API documentation)</em><br><a href="https://userbase.kde.org/KDevelop4" target="_blank" rel="noopener">https://userbase.kde.org/KDevelop4</a> <em>(User documentation)</em><br><a href="https://techbase.kde.org/KDevelop5" target="_blank" rel="noopener">https://techbase.kde.org/KDevelop5</a> <em>(Developer documentation)</em></p><p>Other Communication:</p><p><a href="https://forum.kde.org/viewforum.php?f=218" target="_blank" rel="noopener">https://forum.kde.org/viewforum.php?f=218</a> <em>(KDE KDevelop forum board)</em><br><a href="https://reports.kde.org/en/projects/kdevelop-extragear-kdevelop/commits_report" target="_blank" rel="noopener">https://reports.kde.org/en/projects/kdevelop-extragear-kdevelop/commits_report</a> <em>(KDevelop commit breakdown by author)</em><br><a href="https://bugs.kde.org/enter_bug.cgi?format=guided&amp;product=kdevelop" target="_blank" rel="noopener">https://bugs.kde.org/enter_bug.cgi?format=guided&amp;product=kdevelop</a> <em>(Bug tracking system for KDE community)</em><br><a href="https://phabricator.kde.org/dashboard/view/8/" target="_blank" rel="noopener">https://phabricator.kde.org/dashboard/view/8/</a> <em>(Phabricator instance for KDE family of applications)</em></p><p>Project Homepage:</p><p><a href="https://www.kdevelop.org/" target="_blank" rel="noopener">https://www.kdevelop.org/</a></p><p>Developer Blogs:</p><p><a href="https://www.kdevelop.org/developer-blogs" target="_blank" rel="noopener">https://www.kdevelop.org/developer-blogs</a></p><p><img src="/images/posts/commarchreport/abstract-message-sent.png" alt="Abstract image representing mail."></p><h2 id="References-amp-Attributions"><a href="#References-amp-Attributions" class="headerlink" title="References &amp; Attributions"></a>References &amp; Attributions</h2><p><a href="http://oss-watch.ac.uk/apps/openness/" target="_blank" rel="noopener">The ‘Openness Rating’ Tool</a> - © 2007-2014 University of Oxford <code>CC BY-SA 4.0</code>.<br>Git By a Lion (Fun fact, from an RIT alum). - © <a href="https://github.com/liam-middlebrook" target="_blank" rel="noopener">Liam Middlebrook</a> <code>GNU GPL ver. 3</code>.<br>Illustrations of Konqi and friends - © <a href="https://www.deviantart.com/tysontan" target="_blank" rel="noopener">Tyson Tan</a> <code>CC BY-SA 4.0</code>.<br>Icons and banner illustrations - © <a href="https://icons8.com" target="_blank" rel="noopener">icons8.com</a> <code>CC BY-ND 3.0</code>.<br>Slideshow presentation platform - © 2019 <a href="https://slides.com/about?root=true" target="_blank" rel="noopener">Slides, Inc.</a> <code>All rights reserved.</code>.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> architecture </tag>
            
            <tag> documentation </tag>
            
            <tag> analysis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quicklook: SONY&#39;s Open Source Surprise - OpenColorIO</title>
      <link href="/blog/hfoss/quicklook-sony-oss/"/>
      <url>/blog/hfoss/quicklook-sony-oss/</url>
      
        <content type="html"><![CDATA[<h1 id="Sony’s-OpenColorIO"><a href="#Sony’s-OpenColorIO" class="headerlink" title="Sony’s OpenColorIO"></a>Sony’s OpenColorIO</h1><p>Sony Pictures Imageworks, the visual effects and animation studio belonging to Sony, has open-sourced <em><a href="http://opencolorio.org/" target="_blank" rel="noopener">OpenColorIO</a></em>, a tool used to help create movies like the Academy-award winning <em>Spider-Man: Into the Spider-Verse</em>, <em>Hotel Transylvania 3</em>, <em>Alice in Wonderland</em>, and <em>Cloudy with a Chance of Meatballs</em>. </p><h2 id="What-is-this-software"><a href="#What-is-this-software" class="headerlink" title="What is this software?"></a>What is this software?</h2><p><em>OpenColorIO</em> (OCIO) is a color management software suited for motion picture production that emphasizes visual effects and computer animation. It is compatible with the Academy Color Encoding Specification (ACES), an industry-standard. </p><p>Sony has contributed the tool to the <a href="https://www.aswf.io/" target="_blank" rel="noopener">Academy Software Foundation</a> (ASWF), an organization founded in August of 2018 with a focus on improving the quality of the film industry’s open source software.</p><p><em>OpenColorIO</em> is now under a modified BSD license. </p><p>Those interested in contributing can take a look at the <a href="http://opencolorio.org/developers/index.html" target="_blank" rel="noopener">developer’s guide</a> on their website for the system. There are also a couple of mailing lists posted for those interested in collaborating.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> graphics </tag>
            
            <tag> quicklook </tag>
            
            <tag> film </tag>
            
            <tag> imaging </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Read It! The Architecture of Open Source Applications</title>
      <link href="/blog/hfoss/reading-oss-arch/"/>
      <url>/blog/hfoss/reading-oss-arch/</url>
      
        <content type="html"><![CDATA[<h1 id="The-Architecture-of-Open-Source-Applications"><a href="#The-Architecture-of-Open-Source-Applications" class="headerlink" title="The Architecture of Open Source Applications"></a>The Architecture of Open Source Applications</h1><p>This anthology of software development and general programming books have a focus on exploring open source applications and the way they are built.</p><h2 id="Who-created-this"><a href="#Who-created-this" class="headerlink" title="Who created this?"></a>Who created this?</h2><p><em>The Architecture of Open Source Applications</em> - AOSA for short - has several editors and contributors. Dozens of volunteers work to create the book and maintain it. </p><p>The AOSA editors maintain a <a href="http://aosabook.org/blog/" target="_blank" rel="noopener">blog</a> and a Twitter account via <a href="http://twitter.com/aosabook" target="_blank" rel="noopener">@aosabook</a>.</p><p>If you want to contact the editors with questions, suggestions, or a desire to contribute, you can <a href="aosa@aosabook.org">email</a> AOSA as well.</p><h2 id="What’s-inside"><a href="#What’s-inside" class="headerlink" title="What’s inside?"></a>What’s inside?</h2><p>There are several volumes published by AOSA’s editors convering a wide range of topics.</p><p>In the first volume: <em>Elegance, Evolution, and a Few Fearless Hacks</em>, edited by Amy Brown and Greg Wilson, the book attempts to draw a parallel between building architecture and software architecture, making a significant case for developers to learn from the codebase of large-scale open source software projects.</p><p>Published a year later, in volume 2, <em>Structure, Scale, and a Few More Fearless Hacks</em>, editors Brown and Wilson followed up with several more examples that exemplified software development at scale.</p><p>The third volume, <em>The Performance of Open Source Applications: Speed, Precision, and a Bit of Serendipity</em>, this time edited by Tavish Armstrong, is a collection of case studies in identifying performance bottlenecks in real-life examples and improving them to meet the growing demands of mobile and network development.</p><p>In the fourth and most recent volume, <em>500 Lines or Less</em>, editor Michael DiBernardo steps back from the large-scale open source giants and refocuses the critical lens on the small projects where developers are starting from scratch. Each chapter is a case study - in programs written especially for the book - that encourages readers to consider their own approaches, considerations, and constraints when developing a new application.</p><h2 id="Who-is-the-audience"><a href="#Who-is-the-audience" class="headerlink" title="Who is the audience?"></a>Who is the audience?</h2><p>The AOSA series targets junior developers seeking enrichment and senior developers seeking industry reference. Just as architects are expected to learn from their masterful peers, AOSA’s editors believe that developers have a lot to learn from each other and can skip making the same mistakes for solved problems.</p><h2 id="Where-can-you-find-it"><a href="#Where-can-you-find-it" class="headerlink" title="Where can you find it?"></a>Where can you find it?</h2><p>The series is available for free, online at AOSA’s <a href="http://aosabook.org/en/index.html" target="_blank" rel="noopener">website</a>. Each volume is also available in paperback, epub, and PDF formats at cost - all royalties from sales are donated to <a href="http://amnesty.org/" target="_blank" rel="noopener">Amnesty International</a>. If you’re interested in picking up a print or epub version of the material, it’s suggested you purchase throug Lulu.com instead of through Amazon or another retailer.</p><h2 id="How-much-time-would-you-be-putting-in"><a href="#How-much-time-would-you-be-putting-in" class="headerlink" title="How much time would you be putting in?"></a>How much time would you be putting in?</h2><p>There’s a lot of reading to be done, so, if you’re inclined to get into this work, you’ll need a lot of time if you hope to get through all four volumes.</p><h2 id="What’s-the-license"><a href="#What’s-the-license" class="headerlink" title="What’s the license?"></a>What’s the license?</h2><p>The AOSA series is made available under the <a href="http://creativecommons.org/licenses/by/3.0/legalcode" target="_blank" rel="noopener">Creative Commons Attribution 3.0 Unported</a> license.</p><h2 id="Is-it-possible-to-contribute"><a href="#Is-it-possible-to-contribute" class="headerlink" title="Is it possible to contribute?"></a>Is it possible to contribute?</h2><p>If you’re interested in contributing, it is suggested that you contact AOSA by email. The editors are always looking for translators and volunteers who are interested in fixing the writing itself.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> architecture </tag>
            
            <tag> documentation </tag>
            
            <tag> reading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Literature Review #3: NYS Next Generation Mathematics Learning Standards</title>
      <link href="/blog/hfoss/lit-review-3/"/>
      <url>/blog/hfoss/lit-review-3/</url>
      
        <content type="html"><![CDATA[<h1 id="Review-NYS-Next-Generation-Mathematics-Learning-Standards"><a href="#Review-NYS-Next-Generation-Mathematics-Learning-Standards" class="headerlink" title="Review: NYS Next Generation Mathematics Learning Standards"></a>Review: NYS Next Generation Mathematics Learning Standards</h1><p>In this literature review, HFOSS students were asked to review the education standards for New York State’s mathematics curriculae. This is in preparation for our final project.</p><a id="more"></a><hr><h2 id="The-Basics"><a href="#The-Basics" class="headerlink" title="The Basics"></a>The Basics</h2><p>The <em>New York State Next Generation Mathematics Learning Standards</em> reflect the mathematic standards of New York State. They are, “designed to support student access to the knowledge and understanding of the mathematical concepts that are necessary to function in a world very dependent upon the application of mathematics, while providing educators the opportunity to devise innovative programs to support this endeavor” (pp. 3). </p><p>Published by the New York State Department of Education, you can find the 2017 standards, <a href="http://www.nysed.gov/common/nysed/files/programs/curriculum-instruction/nys-next-generation-mathematics-p-12-standards.pdf" target="_blank" rel="noopener">here</a>.</p><p>Another document focused specifically on the Grade 4 standards can be found <a href="http://www.nysed.gov/common/nysed/files/math-revised-2017-standards-grade-4.pdf" target="_blank" rel="noopener">here</a>.</p><p>These standards were last revised in 2017.</p><hr><h2 id="The-Gist"><a href="#The-Gist" class="headerlink" title="The Gist"></a>The Gist</h2><p>For this particular review, students were asked to look at the overview for Grade 4 instruction. Essentially, the pedagogical focus of this section established focus around three areas:</p><ul><li>(1) Fluency with multi-digit multiplication and division.</li><li>(2) Familiarity with fraction arithmetic.</li><li>(3) Understanding of geometric figures and properties such as angles, perpendicularity, and symmetry.</li></ul><hr><h2 id="The-Good"><a href="#The-Good" class="headerlink" title="The Good"></a>The Good</h2><p>The standards provide detailed definitions that plainly lay out expectations of academic progress for students. Examples are clearly presented beside each entry of mathematical content.</p><hr><h2 id="The-Bad"><a href="#The-Bad" class="headerlink" title="The Bad"></a>The Bad</h2><p>The nature of standards to be exact and precise lends itself to being verbose. While this might be useful for identifying what an instructor needs to include when creating curriculum for the classroom, it’s takes a moment to grab the important information. Sections, like the one with a note on procedural fluency on page 59, are written in ways that make the purpose unclear. You might end up halfway through a paragraph before realizing it’s a redundant passage or is simply offering a lengthy ‘precise’ definition for a term that should have been defined earlier in the standard. </p><p>This, however, is something that academia suffers from and is not unique to this mathematics standard. The language used is complex and can definitely be simplified, often feeling like a form of ‘legalese’. This makes the writing less accessible to people who simply want to know what type of math needs to be taught to grade schoolers. </p><hr><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ul><li><p>What are some example problems that students would have to solve for a particular mathematical concept?</p></li><li><p>Are some problems more suited than others for teaching the subject at hand? As an example, are visual exercises with models and diagrams easier for students learning fraction arithmetic over word problems? Are both types necessary? If so, does the final product need to anticipate including them?</p></li></ul><h2 id="Follow-Up"><a href="#Follow-Up" class="headerlink" title="Follow-Up"></a>Follow-Up</h2><p>In this particular case, the take away is that Grade 4 students are expected to engage with fractional math and deal with multiplication/division arithmetic. For the final product, an activity on the Sugar platform that engages students with fractional math exercises may be a great choice of focus.</p><p>A visual representation of fraction multiplication and division might be one direction for an educational game. Another learning activity might deal with geometric properties and concepts. When coming up with a final project proposal for the course, referencing these mathematical practices will be helpful, making the standard an invaluable resource for that purpose.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> documentation </tag>
            
            <tag> reading </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Community Archictecture Analysis: Team Proposal</title>
      <link href="/blog/hfoss/commarchteam/"/>
      <url>/blog/hfoss/commarchteam/</url>
      
        <content type="html"><![CDATA[<h1 id="Team-Proposal"><a href="#Team-Proposal" class="headerlink" title="Team Proposal"></a>Team Proposal</h1><p>This blog post serves as a proposal for the community architecture analysis of KDEvelop.</p><h2 id="Team-Members"><a href="#Team-Members" class="headerlink" title="Team Members"></a>Team Members</h2><ul><li>Nic Hartley</li><li><p><a href="mailto:nxh9052@rit.edu" target="_blank" rel="noopener">nxh9052@rit.edu</a></p></li><li><p>Joshua Schenk</p></li><li><p><a href="mailto:jks7743@rit.edu" target="_blank" rel="noopener">jks7743@rit.edu</a></p></li><li><p>Ian Effendi</p></li><li><a href="mailto:iae2784@rit.edu" target="_blank" rel="noopener">iae2784@rit.edu</a> </li></ul><h2 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h2><p>Our team is performing an analysis on the community architecture of the <a href="https://www.kdevelop.org/" target="_blank" rel="noopener">KDEvelop</a> IDE.</p><p>KDevelop is a cross-platform, multi-language IDE, with a wide variety of integrations. It supports plugins to add more functionality seamlessly.</p><h2 id="Division-of-Labor"><a href="#Division-of-Labor" class="headerlink" title="Division of Labor"></a>Division of Labor</h2><p>Each team member is responsible for a different ‘slice’ of the analysis.</p><h3 id="Nic-Hartley"><a href="#Nic-Hartley" class="headerlink" title="Nic Hartley"></a>Nic Hartley</h3><p>Nic is responsible for running Git By a Bus on the repository and answering questions related to the project’s survivability in the event the top 20% of active contributors were unable to continue development. </p><p>This includes the following questions:</p><ol><li><p>6E - Who has the highest amounts of “Unique Knowledge?” (As per your “Git-by-a-bus” report. If there is a tie, list each contributor, with links if possible).</p></li><li><p>6J - What have been some of the major bugs/problems/issues that have arisen during development? Who is responsible for quality control and bug repair?</p></li><li><p>6K - How is the project’s participation trending and why?</p></li><li><p>6L - In your opinion, does the project pass “The Raptor Test?” (i.e. Would the project survive if the BDFL, or most active contributor were eaten by a Velociraptor?) Why or why not?</p></li><li><p>6M - In your opinion, would the project survive if the core team, or most active 20% of contributors, were hit by a bus? Why or why not?</p></li></ol><h3 id="Joshua-Schenk"><a href="#Joshua-Schenk" class="headerlink" title="Joshua Schenk"></a>Joshua Schenk</h3><p>Joshua is responsible for calculating the Callaway Coefficient of Fail and answering questions regarding the structure and decision-making process of the community.</p><p>This includes the following questions:</p><ol><li><p>6F - What is your project’s “Calloway Coefficient of Fail?”</p></li><li><p>6G - Has there been any turnover in the Core Team? (i.e. has the same top 20% of contributors stayed the same over time? If not, how has it changed?)</p></li><li><p>6H - Does the project have a BDFL, or Lead Developer? (BDFL == Benevolent Dictator for Life) If not, what is the structure of its leadership, and how is it chosen?</p></li><li><p>6I - Are the front and back end developers the same people? What is the proportion of each?</p></li><li><p>6Q - Based on these answers, how would you describe the decision making structure/process of this group? Is it hierarchical, consensus building, ruled by a small group, barely contained chaos, or ruled by a single or pair of individuals?</p></li></ol><h3 id="Ian-Effendi"><a href="#Ian-Effendi" class="headerlink" title="Ian Effendi"></a>Ian Effendi</h3><p>Ian is responsible for the utilizing the alternative analysis tool (in this case, the ‘<a href="http://oss-watch.ac.uk/apps/openness/" target="_blank" rel="noopener">Openness Rating</a>’ tool provided by OSS Watch) and answering biographical questions regarding the project.</p><p>This includes answering the following questions:</p><ol><li><p>6A - Write a description of the project, its purpose and goals.</p></li><li><p>6B - Give a brief history of the project. When was the initial commit? The latest commit?</p></li><li><p>6C - Who approves patches? How many people?</p></li><li><p>6D - Who has commit access, or has had patches accepted? How many total?</p></li><li><p>6N - Does the project have an official “on-boarding” process in place? (new contributor guides, quickstarts, communication leads who focus specifically on newbies, etc…)</p></li><li><p>6O - Does the project have Documentation available? How extensive is it? Does it include code examples?</p></li><li><p>6P - If you were going to contribute to this project, but ran into trouble or hit blockers, who would you contact, and how?</p></li></ol><h2 id="Important-Links"><a href="#Important-Links" class="headerlink" title="Important Links"></a>Important Links</h2><p>The source code can be found at <a href="https://github.com/KDE/kdevelop" target="_blank" rel="noopener">KDEvelop’s GitHub Repository</a>.</p><h2 id="How-will-you-communicate-with-them-i-e-IRC-Channel-Email-Address-mail-lists-issue-trackers-etc…"><a href="#How-will-you-communicate-with-them-i-e-IRC-Channel-Email-Address-mail-lists-issue-trackers-etc…" class="headerlink" title="How will you communicate with them? (i.e. IRC Channel, Email Address, mail lists, issue trackers, etc…)"></a>How will you communicate with them? (i.e. IRC Channel, Email Address, mail lists, issue trackers, etc…)</h2><p>KDEvelop uses the #kdevelop channel on Freenode IRC.<br>The project mailing list can be found here: <a href="https://mail.kde.org/mailman/listinfo/kdevelop-devel" target="_blank" rel="noopener">https://mail.kde.org/mailman/listinfo/kdevelop-devel</a></p><h2 id="Upstream-Contributor-Mentors"><a href="#Upstream-Contributor-Mentors" class="headerlink" title="Upstream / Contributor Mentors"></a>Upstream / Contributor Mentors</h2><p>Several team members are listed on KDEvelop’s website <a href="https://www.kdevelop.org/kdevelop-team" target="_blank" rel="noopener">here</a>, including inactive developers. Below is the information for the core and active contributors.</p><h3 id="Core-Developers"><a href="#Core-Developers" class="headerlink" title="Core Developers"></a>Core Developers</h3><ul><li>Kevin Funk | <a href="mailto:kfunk@kde.org" target="_blank" rel="noopener">kfunk@kde.org</a></li><li><p>Co-maintainer; C++/Clang, General Improvements, QA, Windows Support, Performance, Website, and more…</p></li><li><p>Sven Brauch | <a href="mailto:svenbrauch@gmail.com" target="_blank" rel="noopener">svenbrauch@gmail.com</a></p></li><li><p>Co-Maintainer; Python Support, User Interface improvements</p></li><li><p>Milian Wolff | <a href="mailto:mail@milianw.de" target="_blank" rel="noopener">mail@milianw.de</a></p></li><li><p>Generic manager, Webdevelopment Plugins, Snippets, Bugfixing, Performance, and more…</p></li><li><p>Aleix Pol Gonzalez | <a href="aleixpol@gmail.com">aleixpol@gmail.com</a></p></li><li>CMake Support, Run Support, Kross Support, Git Support, and more…</li></ul><h3 id="Active-Contributors"><a href="#Active-Contributors" class="headerlink" title="Active Contributors"></a>Active Contributors</h3><ul><li>David Nolden | <a href="david.nolden.kdevelop@art-master.de">david.nolden.kdevelop@art-master.de</a></li><li><p>Definition-Use Chain, C++ Support, Code Navigation, Code Completion, Coding Assistance, Refactoring, and more…</p></li><li><p>Olivier JG | <a href="olivier.jg@gmail.com">olivier.jg@gmail.com</a></p></li><li>Various Bugfixes, Polishing, Bug Triaging, Rename Assistant, and more…</li></ul><h2 id="On-Challenges"><a href="#On-Challenges" class="headerlink" title="On Challenges"></a>On Challenges</h2><h3 id="What-are-the-easy-parts"><a href="#What-are-the-easy-parts" class="headerlink" title="What are the easy parts?"></a>What are the easy parts?</h3><ul><li><p>Finding the biographical information regarding the project is just a matter of searching for answers in the right places.</p></li><li><p>Since KDE supports the development of KDEvelop, it’s easier to find documentation for the community in one place.</p></li><li><p>Divvying up the work should be ‘easy’ because the rubric establishes all of the things that must be done; it’s just a matter of assigning tasks to each participant.</p></li></ul><h3 id="What-are-the-hard-parts"><a href="#What-are-the-hard-parts" class="headerlink" title="What are the hard parts?"></a>What are the hard parts?</h3><ul><li><p>Getting into contact with ‘upstream Mentors’. Time zones and online availability are factors that can impact the process.</p></li><li><p>Large projects will take a longer time to analyze. Knowing the exact process to contribute may take more time to </p></li><li><p>Keeping in communication with team members while working on the analysis itself can be difficult.</p></li></ul><h3 id="How-will-you-overcome-both"><a href="#How-will-you-overcome-both" class="headerlink" title="How will you overcome both?"></a>How will you overcome both?</h3><p>By Tuesday, we seek to complete the task distribution and team proposal documents. </p><p>By Wednesday, we seek to complete each of our analyses and discuss our conclusions for each of the answers.</p><p>By Thursday, we’ll take our individual write-up and put together a presentation to showcase in class on Friday.</p><p>On Friday, we’ll present our findings.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> architecture </tag>
            
            <tag> documentation </tag>
            
            <tag> analysis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HFOSS - Quiz 1</title>
      <link href="/blog/quiz-1/"/>
      <url>/blog/quiz-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Quiz-1"><a href="#Quiz-1" class="headerlink" title="Quiz 1"></a>Quiz 1</h1><h2 id="Short-Answer"><a href="#Short-Answer" class="headerlink" title="Short Answer"></a>Short Answer</h2><p><strong>1) Please expand each of the following acronyms (1 pt each):</strong></p><p>1.1) IRC - <code>Internet Relay Chat</code><br>1.2) FOSS - <code>Free and Open Source Software</code><br>1.3) OLPC - <code>One Laptop Per Child</code><br>1.4) PR - <code>Pull Request</code></p><p>(Please use the expansion most appropriate to the class.)</p><p><em>Bonus: Give the expansion for the acronym GNU. (1 pt)</em></p><p>GNU - <code>GNU Not Unix</code></p><p><strong>2) What is the name of the version control system we use in this course? (1 pt)</strong></p><p><code>Git.</code></p><p><em>Bonus: Give the name for another version control system. (1 pt)</em></p><p><code>Mercurial</code></p><p><strong>3) Please give the one-word name for the interface used in the OLPC computers &amp; our VMs? (1 pt)</strong></p><p><code>Sugar.</code></p><p><strong>4) <em>Bonus: What is the short, two-letter name for the OLPC computers for which this desktop software was first developed? (1 pt)</em></strong></p><p><code>XO.</code></p><p><strong>5) We refer to sites that host source code as “forges”. What is the name of the primary forge used in this course? (1 pt)</strong></p><p><code>GitLab.</code></p><p><strong>6) <em>Bonus: Name the other forge we have used? (1 pt)</em></strong></p><p><code>GitHub.</code></p><p><strong>7) <em>Bonus: Name another forge, one we have not used for this course. (1 pt)</em></strong></p><p><code>BitBucket.</code></p><h2 id="Multiple-choice"><a href="#Multiple-choice" class="headerlink" title="Multiple choice"></a>Multiple choice</h2><p><strong>8) The GitHub-specific term to describe the process in which, starting from one repository hosted at GitHub, one creates another repository, also hosted at GitHub, but under the control of a different user account. (1 pt)</strong></p><p><code>d) fork</code></p><p><strong>9) A collection of related commit objects (1 pt)</strong></p><p><code>a) repository</code></p><p><strong>10) A separate, but related, repository from which one may fetch or pull changes into one’s own working copy, and to which one possibly has permission to push changes. (1 pt)</strong></p><p><code>c) remote</code></p><p><strong>11) The general term in git for making an exact, working copy of another repository in which changes can be tracked separately between the two versions. (1 pt)</strong></p><p><code>d) fork</code></p><p><strong>12) A namespace in which one can track changes to a set of files within a given repository. This term applies both to the action and to the result of the action. Comparisons (‘diffs’ or patches) can be made between different such namespaces. (1 pt)</strong></p><p><code>b) branch</code></p><p><strong>13) <em>Consider the following (+1 for each correct, -1 for each incorrect):</em></strong></p><p>a) <code>e59b627</code><br>b) <code>451.867</code><br>c) <code>dca_079</code><br>d) <code>9539807</code><br>e) <code>DB6A60A</code><br>f) <code>614@1d4</code><br>g) <code>be34fb47c60d</code></p><p><em>Looking just at the string of non-space characters to the right of the close-parenthesis …</em></p><p><strong>List which of these could be a valid commit identifier?</strong></p><p><code>Choices (a), (e), and (g).</code></p><p><strong>14) We’ve discussed “the four R’s” as a shorthand for the freedoms attached to software for it to be considered “free” or “open source”.</strong></p><p><em>List or describe each. (eg, if you can remember the “r” word you can just give that. If you cannot remember the term, but can describe the freedom involved, that also counts).</em></p><p><em>Various “r” words are roughly synonymous for some of the freedoms, but we’re counting freedoms here, not synonyms so if you give two (or more) terms for the same freedom, it only counts once. For the purposes of this quiz, “remix” does not count as describing any of them. (2 pt each)</em></p><p>10.1) <code>Run</code></p><p>10.2) <code>Read</code></p><p>10.3) <code>Repair</code></p><p>10.4) <code>Redistribute</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> quiz, hfoss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Literature Review #2: Roads and Bridges</title>
      <link href="/blog/hfoss/lit-review-2/"/>
      <url>/blog/hfoss/lit-review-2/</url>
      
        <content type="html"><![CDATA[<h1 id="Review-Roads-and-Bridges-The-Unseen-Labor-Behind-Our-Digital-Infrastructure"><a href="#Review-Roads-and-Bridges-The-Unseen-Labor-Behind-Our-Digital-Infrastructure" class="headerlink" title="Review: Roads and Bridges: The Unseen Labor Behind Our Digital Infrastructure"></a>Review: Roads and Bridges: The Unseen Labor Behind Our Digital Infrastructure</h1><p>This is the second of several literature reviews for content relevant to the humanitarian free and open source software course. In this entry, I will be reviewing <em><a href="https://github.com/ritjoe/hfoss/blob/master/assets/roads-and-bridges-the-unseen-labor-behind-our-digital-infrastructure.pdf" target="_blank" rel="noopener">Roads and Bridges: The Unseen Labor Behind Our Digital Infrastructure</a></em> by <a href="https://nadiaeghbal.com/" target="_blank" rel="noopener">Nadia Eghbal</a>.</p><a id="more"></a><hr><h2 id="The-Basics"><a href="#The-Basics" class="headerlink" title="The Basics"></a>The Basics</h2><p>Nadia Eghbal is a Protocol Labs researcher based in San Francisco and is the author of <em>Roads and Bridges</em>. Eghbal explores the production and economic models behind open-source software, and had <a href="https://www.linkedin.com/in/nadiaeghbal/" target="_blank" rel="noopener">previously worked at GitHub</a>, building programs, products, and partnerships to better support open-source developers.</p><p>In July of 2016, Eghbal published <em>Roads and Bridges</em>, a deeper look at the maintainance required of our digital infrastructure. Likening this massive support system (with an unprecedented demand) to physical infrastructure (<em>a la</em> roads and bridges), Eghbal draws out support for the great work that open source developers do - and highlight the challenges that come with sustaining that infrastructure.</p><p>In addition to writing longform research on open-source software, Eghbal has written extensively on the subject in <a href="https://medium.com/@nayafia" target="_blank" rel="noopener">shortform</a> and has been a part of <a href="https://changelog.com/rfc" target="_blank" rel="noopener">podcasts that highlight</a> the <a href="https://hopeinsource.com/" target="_blank" rel="noopener">culture of open source</a>.</p><p>You can find more of her research on her personal website, <a href="https://nadiaeghbal.com/research/" target="_blank" rel="noopener">here</a>.</p><h2 id="The-Gist"><a href="#The-Gist" class="headerlink" title="The Gist"></a>The Gist</h2><p>Eghbal’s work is a detailed retelling of the open-source history, reaching as far back as 1998, when OpenSSL was first created between a group of security experts in the UK. OpenSSL - a cybersecurity project that is known for enabling websites with the ability to transmit sensitive data over the internet - was recently susceptible to Heartbleed, a dire security flaw overlooked by its handful of maintainers. </p><p>But, OpenSSL is used by millions around the world - the internet wouldn’t exist as it does today without it. OpenSSL’s problems are indicative of a recurring issue in the open-source community’s narrative: the use of free software without the support to maintain it.</p><hr><h2 id="The-Good"><a href="#The-Good" class="headerlink" title="The Good"></a>The Good</h2><ul><li>1) There is a great encouragement in the writing to reuse and borrow from what others have created before.</li><li>2)  Free software makes building empowering software accessible and possible to those with limited funds.</li><li>3) The sheer size and wealth of material that Eghbal presents is crucial and necessary to understanding the full context of open source history: the fact that such material has been released for free access to all is just as telling of where Eghbal stands on the conversation.</li></ul><hr><h2 id="The-Bad"><a href="#The-Bad" class="headerlink" title="The Bad"></a>The Bad</h2><ul><li>1) New developers who consistently build projects using tools from others before them may never gain a deeper understanding of the work they create.</li><li>2) Developers without a deep understanding of the work that they create rely on possibly insecure services and infrastructure that could collapse - the more who use a particular project as a dependency without understanding it, the greater the risk becomes of system-wide failure. (See: <a href="https://github.com/npm/npm/issues/19883" target="_blank" rel="noopener">NPM/Node pre-release mayhem</a>).</li><li>3) The greater the gap in skill, the harder it will be for younger developers to fill the holes left by older developers. People can’t work on software forever and it needs to be maintained; but software today is, “deteriorating,” due to the lack of funding and contributions (pp. 76).</li></ul><hr><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ul><li>1) What organizations are actively contributing to the problems at hand?</li><li>2) What can be done to keep companies investing in open source over the years?</li><li>3) Are our communities of software too big to fail? NodeJS? Others like that? What can we do to combat degrading and insecure code?</li></ul>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> documentation </tag>
            
            <tag> bugs </tag>
            
            <tag> issues </tag>
            
            <tag> reading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meetup: BrickHack V</title>
      <link href="/blog/hfoss/brickhack-v/"/>
      <url>/blog/hfoss/brickhack-v/</url>
      
        <content type="html"><![CDATA[<h1 id="BrickHack-V"><a href="#BrickHack-V" class="headerlink" title="BrickHack V"></a><a href="https://brickhackv.devpost.com/" target="_blank" rel="noopener">BrickHack V</a></h1><p><strong>BRICK CITY’S PREMIERE HACKATHON</strong></p><blockquote><p><a href="https://brickhack.io/" target="_blank" rel="noopener">BrickHack</a> brings <strong>designers, developers, and all sorts of makers</strong> together for 24 hours to create something from nothing. Mentors and industry representatives will lend expertise and watch as you dive into <strong>learning, developing, and producing a unique project</strong>. Expect lots of free food, swag, coffee, and all-you-can-print 3D printers! From the novices to the experts, from designers to enginers, <strong>this one’s for you!</strong></p></blockquote><p>See this video below for a recap of BrickHack 2018.</p><div class="video-container"><iframe src="//www.youtube.com/embed/0fOUf1JwzBs" frameborder="0" allowfullscreen></iframe></div><h2 id="The-Event"><a href="#The-Event" class="headerlink" title="The Event"></a>The Event</h2><p>BrickHack V took place between February 16th and February 17th of 2019. Hacking ran from 12:30 PM - 12:30 PM, and I was there for every second!</p><p>BrickHack is an annual invention marathon open to any student (that registered in advance). This year, BrickHack’s fifth event took place in the Clark Gym located on the Rochester Institute of Technology’s campus. There were over <strong>600 participants</strong> at this year’s hackathon - all of them broke into groups (or worked alone) and had 24 hours to invent, create, learn, build, and innovate!</p><p>Students from Cornell, Binghamton, NYU, Waterloo, University of Toronto, Northeastern, UMass, RPI, and Univesity of Buffalo (as well as some CUNY students), were in attendance!</p><h3 id="Venue-amp-Vendors"><a href="#Venue-amp-Vendors" class="headerlink" title="Venue &amp; Vendors"></a>Venue &amp; Vendors</h3><p>BrickHack is sponsored by many companies, but, a significant amount of support is given to <a href="https://coderit.org/" target="_blank" rel="noopener">CodeRIT</a> by the <a href="https://mlh.io" target="_blank" rel="noopener">Major League Hacking</a> (MLH) organization. MLH is the official student hackathon league; they support over <a href="http://mlh.io/events" target="_blank" rel="noopener">200 weekend-long invention competitions</a> every year and have cultivated the skills of more than <strong>65,000</strong> students around the world.</p><p>Missed the event? There were several sponsors present (such as <a href="https://www.wegmans.com/" target="_blank" rel="noopener">Wegmans</a>, <a href="https://www.datto.com/" target="_blank" rel="noopener">Datto</a>, <a href="https://www.google.com/" target="_blank" rel="noopener">Google</a>, and much, much more). Some vendors, like <a href="https://www.verizonwireless.com/" target="_blank" rel="noopener">Verizon</a>, were touting the <em>edge-of-their-seats-blazing-fast</em> <strong>5G</strong> technology. Others were more than excited to get students to create more things with their products, like <a href="https://unity3d.com/" target="_blank" rel="noopener">Unity3D</a>. </p><p>Many of these groups sponsored food, dinner, and talks meant to encourage students to take their development and hacking careers in new directions.</p><p>Unity held a workshop regarding careers and their famous game engine. A representative from <a href="https://www.acvauctions.com/" target="_blank" rel="noopener">ACV Auctions</a> - a company specializing in automotive consumer resale - spoke about working at their company. Wegmans spoke about the importance of data, and encouraged groups to reuse and remix their public data to reshape a narrative in interesting ways.</p><h3 id="Highlights"><a href="#Highlights" class="headerlink" title="Highlights"></a>Highlights</h3><p>Participating groups had the chance to submit their projects for the chance to win certain prizes, based on criteria posted near the start of the event. Over <strong>$19,304</strong> were offered in prizes!</p><p>Some of the more notable prizes were:</p><ul><li>Datto’s Most socially impactful project.</li><li>RIT’s Simone Center’s Most Commercially Viable Product.</li><li>BrickHack’s ‘Hack Our Health’ award for the product and/or application with the most promise in benefiting the mental health needs of college students.</li><li>Verizon’s Best use of 5G currencies in immersive media.</li><li>and, Unity’s Best Game, among many others…</li></ul><h2 id="Mood-Swing"><a href="#Mood-Swing" class="headerlink" title="Mood Swing"></a>Mood Swing</h2><p><img src="/images/posts/brickhack-v/logo.png" alt="Logo for Mood Swing"></p><blockquote><p>“Track your mood across several days and see an overview of how you’ve felt.”</p></blockquote><p>We created a mood tracker application that allows users to take control of their own data. Users can self-host a MongoDB instance and interface with it using our code to keep track of their mood (a range from happy to sad), hours of exercise, hours of sleep and cups of coffee in the last day.</p><p>This application was built with: <code>javascript</code>, <code>react</code>, <code>bash</code>, <code>git</code>, <code>mongodb</code>, <code>mongoose</code>, <code>node.js</code>, <code>lucidchart</code>, <code>google-chart</code>, <code>vscode</code>, <code>vim</code>, <code>nano</code>, <code>visual-studio</code>, <code>webstorm</code>, <code>trello</code>, <code>google-drive</code>, <code>discord</code>.</p><h3 id="A-Look-at-the-Team"><a href="#A-Look-at-the-Team" class="headerlink" title="A Look at the Team"></a>A Look at the Team</h3><p>Taking the initials from our team, we came up with the name ‘Chef Bicc’. Take a look at who made this product:</p><p>Carson Bloomingdale<br>{ <a href="https://devpost.com/carsonbloomingdale" target="_blank" rel="noopener">DevPost</a><br><a href="https://carsonbloomingdale.com/" target="_blank" rel="noopener">Portfolio</a> }</p><blockquote><p>Carson worked on the front-end, implementing ReactJS in order to showcase the Mood visualization.</p></blockquote><p>Claire Chen<br>{ <a href="https://devpost.com/ClaireChen" target="_blank" rel="noopener">DevPost</a><br>[Portfolio] }(<a href="https://www.linkedin.com/in/claire-chen-a4a288172" target="_blank" rel="noopener">https://www.linkedin.com/in/claire-chen-a4a288172</a>)</p><blockquote><p>Claire helped develop behaviors on the React-powered client.</p></blockquote><p>Ian Effendi<br>{ <a href="https://devpost.com/rimij405" target="_blank" rel="noopener">DevPost</a><br><a href="https://rimij405.github.io/">Portfolio</a> }</p><blockquote><p>I worked on the REST API (powered by an Express.JS server) that powers the application’s tracking abilities. I created controllers, models, and routes, using a mongoose module to handle connecting to MongoDB.</p></blockquote><p>Henry Farr<br>{ <a href="https://devpost.com/hfarr" target="_blank" rel="noopener">DevPost</a><br><a href="https://www.linkedin.com/in/henry-farr-a191b6172" target="_blank" rel="noopener">Portfolio</a> }</p><blockquote><p>Henry hosted the production webserver on his personal system; this project was his first time using NodeJS (and JavaScript in general).</p></blockquote><h3 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h3><p>We knew that we wanted to create an open-source application that could track personal data and empower those who stick with the program.</p><p>Our original idea was to allow users the chance to select a daily mood from a series of emoji, and, allow them to show an average ‘mood’ based on a date range that they chose. In addition to mood, users would be able to keep track of other daily life events (such as drinks of water, hours of sleep, hours of exercise, and meals in one day). From there, users are able to take the data they own and visualize the results across a day, a week, a month, and even a year.</p><h3 id="The-Frontend-s"><a href="#The-Frontend-s" class="headerlink" title="The Frontend(s?)"></a>The Frontend(s?)</h3><p>We created an intentionally detached API for the backend to allow a community of mindful users the opportunity to create a cross-platform ecosystem.</p><p>Our interpretation resulted in a React-powered web client, but, there was discussion of creating a native Flutter/Dart mobile application.</p><h3 id="The-Backend"><a href="#The-Backend" class="headerlink" title="The Backend"></a>The Backend</h3><p>The exposed API is powered by <a href="">MongoDB</a> and <a href="">NodeJS</a>. We want to make sure that our backend remains scalable and accessible from multiple endpoints: each mood entry is stored in a Binary JSON (BSON) format, taking up little space while remaining quick to query. </p><p>The data itself is flexible and the JSON document format offers many avenues to converting for use in other ecosystems. The goal of keeping the backend detached is to keep development agile and flexible. </p><p>NodeJS’s non-blocking I/O was perfect for our needs. We had to choose between a <a href="https://www.soapui.org/learn/api/soap-vs-rest-api.html" target="_blank" rel="noopener">SOAP-style</a>,  a <a href="https://medium.freecodecamp.org/building-a-simple-node-js-api-in-under-30-minutes-a07ea9e390d2" target="_blank" rel="noopener">REST-style</a>, and a <a href="https://scotch.io/@alloys/how-to-build-an-rpc-based-api-with-nodejs" target="_blank" rel="noopener">RPC-style</a> API. </p><p>SOAP wraps payload information in an XML format, making it language-agnostic. REST models domain resources and entities, making CRUD operations available for all the data. RPC is great for interacting with the backend through commands/procedures.</p><p>At the end of the day, we chose to go forth with an RPC API. But nothing’s stopping us from adding to our system. The API endpoint contains, importantly, an ‘API Version’ field that can be queried to choose how we (and others) want to handle their data in the future.</p><h3 id="Data-Ownership"><a href="#Data-Ownership" class="headerlink" title="Data Ownership"></a>Data Ownership</h3><p><img src="/images/posts/brickhack-v/screenshot.jpg" alt="Screenshot from the application."></p><p>We’ve released the code under the permissive open-source <a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener">MIT License</a> to encourage other people to take control of their data, and keep track of their mental health without having to pay for an application.</p><p>Use the <code>frontend</code> branch to get access to a react-based web-client. Use the <code>backend</code> branch to get access to the MongoDB-powered data store.</p><p>Or, write your own frontend to interface with the API!</p><p>You just need a place to host the database!</p><h2 id="Post-Mortem"><a href="#Post-Mortem" class="headerlink" title="Post-Mortem"></a>Post-Mortem</h2><h3 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h3><p>We split up into two groups to tackle two sides of this application. We wanted to make sure our client was detached from the backend; getting from a prototype to a place where we could cleanly test functionality in the client took work. The biggest challenge came down to communicating endpoint expectations and clarifying how our JSON payloads (for both requests and responses) would interact.</p><h3 id="Next-Steps"><a href="#Next-Steps" class="headerlink" title="Next Steps"></a>Next Steps</h3><p>Encouraging developers to build upon the framework we’ve laid out is a great start! That said, we have more features in mind. We entertained creating a cross-platform suite of clients and thought about using Google’s Dart/Flutter combo to create a robust native mobile client.</p><h2 id="See-More"><a href="#See-More" class="headerlink" title="See More"></a>See More</h2><p><a href="https://devpost.com/software/brickhack-v-chefbicc" target="_blank" rel="noopener">DevPost Submission</a></p><p><a href="https://github.com/rimij405/brickhack-v-chefbicc" target="_blank" rel="noopener">GitHub Repository</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> hackathon </tag>
            
            <tag> meetup </tag>
            
            <tag> nodeJS </tag>
            
            <tag> react </tag>
            
            <tag> mental health </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Waiting for Godot</title>
      <link href="/blog/hfoss/waiting-for-godot/"/>
      <url>/blog/hfoss/waiting-for-godot/</url>
      
        <content type="html"><![CDATA[<h1 id="Waiting-for-Godot"><a href="#Waiting-for-Godot" class="headerlink" title="Waiting for Godot"></a>Waiting for Godot</h1><p><img src="/images/posts/waiting-for-godot/godot/logo_512px.png" alt="Godot Logo."></p><p>This week I’m working with <a href="https://godotengine.org/" target="_blank" rel="noopener">Godot</a>, a free and open source cross-platform game engine released under the very permissive <a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener">MIT license</a>. Let’s get to it.</p><a id="more"></a><h2 id="The-Game-Engine-I-Waited-For"><a href="#The-Game-Engine-I-Waited-For" class="headerlink" title="The Game Engine I Waited For"></a>The Game Engine I Waited For</h2><p>The Godot homepage has this neat little tagline:</p><blockquote><p><strong>The Game Engine You Waited For</strong></p></blockquote><p>The joke? <a href="https://en.wikipedia.org/wiki/Waiting_for_Godot" target="_blank" rel="noopener"><em>Waiting for Godot</em></a> is a play by <a href="https://en.wikipedia.org/wiki/Samuel_Beckett" target="_blank" rel="noopener">Samuel Beckett</a>, in which the main characters wait for the arrival of someone named Godot … who never arrives. Although it was originally written in French, Beckett’s English language version of the material was voted, “the most significant English language play of the 20th century,” in a 1990 poll conducted by the British Royal National Theatre.</p><p>Godot was formed in 2007 by Juan ‘reduz’ Linietsky and Ariel ‘punto’ Manzur. According to Linietsky, the name <em>Godot</em> was chosen to represent their never-ending wish of adding new features to the engine, always pushing off an exhaustive product. It wasn’t until February of 2014 - seven years later - that the source code would be published on GitHub and it wasn’t until the end of that year for Godot to reach version 1.0 - it’s first stable release.</p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><p>At the time of writing this, Godot’s last stable release (v.3.0.6) was released in July of 2018 - and development is on-going. The engine itself runs on several operating systems, including <a href="https://en.wikipedia.org/wiki/Microsoft_Windows" target="_blank" rel="noopener">Windows</a>, <a href="https://en.wikipedia.org/wiki/MacOS" target="_blank" rel="noopener">macOS</a>, <a href="https://en.wikipedia.org/wiki/Linux" target="_blank" rel="noopener">Linux</a>, <a href="https://en.wikipedia.org/wiki/Berkeley_Software_Distribution" target="_blank" rel="noopener">BSD</a>, and <a href="https://en.wikipedia.org/wiki/Haiku_(operating_system" target="_blank" rel="noopener">Haiku</a>). (<em>Fun fact about Haiku - it’s an open source operating system supported by Haiku, Inc., a non-profit organization based in Rochester, New York, founded by <a href="https://www.haiku-os.org/blog/koki/2009-11-28_history_channel_2003_interview_michael_phipps/" target="_blank" rel="noopener">Michael Phipps</a>, Computer Science graduate of Rochester Institute of Technology, Class of ‘97</em>). Games made with Godot can target desktop, mobile, and web platforms, using Godot’s export template system. It’s easy to create custom builds as well, if the existing templates don’t cut it.</p><h3 id="Compact"><a href="#Compact" class="headerlink" title="Compact"></a>Compact</h3><p>Godot is a small engine - roughly 20 MB in size - and is very easy to compile. It comes with a built-in debugger, profiler (with graph plotting and time seeking), that allows for projects to be modified, even while they’re running. Changes made while live are persistent - a design choice that some engines don’t have.</p><h3 id="It’s-in-the-Node"><a href="#It’s-in-the-Node" class="headerlink" title="It’s in the Node"></a>It’s in the Node</h3><p>Godot adpots a Scene- and Node-based hiearchy as its approach to game development. Everything in Godot is a Node and nodes can be (infinitely) nested. The visual editor that comes with Godot makes it friendly, inviting, and easy-to-use for creators at any level of the game development pipeline.</p><p>Godot’s configuration and project files are version control friendly - feel free to make liberal use of your diff command. Godot also utilizes a custom scripting language (GDScript) that was written explicitly for the engine - GDScript’s syntax is also supported by GitHub, so it enjoys some of the same privileges of its older cousins.</p><h3 id="Scripting"><a href="#Scripting" class="headerlink" title="Scripting"></a>Scripting</h3><p>While GDScript is a Python-like language meant explicitly for Godot, it’s not the only one available. The latest stable release has full C# 7.0 support (using Mono), support for a visual scripting system using blocks and connectors, and full native C++ support without the need to recompile the engine (through the use of a core-module dynamic). The GDNative aspect of the project exposes the engine’s native C symbol API that allows developers to create and utilize bindings to other languages if they so wish - bindings already exist for Python, Nim, and D, among other languages.</p><h3 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h3><p>Everything in Godot was built with animation in mind: from bones and objects to function calls themselves, everything can be tweened. </p><h2 id="Godot-vs-Unity"><a href="#Godot-vs-Unity" class="headerlink" title="Godot vs. Unity"></a>Godot vs. Unity</h2><p><img src="/images/posts/waiting-for-godot/editor.png" alt="Picture of editor."></p><p>Godot supports both 2D and 3D game development. While this is what draws the largest comparison to the <a href="https://unity3d.com" target="_blank" rel="noopener">Unity3D</a> game engine, there are three crucial differences. By all means, Godot is not a perfect engine, but, knowing where it excels can help you make a decision about which engine to choose.</p><h3 id="No-Nest-To-Call-Home"><a href="#No-Nest-To-Call-Home" class="headerlink" title="No Nest To Call Home"></a>No Nest To Call Home</h3><p>Unity doesn’t allow you to use nested prefabs; all prefab instances will overwrite internal prefabs once ‘nested’. While Unity encourages composability over inheritance, it seems like a missed area to not allow prefabs to be components and children of other prefabs. Godot’s node-based system gets around this issue.</p><h3 id="Pixel-Perfect-2D"><a href="#Pixel-Perfect-2D" class="headerlink" title="Pixel Perfect 2D"></a>Pixel Perfect 2D</h3><p>Unity3D developers can create 2D games, but, it often comes with the overhead of running a 3D game engine on top of that. Godot’s 2D engine is fully dedicated 2D and is not just a repurposed 3D approximation of 2D. This advantage allows developers to create pixel-perfect gameplay, utilize 2D lights and normal maps, and animate 2D rigs with skeletons and IK. Unity can get the job done, but, your mileage may vary.</p><h3 id="Unity-is-Proprietary"><a href="#Unity-is-Proprietary" class="headerlink" title="Unity is Proprietary"></a>Unity is Proprietary</h3><p>Unity3D is free as in free pizza. It’s not an open source game engine, unlike Godot, so when you want to expand a particular feature set, you’re stuck waiting for the Unity team to get around to fixing it.</p><h2 id="Godot-vs-Cocos2d-x"><a href="#Godot-vs-Cocos2d-x" class="headerlink" title="Godot vs. Cocos2d-x"></a>Godot vs. Cocos2d-x</h2><p><img src="/images/posts/waiting-for-godot/cocos-creator.png" alt="CocosCreator Logo."></p><p>If you’re looking for an alternative to Godot, <a href="https://cocos2d-x.org/" target="_blank" rel="noopener">Cocos2d-x based editor CocosCreator</a> is a great open source engine with its own community supporting it.</p><h2 id="Ease-of-Use"><a href="#Ease-of-Use" class="headerlink" title="Ease of Use"></a>Ease of Use</h2><p><img src="/images/posts/waiting-for-godot/chrome-trip.gif" alt="Chrome Trip by @enthus1ast"></p><p><em><a href="https://code0.itch.io/chrome-trip" target="_blank" rel="noopener">Chrome Trip by @enthus1ast</a>. A downloadable, open source multiplayer game created with Godot for the GitHubGameOff 2017 jam.</em></p><p>Godot is special because of its ease of use. Ariel Manzur, co-founder of OKAM Studios and Godot, led a team of industry newcomers in the design of adventure game <em>Dog Mendonça &amp; Pizzaboy</em>. Godot, in some ways, was built by its founders to help express the desire for a more visual approach to game development, without necessarily sacrificing the power that comes with engines like <a href="https://unity3d.com" target="_blank" rel="noopener">Unity3D</a> and <a href="https://www.unrealengine.com/en-US/what-is-unreal-engine-4" target="_blank" rel="noopener">Unreal</a>.</p><p>Teachers at a West Virginia high school have used Godot as a way to address the state’s 2016 <a href="http://careertech.k12.wv.us/OCTIWebsiteRevisions/16Clusters/InformationTechnologyMainPage.html" target="_blank" rel="noopener">coding, app, and game design curriculum</a>.  There’s plenty of room for students to learn game development while introducing them to the concept of free (as in free speech) software.</p><h2 id="Open-Source-amp-Diverse-Community"><a href="#Open-Source-amp-Diverse-Community" class="headerlink" title="Open Source &amp; Diverse Community"></a>Open Source &amp; Diverse Community</h2><p>There is no question behind Godot’s status as free, open source software. On November 4th, 2015, Godot joined the <a href="https://sfconservancy.org/" target="_blank" rel="noopener">Software Freedom Conservacy</a>. On June 22nd, 2016, Godot received a $20,000 Mozilla Open Source Support (MOSS) “Mission Partners” award to incorporate Web Sockets, WebAssembly, and WebGL support. It has the acknowledgement of the big names in open source, and, the community is very active. There are currently 4,045 open and 11,267 closed issues on the <a href="https://github.com/godotengine/godot/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc" target="_blank" rel="noopener">upstream repository</a>. The project has been <a href="https://github.com/godotengine/godot/network/members" target="_blank" rel="noopener">forked more than 3,800 times</a> and there are currently <a href="https://github.com/godotengine/godot/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-desc" target="_blank" rel="noopener">263 open pull requests</a>. </p><p>It is a thriving, vibrant community. This year, the first ever <em>Godot Sprint</em> was held in Brussels, two days before <a href="https://fosdem.org/2019/" target="_blank" rel="noopener">FOSDEM 2019</a> and <a href="https://godotengine.org/events/#godotcon" target="_blank" rel="noopener">GodotCon 2019</a>. Contributors were able to meet in order to encourage completion of C++ engine features, writing of documentation, and creation of teaching materials for new developers. These are signs of a strong open source project that will be a mainstay for years.</p><p>There are several ways to get involved with the community:</p><ul><li>IRC <a href="https://webchat.freenode.net/?channels=#godotengine" target="_blank" rel="noopener">freenode.net#godotengine</a>.</li><li><a href="https://discord.gg/zH7NUgz" target="_blank" rel="noopener">Discord</a>.</li><li><a href="https://matrix.to/#/#godotengine:matrix.org" target="_blank" rel="noopener">Matrix</a>.</li><li><a href="https://www.facebook.com/groups/godotengine/" target="_blank" rel="noopener">Facebook</a></li><li><a href="https://www.reddit.com/r/godot" target="_blank" rel="noopener">Reddit</a></li><li><a href="https://twitter.com/godotengine" target="_blank" rel="noopener">Twitter</a></li><li><a href="https://steamcommunity.com/app/404790" target="_blank" rel="noopener">Steam</a></li><li><a href="https://www.youtube.com/c/GodotEngineOfficial" target="_blank" rel="noopener">YouTube</a></li><li><a href="http://godotdevelopers.org/" target="_blank" rel="noopener">Godot Forum</a></li></ul><h2 id="Support-Development"><a href="#Support-Development" class="headerlink" title="Support Development"></a>Support Development</h2><p>If you aren’t interested in contributing to the Godot project as a developer, consider donating monthly via <a href="https://www.patreon.com/godotengine" target="_blank" rel="noopener">Patreon</a> or directly via <a href="https://godotengine.org/donate" target="_blank" rel="noopener">Paypal</a>. Godot’s donations are processed by the Software Freedom Conservancy and used to hire developers based on contracts that are made transparent to all supporters.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> game development </tag>
            
            <tag> documentation </tag>
            
            <tag> game engine </tag>
            
            <tag> Godot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Literature Review #1: Bug Reporting</title>
      <link href="/blog/hfoss/lit-review-1/"/>
      <url>/blog/hfoss/lit-review-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Review-How-to-Report-Bugs-Effectively"><a href="#Review-How-to-Report-Bugs-Effectively" class="headerlink" title="Review: How to Report Bugs Effectively"></a>Review: How to Report Bugs Effectively</h1><p>This is the first of several literature reviews for content relevant to the humanitarian free and open source software course. In this entry, I will be reviewing <em><a href="https://www.chiark.greenend.org.uk/~sgtatham/bugs.html" target="_blank" rel="noopener">How to Report Bugs Effectively</a></em> by <a href="https://www.chiark.greenend.org.uk/~sgtatham/" target="_blank" rel="noopener">Simon Tatham</a>.</p><a id="more"></a><hr><p><img src="/images/posts/lit-review-1/coding.jpg" alt="Image of laptop with code."></p><h2 id="The-Basics"><a href="#The-Basics" class="headerlink" title="The Basics"></a>The Basics</h2><p>At the start of the essay, the author, Simon Tatham, modestly titles himself a professional and free-software programmer. Tatham, however, is famous for creating and maintaining <a href="https://en.wikipedia.org/wiki/PuTTY" target="_blank" rel="noopener">PuTTY</a>, an open-source implementation of Telnet and Secure Shell (SSH) clients for Unix and Windows platforms. It’s fair to say that Tatham has experience with reporting and solving bugs in open-source software.</p><p>From the jump, Tatham plainly states the purpose of this guide: reading it will help developers write, “clear, helpful, <em>informative</em> bug reports.” By appraoching the written work with prepared examples and instances of unhelpful reporting practices, Tatham is able to help readers troubleshoot their own bug reporting practices. Notice you’re following a bad practice - this enables you to safely learn from that mistake and adjust course.</p><p>You can find this essay on Simon Tatham’s personal website, <a href="https://www.chiark.greenend.org.uk/~sgtatham/bugs.html" target="_blank" rel="noopener">here</a>.</p><h2 id="The-Gist"><a href="#The-Gist" class="headerlink" title="The Gist"></a>The Gist</h2><p>This guide helps users report bugs to programmers. It’s written in such a way that it prescribes approaches that the user can undertake when reporting a bug. It is precise, in explaining just how important detail is to the programmer, for users reporting bugs.</p><hr><p><img src="/images/posts/lit-review-1/good-idea.jpg" alt="Photo of a lightbulb doodle, pinned to corkboard."></p><h2 id="The-Good"><a href="#The-Good" class="headerlink" title="The Good"></a>The Good</h2><ul><li>1) Clear, practical examples that a user can review (if given the time) for writing their own bug reports. (The poor formatting, however, is Bad item #1).</li><li>2) The summary at the end of the entry is something that I wish more articles and blog posts had, especially when it comes to development and software tutorials.</li><li>3) It comes in several different languages!</li></ul><hr><p><img src="/images/posts/lit-review-1/thinking.jpg" alt="Image of someone staring at a laptop with concern."></p><h2 id="The-Bad"><a href="#The-Bad" class="headerlink" title="The Bad"></a>The Bad</h2><ul><li>1) The lack of spacing and formatting on the webpage makes it very diffiuclt to read. I want to be able to come back to this page while writing a bug report, scan for advice on the section I’m writing, and complete my report as quickly as possible.</li><li>2) This is written from the perspective of the user and the user alone. While useful for other developers for providing informative bug reports, the generalized presentation doesn’t help programmers know what questions to ask. That process is something you’ll learn largely from practice, experience, and a strong understanding of the codebase. This isn’t necessarily a bad thing, but, this can be a barrier for new contributers.</li><li>3) It doesn’t mention what users should do in the event repositories are archived. I think it would have been a good note to address what options they have - even one as simple as, “Find a new project that fulfills your needs if you don’t have the time/resources/skills to continue working on this one.”</li></ul><hr><p><img src="/images/posts/lit-review-1/questionmark.jpg" alt="High exposure photograph of a question mark drawn with neon light."></p><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ul><li>1) Is this work up-to-date? Are there new best practices for reporting bugs?</li><li>2) What cases are there where a user shouldn’t freeze and should try to act quickly to document the issue?</li><li>3) What about situations where an open-source project is led by programmers who aren’t receptive to beginners filing incomplete bug reports and are rude about it? Should there be dedicated bug handlers? Does it factor into the decision to make a hostile fork?</li></ul><hr><h2 id="Follow-Up"><a href="#Follow-Up" class="headerlink" title="Follow-Up"></a>Follow-Up</h2><p>If I’m being honest, as I am reading this for class, a lot of this was already clear to me due to best practices in communicating issues that need debuging among team members in my past programming projects. That being said, I would agree that this is an essential read for those looking to get involved with bug reporting and helping with documentation.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> documentation </tag>
            
            <tag> bugs </tag>
            
            <tag> issues </tag>
            
            <tag> reading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Meetup: Global Game Jam 2019</title>
      <link href="/blog/hfoss/global-game-jam-2019/"/>
      <url>/blog/hfoss/global-game-jam-2019/</url>
      
        <content type="html"><![CDATA[<h1 id="Global-Game-Jam-2019"><a href="#Global-Game-Jam-2019" class="headerlink" title="Global Game Jam 2019"></a><a href="https://globalgamejam.org/news/time-go-home-ggj19-roundup" target="_blank" rel="noopener">Global Game Jam 2019</a></h1><h2 id="The-Event"><a href="#The-Event" class="headerlink" title="The Event"></a>The Event</h2><p>After 11 years, the <a href="https://globalgamejam.org" target="_blank" rel="noopener">Global Game Jam</a> is still going strong. This year, 47,000 jammers made 9,000 games at 860 sites across 113 countries. This year, 10 new countries had jammers take part for the first time ever: Azerbaijan, Iraq, Sri Lanka, Kazakhstan, Kosovo, Kenya, the Ivory Coast, Myanmar, Namibia, and Rwanda!</p><p>This year, Global Game Jam 2019 took place from January 25th to January 27th; I was there for a majority of the time! Typically, the game jam time is based on your timezone: the theme is typically held under a public embargo until Hawaii (the last country by timezone) hits 5PM.</p><h3 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h3><p>This year’s game jam theme was <code>[What Home Means To You](https://globalgamejam.org/news/theme-global-game-jam-2019-%E2%80%A6)</code>. As is customary, it was revealed at the end of the <a href="https://youtu.be/pUohwjq9RkA?t=836" target="_blank" rel="noopener">keynote video</a> sharing interviews with people from all over the world, speaking in their native language about what home means to them.</p><h3 id="Venue"><a href="#Venue" class="headerlink" title="Venue"></a>Venue</h3><p>Global Game Jam was hosted around the world;That’s what the “global” was for! This year, the jammer location for RIT students was the main lab for IGM students. One welcome change was the ability to use the brand-new MAGIC center labs!</p><h3 id="Sponsors-amp-Diversifiers"><a href="#Sponsors-amp-Diversifiers" class="headerlink" title="Sponsors &amp; Diversifiers"></a>Sponsors &amp; Diversifiers</h3><p><img src="/images/posts/ggj-2019/ggj.jpg" alt="Global Game Jam 2019 Logo"></p><p>There were tons of sponsors who <a href="https://globalgamejam.org/jammer-resources" target="_blank" rel="noopener">showcased and paid for resources</a> as part of this event! While <a href="">Unreal Engine</a> and <a href="">Unity3D</a> were expected returning sponsors, there were others that always stand to support important causes that the game development community were keen to help represent.</p><p><a href="http://ithrivegames.org/" target="_blank" rel="noopener">iThrive Games</a> sponsored the <code>Forgive and Fortify</code> diversifier, encouraging developers to explore forgiveness. <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> encouraged developers to <code>Use the Source</code>: participants were encouraged to <strong>use one or more open source tools, game engines or libraries</strong> in their projects. <a href="https://www.valvesoftware.com/en/" target="_blank" rel="noopener">Valve</a> wanted players to make a game independent of language - something that could be understood regardless of a player’s language. And as always, the jam organizers encouraged all developers to make <a href="https://docs.microsoft.com/en-us/windows/desktop/winauto/microsoft-active-accessibility" target="_blank" rel="noopener">accessible</a> work! One diversifier even encouraged participants to utilize works that were recently released into the <a href="https://en.wikipedia.org/wiki/2019_in_public_domain" target="_blank" rel="noopener">public domain at the start of 2019</a>.</p><h3 id="Highlights"><a href="#Highlights" class="headerlink" title="Highlights"></a>Highlights</h3><ul><li>Over 50 hours of jammer footage livestreamed on <a href="https://mixer.com/" target="_blank" rel="noopener">Mixer</a> from all over the world.</li><li>Rami Ismail (of <a href="https://www.vlambeer.com/" target="_blank" rel="noopener">Vlambeer</a> fame) announced <a href="https://gamedev.world/" target="_blank" rel="noopener">GameDev.World</a>, a global game development event to be livestreamed and translated into eight languages.</li></ul><p>One other important thing to note is the jam organization’s dedication to keeping education accessible to all. ALL work created during the jam are uploaded under the <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">Attribution-NonCommercial-ShareAlike 4.0 Creative Commons license</a>.</p><p><a href="https://globalgamejam.org/legal-policies" target="_blank" rel="noopener">As they say on their site</a>:</p><blockquote><p>“This basically means the team that created the game, owns the original content and can do with it as they please, and that Global Game Jam® retains an original copy that other people can download, modify and distribute for non-commercial purposes. </p></blockquote><blockquote><p>“All files necessary to run the game, as well as all assets, source code and project files created during the GGJ and necessary to rebuild/compile &amp; link the game from scratch must be uploaded as well. Third party tools, libraries, engines and assets that are used for the game, but not created during the GGJ, may be omitted from the GGJ project submission. However, clear instructions must be included on how to purchase or obtain these resources in order to continue development on the game.”</p></blockquote><h2 id="My-Work"><a href="#My-Work" class="headerlink" title="My Work"></a>My Work</h2><p>This was my first time participating in a game jam and my first time participating in a large-scale programming meetup, ever. </p><p><img src="/images/posts/ggj-2019/screenshot-music.gif" alt="Screenshot of my music production process."></p><p>As part of my work with other groups, I ended up creating a <strong>music</strong> in addition to <strong>programming</strong> for my own group!</p><p><img src="/images/posts/ggj-2019/reggie-screenshot.png" alt="Screenshot of Reggie."></p><p>I supported fellow creators <a href="https://globalgamejam.org/users/dganimates" target="_blank" rel="noopener">Dillon Guscott</a> (3D Artist &amp; Animator), <a href="https://globalgamejam.org/users/smendez15" target="_blank" rel="noopener">Sharlene Mendez</a> (UI Design &amp; Art), and <a href="https://globalgamejam.org/users/theninjarabbit5" target="_blank" rel="noopener">Anna Karwacki</a> (Programming), in their project, <a href="https://globalgamejam.org/2019/games/reggie" target="_blank" rel="noopener"><em>Reggie</em></a> - it was submitted under the <code>Puzzle Design Challenge</code> (sponsored by <strong>Red Bull Mind Gamers</strong> and <strong>The Tetris Company</strong>) and <code>Language-Independence</code> (sponsored by <strong>Valve Software</strong>) diversifiers. You can find the game <a href="https://github.com/theninjarabbit5/GlobalGameJam2019" target="_blank" rel="noopener">here</a>.</p><p>During this game jam I worked with these technologies: <code>Blender (Open Source)</code>, <code>Maya</code>, <code>Photoshop</code>, <code>FL Studio</code>, <code>Native Instruments (Kontakt Komplete 11)</code>, and <code>Hexo (Static-Site Generator)</code>.</p><h2 id="Letting-Go"><a href="#Letting-Go" class="headerlink" title="Letting Go"></a><a href="https://globalgamejam.org/2019/games/letting-go" target="_blank" rel="noopener">Letting Go</a></h2><blockquote><p>Every home has a story. <em>What happens when home doesn’t want to let you go?</em> In this game, the player must appease the spirit of their home, taking care to pack away items of sentimental value as they prepare to move out of the family home. Haunting the player, the house leaves shuffles these items around, locks doors, and attempts to persuade them to stay by showing them old memories. Do you remember? While this experience is, sadly, unfinished, you can still walk around the space we have built!</p></blockquote><p><img src="/images/posts/ggj-2019/screenshot-1.png" alt="Screenshot of the game"></p><h3 id="A-Look-at-the-Team"><a href="#A-Look-at-the-Team" class="headerlink" title="A Look at the Team"></a>A Look at the Team</h3><p>Our team name was created by a collection of our initials: ‘<a href="https://rimij405.github.io/ggj19-gjaci-home/"><em>GJACI Games</em></a>‘.</p><p><img src="/images/posts/ggj-2019/logo.png" alt="Logo for our group."></p><h4 id="Environment-Artists"><a href="#Environment-Artists" class="headerlink" title="Environment Artists"></a>Environment Artists</h4><p><a href="https://globalgamejam.org/users/jb5913" target="_blank" rel="noopener">Jessica Bösherz (jb5913)</a><br><a href="https://globalgamejam.org/users/carenflohr" target="_blank" rel="noopener">Caren Flohr (carenflohr)</a></p><blockquote><p>Jessica and Caren worked to put together the environment and laid out many of the assets that were made available for us to use for the game jam.</p></blockquote><h4 id="Animations-amp-3D-Modelling"><a href="#Animations-amp-3D-Modelling" class="headerlink" title="Animations &amp; 3D Modelling"></a>Animations &amp; 3D Modelling</h4><p><a href="https://globalgamejam.org/users/gmac6422" target="_blank" rel="noopener">Grant Macwilliam (gmac6422)</a><br><a href="https://globalgamejam.org/users/carenflohr" target="_blank" rel="noopener">Caren Flohr (carenflohr)</a></p><blockquote><p>Grant and Caren were in charge of creating 3D models and for polishing animations.</p></blockquote><h4 id="Programmer"><a href="#Programmer" class="headerlink" title="Programmer"></a>Programmer</h4><p><a href="https://github.com/rimij405" target="_blank" rel="noopener">Ian Effendi (effendiian)</a></p><blockquote><p>I was the primary programmer for this game. I worked to get everyone’s art assets into Unity’s engine and troubleshooted errors that came up along the way. I also created our project’s <a href="https://rimij405.github.io/ggj19-gjaci-home/">blog</a> using Hexo!</p></blockquote><h4 id="Graphic-Artist"><a href="#Graphic-Artist" class="headerlink" title="Graphic Artist"></a>Graphic Artist</h4><p><a href="https://globalgamejam.org/users/angelbites" target="_blank" rel="noopener">Angel Gray (angelbites)</a></p><blockquote><p>Angel created some 2D art in the game, created GJACI Games’ logo, and developed the user interface for the game.</p></blockquote><p><img src="/images/posts/ggj-2019/screenshot-2.png" alt="Another screenshot of the game."></p><h2 id="Post-Mortem"><a href="#Post-Mortem" class="headerlink" title="Post-Mortem"></a>Post-Mortem</h2><p><img src="/images/posts/ggj-2019/screenshot-3.png" alt="Another screenshot of the game."></p><h3 id="Too-Many-Hats"><a href="#Too-Many-Hats" class="headerlink" title="Too-Many Hats"></a>Too-Many Hats</h3><p>Personally, I felt that I was spread thin between so many different projects. I really want to go back and revisit the work that I started in this context. Luckily the very permissive license projects are given upon submission to the game jam mean there’s an opportunity for me to go back and improve on those initial ideas. </p><p>Game development is an iterative process; I felt there was a disconnect between my work (as a programmer) and the artwork being completed by my peers. There was a lot more time-to-polish for my work than theirs! This helped me become more comfortable with working through messy work and pushing to get a stronger level of quality.</p><p>Every project that I’ve taken on since then has increased in difficulty and I’m getting closer and closer to meeting what I think is a desirable level of quality.</p><h3 id="Next-Steps"><a href="#Next-Steps" class="headerlink" title="Next Steps"></a>Next Steps</h3><p>I’m looking forward to revisiting some of my older game projects with this new experience. Most exciting is the prospect of taking a shot at creating my own experimental FPS game - I’ll likely be writing more about that as the idea takes shape and form.</p><p><img src="/images/posts/ggj-2019/screenshot-4.png" alt="Another screenshot of the game."></p><h2 id="See-More"><a href="#See-More" class="headerlink" title="See More"></a>See More</h2><p><a href="https://globalgamejam.org/2019/games/letting-go-working-title" target="_blank" rel="noopener">Global Game Jam Submission</a>.</p><p><a href="https://github.com/rimij405/ggj19-gjaci-home" target="_blank" rel="noopener">GitHub Repository</a>.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> hackathon </tag>
            
            <tag> meetup </tag>
            
            <tag> nodeJS </tag>
            
            <tag> react </tag>
            
            <tag> mental health </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mission: Authentication</title>
      <link href="/blog/cybersecurity/mission-authentication/"/>
      <url>/blog/cybersecurity/mission-authentication/</url>
      
        <content type="html"><![CDATA[<h1 id="Mission-Authentication"><a href="#Mission-Authentication" class="headerlink" title="Mission: Authentication"></a>Mission: Authentication</h1><p>Today’s little server-side experimentation dealt with ssh security and authentication. I’ll admit, I’ve been logging into my personal server using a password.</p><p>Before we dive into it, as a <strong>disclaimer</strong>:</p><blockquote><p><strong>I am in no way a cryptologist, cryptographer, or security expert. The material written here was taken from around the web, and, as all things, is subject to human error.</strong></p></blockquote><p>That <a href="https://simple.wikipedia.org/wiki/Cleartext" target="_blank" rel="noopener">cleartext</a> security information has been passing through my tunnels ever since I started working on that server. It was simply time to move one step up in the world of authentication - it was time to use some <em>cryptography</em>.</p><a id="more"></a><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>As always, I like to make sure I understand what it is I’m playing with. Cryptology? Cryptography? Aren’t they the same thing?</p><p>Well, according to <a href="https://crypto.stackexchange.com/users/23623/sejpm" target="_blank" rel="noopener">@SEJPM</a> and <a href="https://crypto.stackexchange.com/users/29574/lery" target="_blank" rel="noopener"><em>@Lery</em></a> over at the Crypto StackExchange, there are a couple of related terms that tend to be used <a href="https://crypto.stackexchange.com/questions/57818/is-there-any-difference-between-cryptography-and-cryptology" target="_blank" rel="noopener">interchangeably</a>.</p><h3 id="Semantics"><a href="#Semantics" class="headerlink" title="Semantics"></a>Semantics</h3><p>To get down to the semantics:</p><blockquote><p><em>Cryptology</em> is the study of cryptography (Definition 1.1) and cryptanalysis.</p></blockquote><p>In other words, it’s referred to as the, “science of cryptography.”</p><blockquote><p><em>Cryptography</em> is the study of mathematical techniques related to aspects of information security such as confidentiality, data integrity, entity authentication, and data origin authentication.</p></blockquote><p>Cryptography deals with the actual security, in practice. There’s also one other term:</p><blockquote><p><em>Cryptanalysis</em> is the study of mathematical techniques for attempting to defeat cryptographic techniques, and, more generally, information security services.</p></blockquote><p>That’s where the techniques are used to evaluate cryptographic practices. It’s good to keep these things in mind when we talk about modern cryptology.</p><h3 id="The-Past"><a href="#The-Past" class="headerlink" title="The Past"></a>The Past</h3><p>While the actual study of the practice is relatively young - <a href="https://access.redhat.com/blogs/766093/posts/1976023" target="_blank" rel="noopener">within 100 years, according to Huzaifa Sidhpurwala</a> - cryptography itself has been around for thousands of years. The encryption of messages by hand have been used to keep sensitive secrets away from prying eyes; one of the earliest known and simplest ciphers in history is known as the <a href="http://practicalcryptography.com/ciphers/caesar-cipher/" target="_blank" rel="noopener">Caeser cipher, or substitution cipher</a>. It took it’s name from Julius Caeser who used it to keep military communications secret.</p><h3 id="The-Now"><a href="#The-Now" class="headerlink" title="The Now"></a>The Now</h3><p>Security on the interet, in some ways, hasn’t changed. We still encrypt our text and we still rely on messages that travel between endpoints. Today we use public-key cryptography, or asymmetric cryptography, in various sceruity models ranging from authentication, authorization, and more.</p><h2 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h2><p>When our client reaches out to our server/host, one crucial part in the step is to authenticate both parties.</p><h3 id="Client-Side"><a href="#Client-Side" class="headerlink" title="Client-Side"></a>Client-Side</h3><p>On the client-side, this might look like a host key fingerprint. By keeping track of this information, the client can verify that the host on the other side of the connection is, in fact, who they say they are.</p><h3 id="Server-Side"><a href="#Server-Side" class="headerlink" title="Server-Side"></a>Server-Side</h3><p>If the server is given a public key by the client, it can check to ensure the client has the accompanying private key whenever it connects. If the key is given passphrase protection, the client is responsible for authenticating the key before it can be trusted by the server as well!</p><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><p>Secure Shell (SSH) is a cryptographic <a href="https://man.openbsd.org/ssh.1" target="_blank" rel="noopener">remote login program</a>, providing a secure channel over an unsecured network in client-server architecture. We can use applications that leverage this protocol to do things like manage files remotely, update repositories, and transfer files.</p><p><img src="/images/posts/mission-authentication/pankaj-patel-large.jpg" alt="Screenshot of GitHub ssh session - Image by Pankaj Patel"></p><p>One strategy for securing this channel is through the use of the public-key cryptography. With great power comes great responsibility: the ability to execute command remotely is great for DevOps and sysadmins, but, the remote communication can be exposed to a lot of third-party actors.</p><p><strong>PasswordAuthentication</strong></p><p>Logging into a secure shell remotely can vary depending on the host’s settings, but, for the most part, clients typically connect to a host by providing a username, hostname, and port. The most basic of authentication allows users to enter a password (that is sent as cleartext) over the network. While this is the easiest way to remote login to a server, it’s also the least secure.</p><p><strong>ChallengeResponseAuthentication</strong></p><p>Similar to PasswordAuthentication, users have to enter a password through a keyboard-interactive terminal in order to successfully authenticate their client to the host. Unlike PasswordAuthentication, this Authentication protocol can vary in security. Sometimes known as the <a href="https://en.wikipedia.org/wiki/Challenge-Handshake_Authentication_Protocol" target="_blank" rel="noopener">Challenge-Handshake Authentication Protocol</a> (CHAP), the host issues a challenge to the client. Once received, the client will combine that challenge with a secret that’s shared between them - this is usually the password - and calculate a hashed value from it, before sending that value back to the host. The host, which should have the expected shared secret already stored, will calculate the expected value on its end before comparing it to the response from the client. If the challenge is successfully met (meaning the user input the correct shared secret), the authentication is considered successful. Some versions will allow the host to send new challenges to the client at random intervals to continually check the authenticity of the client.</p><h3 id="Key-Fingerprints"><a href="#Key-Fingerprints" class="headerlink" title="Key Fingerprints"></a>Key Fingerprints</h3><p>In public-key cryptography, a public key fingerprint is a short sequence of bytes used to identify a longer public key. Fingerprints are created by applying a cryptographic hash function to a public key. Since fingerprints are shorter than the keys they refer to, they can be used to simplify certain key management tasks.</p><p>These keys are meant to be human readable for the purposes of identification: often public keys will be encoded into hexadecimal strings like below:</p><p><code>43:51:43:a1:b5:fc:8b:b7:0a:3a:a9:b1:0f:66:73:a8</code></p><p>Fingerprints won’t always look like the MD5 hash above. SHA-1 fingerprints are often nothing more than a string of hexadecimal digits: <code>2fd4e1c67a2d28fced849ee1bb76e7391b93eb12</code>.</p><h3 id="ssh-keygen"><a href="#ssh-keygen" class="headerlink" title="ssh-keygen"></a>ssh-keygen</h3><p><code>ssh-keygen</code> is a command line tool that <a href="https://man.openbsd.org/ssh-keygen.1" target="_blank" rel="noopener">generates, manages, and converts authentication keys</a> for SSH. Keys generated with this tool default to the OpenSSH-specific format. Generally, a user will generate the public key and indicate where to store the private key, before protecting them with a passphrase. While the names can be changed, in the OpenSSH format, private keys are stored in plaintext without a file extension and public keys are given the, ‘.pub’ file extension. Although they are stored in plaintext, the data held inside them is a mix of randomly generated content based on an crpytographic algorithm. Knowing the content of one file in isolation does little to risk the host as they can easily be revoked. (This does, however, require the sysadmin know of a breach).</p><p>The tool can also be used to check the fingerprints of certain keys! Host keys are created without a passphrase as they serve as identity markers more so than authentication checks.</p><p>The following command takes a public host key created with the ED25519 algorithm, and outputs the fingerprint as an MD5 hash:</p><p><code>ssh-keygen -l -E md5 -f ssh_host_ed25519_key.pub</code>.</p><p>By default, the fingerprint command will display a SHA256 hash:</p><p><code>ssh-keygen -lf ssh_host_ed25519_key.pub</code></p><p>Knowing how to get a particular formatted hash is important when checking if a host’s fingerprint has changed.</p><h3 id="PuTTY"><a href="#PuTTY" class="headerlink" title="PuTTY"></a>PuTTY</h3><p>One method for setting up SSH Public-key cryptography is with <a href="https://www.putty.org/" target="_blank" rel="noopener">PuTTY</a>, a terminal emulator that can act as a client for SSH, Telnet, rlogin, and raw TCP communication protocols.</p><p>PuTTY is joined by a few additional applications that are often run in its suite, such as PuTTYgen, an asymmetric cryptography key generation utility. Their application allows you to generate a public and private key for use in the system. In this case, private keys can be exported to the open-source OpenSSH format or as a PuTTY Private-key (*.ppk) file, a propriatary format.</p><p>You can also control the host key algorithm preference when authenticating to a host for the first time. If a client doesn’t have a key in one algorithm, it will move onto the next algorithm in the preference list.</p><h3 id="ssh-agent"><a href="#ssh-agent" class="headerlink" title="ssh-agent"></a>ssh-agent</h3><p>The <code>ssh-agent</code> is a program that <a href="https://man.openbsd.org/ssh-agent.1" target="_blank" rel="noopener">holds private keys used for public-key cryptography authentication</a>. Initially, a system’s ssh-agent will not have any private keys, but, as users <code>ssh-add</code> private keys to the client, they’ll be able to authenticate automatically when the host requests their key.</p><p>The general process is to generate both a public and private key, before placing the public key on the host. The client keeps track of the local private key and presents it upon SSH login to a remote host. When the host uses the public key to request the private key, if the client does not have the private key, times out, or cannot enter the correct passphrase after a set amount of attempts, the authentication process will fail.</p><h2 id="Final-Thoughts"><a href="#Final-Thoughts" class="headerlink" title="Final Thoughts"></a>Final Thoughts</h2><p>Certifications on the Secure Socket Layer and Secure Shell logins both require public-key cryptography in order to remain secure. These algorithms are not bullet proof, but, they can take a very long time to brute force and crack.</p><p>At the end of the day, keys are generated in a pseudorandom process; it will always remain theoretically possible to crack algorithmic security systems, so long as there is an infinite amount of time and processing power.</p><p>That shouldn’t scare you from securing your server and your platforms! It is unrealistic to expect anyone to crack the toughest of algorithms (short of an unknown backdoor exploitation) within any sort of reasonable amount of time, in today’s age of technological dreams.</p><p>While I’m not new to being a system admin for Linux-based servers, I am paying more attention to the security that protects my data and information. You should too!</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> cybersecurity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> personal </tag>
            
            <tag> tutorial </tag>
            
            <tag> ssh </tag>
            
            <tag> authentication </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next Steps</title>
      <link href="/blog/hfoss/next-steps/"/>
      <url>/blog/hfoss/next-steps/</url>
      
        <content type="html"><![CDATA[<h1 id="The-Way-It-Goes"><a href="#The-Way-It-Goes" class="headerlink" title="The Way It Goes"></a>The Way It Goes</h1><p>I recently read <a href="https://dev.to/dechamp/25-years-of-coding-and-im-just-beginning-442n" target="_blank" rel="noopener">25 years of coding, and I’m just beginning</a> by dev.to user DeChamp, and found some intriguing responses across the web. One particular <a href="https://www.pskirko.com/2019/01/20/re-25-years-of-coding/" target="_blank" rel="noopener">Re:</a> came from <a href="https://www.pskirko.com/" target="_blank" rel="noopener">Peter Skirko</a>. Rather than read back the very relatable thoughts and ideas they both covered, as pertains to development, I thought I’d begin with it to share where my mental state has recently turned to.</p><a id="more"></a><h2 id="The-Next-Steps"><a href="#The-Next-Steps" class="headerlink" title="The Next Steps"></a>The Next Steps</h2><p>I chose to use the <a href="https://jamstack.org" target="_blank" rel="noopener">JAMStack</a> to <a href="/blog/hfoss/hello-world/" title="build my website">build my website</a> because it should be quick, painless, and easy to write posts and get them published to the live site. This post, in some ways, is a test of that. That brings me to figuring out the next steps for my blog. While I want to add much, much more in terms of a portfolio, at the time of making this post, this site is half-baked. I’m afraid that if someone comes onto the website in its current state, it’ll reflect poorly on my own work. <em>But, maybe that’s the motivation I’ve been looking for.</em></p><p><strong>I think that it’s time to keep working.</strong> By that, I mean I need to cover up the potholes and make sure that I finish what I start - all before I add more features. This means cleaning up broken links and adding little bits at a time. Keeping the momentum in building this living site will ensure that I learn more about the Hexo static-site generator as time goes on. Maybe, I’ll contribute additional resources to the generator’s documentation wherever I can!</p><h2 id="Roadmap"><a href="#Roadmap" class="headerlink" title="Roadmap"></a>Roadmap</h2><ul><li>Clean up any missing links/pages/sections. (This will require getting acquainted with some of Hexo’s features).</li><li>Add an About page.</li><li>Learn more about the .ejs template language that came with this blog’s theme!</li><li>Customize the theme!?!?</li><li>Read up about schema! (I’ll be looking at <a href="https://schema.org/docs/gs.html#microdata_how" target="_blank" rel="noopener">schema.org</a>.)</li><li>Continue writing this Roadmap!</li></ul>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> personal </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>It Started With a Bang!</title>
      <link href="/blog/hfoss/hello-world/"/>
      <url>/blog/hfoss/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="It-Started-With-a-BANG"><a href="#It-Started-With-a-BANG" class="headerlink" title="It Started With a BANG"></a>It Started With a BANG</h1><p>At least, I wish creating a personal website was as cinematic and bombastic as a Michael Bay-directed Transformers film. Alas, as with most projects, it takes a little bit of research to know what we’re getting into. Let’s take a look at how this site was made, shall we?</p><a id="more"></a><h2 id="First-Flight"><a href="#First-Flight" class="headerlink" title="First Flight"></a>First Flight</h2><h3 id="IRC"><a href="#IRC" class="headerlink" title="IRC"></a>IRC</h3><p>I decided to use <a href="https://hexchat.github.io/" target="_blank" rel="noopener">HexChat</a>, and registered my nick: effendiian.</p><h3 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h3><p>I signed up for the <a href="https://lists.rit.edu/mailman/listinfo.mmcgi/floss-seminar" target="_blank" rel="noopener">floss-seminar discussion</a> mailing list!</p><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>Finally I was ready to work on my blog. After I put on my Spotify playlist of, “<a href="https://open.spotify.com/user/1271966423/playlist/6MlIJGplHSLlgmQgb0BKpw?si=khc3sdT-Sce904oMTdbeKQ" target="_blank" rel="noopener">Iconic, Inspirational, and Intriguing</a>“ orcheastral music, it was time to get to work. Before I could choose a framework to get started with, I needed to <em>know</em> what it was that I wanted to create.</p><h3 id="Priority-Features"><a href="#Priority-Features" class="headerlink" title="Priority Features"></a>Priority Features</h3><p>The term <a href="https://en.wiktionary.org/wiki/blog" target="_blank" rel="noopener"><em>blog</em></a> is the shortened form of <em>weblog</em>, a term coined by Jorn Barger in the early days of the internet. It’s a space for authors to journal thoughts and share them publicly. As such, there are a series of features expected of modern blog format websites.</p><ul><li><strong>Publish posts</strong>. It’s important that the time it takes to write and publish entries is quick, painless, and easy. The simpler the process is, the better.</li><li><strong>Use an RSS feed</strong>. This is necessary for my own personal needs; RSS/ATOM feeds are incredibly useful for aggregators and I would like to incorporate that with my solution.</li><li><strong>Open source</strong>. A big part of my work is going to emphasize open source technologies. It’s only fitting that the blog itself is built with open source tools as well.</li><li><strong>Free hosting</strong>. Less of a user feature and more of a development limitation, the website needs to be hosted for free. The budget is nil. Zilch. Nada. Free.</li></ul><h3 id="Secondary-Features"><a href="#Secondary-Features" class="headerlink" title="Secondary Features"></a>Secondary Features</h3><p>These additional features are great for quality of life and I kept them in mind while searching for the tools that I would use in order to make the blog.</p><ul><li><strong>Multimedia support</strong>. Not all my work involves code. Graphic design, artwork, and animations that I create should be able to reside on the website.</li><li><strong>Customizable Theme</strong>. I like to have control over my website’s layout. This way, I can iterate the design across several periods of development, instead of implementing everything all at once.</li><li><strong>Comment System</strong>. Allowing people to comment on my articles would not be a bad idea.</li></ul><h2 id="What-Type-of-Website"><a href="#What-Type-of-Website" class="headerlink" title="What Type of Website"></a>What Type of Website</h2><p>I’ll be hosting my website on GitHub using <a href="https://help.github.com/articles/using-a-static-site-generator-other-than-jekyll/" target="_blank" rel="noopener"><strong>GitHub Pages</strong></a> - but I won’t be using <a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>. Instead, I’ll be using the static-site generator Hexo, for these reasons:</p><ul><li><strong>Easy GitHub Pages publishing</strong>. While Jekyll does have GitHub pages support and integration, the differences needed in order to host Hexo’s generated sites are minimal.</li><li><strong>Extensibility with NodeJS</strong>. The NodeJS integration delivers the rich package ecosystem on npm (and yarn) to Hexo developers.</li><li><strong>Speedy</strong>. Node is speedy; as a result, Hexo generates its static files in a matter of seconds. This is one advantage to using Hexo over Jekyll:</li><li><strong>Unopinionated Asset Handling</strong>. Unlike Jekyll, Hexo doesn’t come with an asset pipeline for pre-processing assests by default. Instead, you’re encouraged to roll what works for your setup using Node utilities.</li><li><strong>Template How You Want To</strong>. Hexo contains support for several types of templating engines, including <a href="https://github.com/paularmstrong/swig" target="_blank" rel="noopener">Swig</a> (by default), <a href="https://github.com/hexojs/hexo-renderer-ejs" target="_blank" rel="noopener">EJS</a>, <a href="https://github.com/hexojs/hexo-renderer-haml" target="_blank" rel="noopener">Haml</a>, and <a href="https://github.com/hexojs/hexo-renderer-jade" target="_blank" rel="noopener">Jade</a>/<a href="https://github.com/maxknee/hexo-render-pug" target="_blank" rel="noopener">Pug</a>. Although good, Jekyll is limited to the Liquid templating engine.</li><li><strong>Local CMS</strong>. Both Hexo and Jekyll have this option that isn’t true for all static-site generators; access to a local development CMS through <a href="https://github.com/jaredly/hexo-admin" target="_blank" rel="noopener">Hexo Admin</a> and <a href="https://github.com/jekyll/jekyll-admin" target="_blank" rel="noopener">Jekyll Admin</a>, respectively.</li></ul><h2 id="The-JAMStack"><a href="#The-JAMStack" class="headerlink" title="The JAMStack"></a>The JAMStack</h2><p>By using Hexo to create content and hosting my static content on GitHub Pages, we end up with a website that’s been built on what’s known as the <a href="https://jamstack.org/" target="_blank" rel="noopener">JAMStack</a>.</p><blockquote><p><strong>J</strong>avaScript<br><strong>A</strong>PIs<br><strong>M</strong>arkup</p></blockquote><p>JAM is sticky and it holds the pieces all together. There are benefits (as listed on <a href="https://jamstack.org/best-practices/" target="_blank" rel="noopener">their site</a>) that come with using this stack.</p><h2 id="Working-With-Hexo"><a href="#Working-With-Hexo" class="headerlink" title="Working With Hexo"></a>Working With Hexo</h2><p>Hexo’s extensibility offers a lot of power if you’re willing to put in the extra work to set things up. By default, Hexo projects are initialized with a standard set of plugins and is installed with the default theme, <a href="https://github.com/hexojs/hexo-theme-landscape" target="_blank" rel="noopener">Landscape</a>.</p><h3 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h3><p>I used these additional plugins while setting up the site:</p><ul><li><a href="https://github.com/adamsiwiec/hexagon" target="_blank" rel="noopener">Hexagon</a> - Package manager for installing Hexo plugins and themes.</li><li><a href="https://github.com/hexojs/hexo-generator-archive" target="_blank" rel="noopener">Archive Generator</a> - Generates a blog post archive.</li><li><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">Feed Generator</a> - Generates feed for ATOM or RSS2 aggregators.</li><li><a href="https://www.npmjs.com/package/hexo-generator-search" target="_blank" rel="noopener">Search Generator</a> - Generates a search index with configuration options available.</li><li><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">Git Deployer</a> - Allows Hexo to deploy to a git repository.</li></ul><h3 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h3><p>I used this theme for my website:</p><ul><li><a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener">Cactus (Dark)</a>.</li></ul><p>This should give a good overview of how this website was created. All that’s left is to put up some posts on the website itself!</p><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><p>I used the following open source tools during the creation of this website.</p><h3 id="Joplin"><a href="#Joplin" class="headerlink" title="Joplin"></a><a href="https://joplin.cozic.net/" target="_blank" rel="noopener">Joplin</a></h3><p>Joplin is a free, open source note taking and to-do application, which can handle a large number of notes organised into notebooks. The notes are searchable, can be copied, tagged and modified either from the applications directly or from your own text editor. The notes are in Markdown format. This was useful for drafting blog posts and keeping track of all the resources I needed to use.</p><h3 id="Draw-io"><a href="#Draw-io" class="headerlink" title="Draw.io"></a><a href="https://github.com/jgraph/drawio/blob/master/LICENSE" target="_blank" rel="noopener">Draw.io</a></h3><p>Useful for putting up wireframes when designing website layouts.</p><h3 id="Hexo-gitignore"><a href="#Hexo-gitignore" class="headerlink" title="Hexo .gitignore"></a><a href="https://gist.github.com/spacemonkey/0a9a69004c11f82fc894" target="_blank" rel="noopener">Hexo .gitignore</a></h3><p>Used this .gitignore file as the base of my own.</p><h3 id="Real-Favicon-Generator"><a href="#Real-Favicon-Generator" class="headerlink" title="Real Favicon Generator"></a><a href="https://realfavicongenerator.net/" target="_blank" rel="noopener">Real Favicon Generator</a></h3><p>Used to create the favicon for the browser and for other application platforms (iOS, Android, etc.).</p><h3 id="Game-Icons"><a href="#Game-Icons" class="headerlink" title="Game-Icons"></a><a href="https://game-icons.net/" target="_blank" rel="noopener">Game-Icons</a></h3><p>Ever growing collection of free game icons. PNG and SVG file formats available.</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
          <category> hfoss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> class </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
